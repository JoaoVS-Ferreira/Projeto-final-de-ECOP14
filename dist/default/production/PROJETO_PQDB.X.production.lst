

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 14 10:46:29 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4520 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  001B4E                     __pidataCOMRAM:
    86                           	opt callstack 0
    87                           
    88                           ;initializer for _y
    89  001B4E  0002               	dw	2
    90  001B50  0001               	dw	1
    91  001B52  0003               	dw	3
    92  001B54  0008               	dw	8
    93  001B56  0001               	dw	1
    94  001B58  0005               	dw	5
    95                           
    96                           ;initializer for _x
    97  001B5A  0004               	dw	4
    98  001B5C  0002               	dw	2
    99  001B5E  0006               	dw	6
   100  001B60  0008               	dw	8
   101  001B62  0006               	dw	6
   102  001B64  0009               	dw	9
   103                           
   104                           	psect	smallconst
   105  000600                     __psmallconst:
   106                           	opt callstack 0
   107  000600  00                 	db	0
   108  000601                     _valor:
   109                           	opt callstack 0
   110  000601  3F                 	db	63
   111  000602  06                 	db	6
   112  000603  5B                 	db	91
   113  000604  4F                 	db	79
   114  000605  66                 	db	102
   115  000606  6D                 	db	109
   116  000607  7D                 	db	125
   117  000608  07                 	db	7
   118  000609  7F                 	db	127
   119  00060A  6F                 	db	111
   120  00060B  77                 	db	119
   121  00060C  7C                 	db	124
   122  00060D  39                 	db	57
   123  00060E  5E                 	db	94
   124  00060F  79                 	db	121
   125  000610  71                 	db	113
   126  000611                     __end_of_valor:
   127                           	opt callstack 0
   128  000611                     _charKey:
   129                           	opt callstack 0
   130  000611  55                 	db	85
   131  000612  4C                 	db	76
   132  000613  44                 	db	68
   133  000614  52                 	db	82
   134  000615  53                 	db	83
   135  000616  58                 	db	88
   136  000617  41                 	db	65
   137  000618  42                 	db	66
   138  000619  59                 	db	89
   139  00061A  73                 	db	115
   140  00061B                     __end_of_charKey:
   141                           	opt callstack 0
   142  0000                     _T0CON	set	4053
   143  0000                     _TMR0L	set	4054
   144  0000                     _TMR0H	set	4055
   145  0000                     _INTCON	set	4082
   146  0000                     _ADCON1	set	4033
   147  0000                     _TRISE	set	3990
   148  0000                     _TRISD	set	3989
   149  0000                     _TRISC	set	3988
   150  0000                     _TRISB	set	3987
   151  0000                     _TRISA	set	3986
   152  0000                     _PORTE	set	3972
   153  0000                     _PORTD	set	3971
   154  0000                     _PORTC	set	3970
   155  0000                     _PORTB	set	3969
   156  0000                     _PORTA	set	3968
   157  00061B                     STR_10:
   158  00061B  39                 	db	57	;'9'
   159  00061C  20                 	db	32
   160  00061D  3F                 	db	63	;'?'
   161  00061E  20                 	db	32
   162  00061F  35                 	db	53	;'5'
   163  000620  20                 	db	32
   164  000621  3D                 	db	61	;'='
   165  000622  20                 	db	32
   166  000623  34                 	db	52	;'4'
   167  000624  35                 	db	53	;'5'
   168  000625  00                 	db	0
   169  000626                     STR_8:
   170  000626  38                 	db	56	;'8'
   171  000627  20                 	db	32
   172  000628  3F                 	db	63	;'?'
   173  000629  20                 	db	32
   174  00062A  38                 	db	56	;'8'
   175  00062B  20                 	db	32
   176  00062C  3D                 	db	61	;'='
   177  00062D  20                 	db	32
   178  00062E  31                 	db	49	;'1'
   179  00062F  00                 	db	0
   180  000630                     STR_7:
   181  000630  36                 	db	54	;'6'
   182  000631  20                 	db	32
   183  000632  3F                 	db	63	;'?'
   184  000633  20                 	db	32
   185  000634  33                 	db	51	;'3'
   186  000635  20                 	db	32
   187  000636  3D                 	db	61	;'='
   188  000637  20                 	db	32
   189  000638  32                 	db	50	;'2'
   190  000639  00                 	db	0
   191  00063A                     STR_6:
   192  00063A  32                 	db	50	;'2'
   193  00063B  20                 	db	32
   194  00063C  3F                 	db	63	;'?'
   195  00063D  20                 	db	32
   196  00063E  31                 	db	49	;'1'
   197  00063F  20                 	db	32
   198  000640  3D                 	db	61	;'='
   199  000641  20                 	db	32
   200  000642  33                 	db	51	;'3'
   201  000643  00                 	db	0
   202  000644                     STR_9:
   203  000644  36                 	db	54	;'6'
   204  000645  20                 	db	32
   205  000646  3F                 	db	63	;'?'
   206  000647  20                 	db	32
   207  000648  31                 	db	49	;'1'
   208  000649  20                 	db	32
   209  00064A  3D                 	db	61	;'='
   210  00064B  20                 	db	32
   211  00064C  35                 	db	53	;'5'
   212  00064D  00                 	db	0
   213  00064E                     STR_5:
   214  00064E  34                 	db	52	;'4'
   215  00064F  20                 	db	32
   216  000650  3F                 	db	63	;'?'
   217  000651  20                 	db	32
   218  000652  32                 	db	50	;'2'
   219  000653  20                 	db	32
   220  000654  3D                 	db	61	;'='
   221  000655  20                 	db	32
   222  000656  38                 	db	56	;'8'
   223  000657  00                 	db	0
   224  000658                     STR_3:
   225  000658  20                 	db	32
   226  000659  20                 	db	32
   227  00065A  2A                 	db	42
   228  00065B  00                 	db	0
   229  00065C                     STR_1:
   230  00065C  20                 	db	32
   231  00065D  20                 	db	32
   232  00065E  2B                 	db	43
   233  00065F  00                 	db	0
   234  000660                     STR_2:
   235  000660  20                 	db	32
   236  000661  20                 	db	32
   237  000662  2D                 	db	45
   238  000663  00                 	db	0
   239  000664                     STR_4:
   240  000664  20                 	db	32
   241  000665  20                 	db	32
   242  000666  2F                 	db	47
   243  000667  00                 	db	0
   244                           
   245                           ; #config settings
   246  000668  00                 	db	0	; dummy byte at the end
   247  0000                     
   248                           	psect	cinit
   249  001A00                     __pcinit:
   250                           	opt callstack 0
   251  001A00                     start_initialization:
   252                           	opt callstack 0
   253  001A00                     __initialization:
   254                           	opt callstack 0
   255                           
   256                           ; Initialize objects allocated to COMRAM (24 bytes)
   257                           ; load TBLPTR registers with __pidataCOMRAM
   258  001A00  0E4E               	movlw	low __pidataCOMRAM
   259  001A02  6EF6               	movwf	tblptrl,c
   260  001A04  0E1B               	movlw	high __pidataCOMRAM
   261  001A06  6EF7               	movwf	tblptrh,c
   262  001A08  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   263  001A0A  6EF8               	movwf	tblptru,c
   264  001A0C  EE00  F01C         	lfsr	0,__pdataCOMRAM
   265  001A10  EE10 F018          	lfsr	1,24
   266  001A14                     copy_data0:
   267  001A14  0009               	tblrd		*+
   268  001A16  CFF5 FFEE          	movff	tablat,postinc0
   269  001A1A  50E5               	movf	postdec1,w,c
   270  001A1C  50E1               	movf	fsr1l,w,c
   271  001A1E  E1FA               	bnz	copy_data0
   272                           
   273                           ; Clear objects allocated to COMRAM (22 bytes)
   274  001A20  EE00  F034         	lfsr	0,__pbssCOMRAM
   275  001A24  0E16               	movlw	22
   276  001A26                     clear_0:
   277  001A26  6AEE               	clrf	postinc0,c
   278  001A28  06E8               	decf	wreg,f,c
   279  001A2A  E1FD               	bnz	clear_0
   280  001A2C                     end_of_initialization:
   281                           	opt callstack 0
   282  001A2C                     __end_of__initialization:
   283                           	opt callstack 0
   284  001A2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  001A2E  6EF8               	movwf	tblptru,c
   286  001A30  0100               	movlb	0
   287  001A32  EF14  F00A         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290  000034                     __pbssCOMRAM:
   291                           	opt callstack 0
   292  000034                     _tempo:
   293                           	opt callstack 0
   294  000034                     	ds	2
   295  000036                     _tecla:
   296                           	opt callstack 0
   297  000036                     	ds	2
   298  000038                     kpDebounce@oldRead:
   299                           	opt callstack 0
   300  000038                     	ds	2
   301  00003A                     kpDebounce@newRead:
   302                           	opt callstack 0
   303  00003A                     	ds	2
   304  00003C                     _keys:
   305                           	opt callstack 0
   306  00003C                     	ds	2
   307  00003E                     _pos1:
   308                           	opt callstack 0
   309  00003E                     	ds	1
   310  00003F                     _gabarito:
   311                           	opt callstack 0
   312  00003F                     	ds	1
   313  000040                     _resposta:
   314                           	opt callstack 0
   315  000040                     	ds	1
   316  000041                     _op:
   317                           	opt callstack 0
   318  000041                     	ds	1
   319  000042                     _verifica:
   320                           	opt callstack 0
   321  000042                     	ds	1
   322  000043                     _v3:
   323                           	opt callstack 0
   324  000043                     	ds	1
   325  000044                     _v2:
   326                           	opt callstack 0
   327  000044                     	ds	1
   328  000045                     _v1:
   329                           	opt callstack 0
   330  000045                     	ds	1
   331  000046                     _v0:
   332                           	opt callstack 0
   333  000046                     	ds	1
   334  000047                     _display:
   335                           	opt callstack 0
   336  000047                     	ds	1
   337  000048                     kpDebounce@tempo:
   338                           	opt callstack 0
   339  000048                     	ds	1
   340  000049                     _started:
   341                           	opt callstack 0
   342  000049                     	ds	1
   343                           
   344                           	psect	dataCOMRAM
   345  00001C                     __pdataCOMRAM:
   346                           	opt callstack 0
   347  00001C                     _y:
   348                           	opt callstack 0
   349  00001C                     	ds	12
   350  000028                     _x:
   351                           	opt callstack 0
   352  000028                     	ds	12
   353                           
   354                           	psect	cstackCOMRAM
   355  000001                     __pcstackCOMRAM:
   356                           	opt callstack 0
   357  000001                     ??_kpReadKey:
   358  000001                     ?_digitalRead:
   359                           	opt callstack 0
   360  000001                     ?_kpRead:
   361                           	opt callstack 0
   362  000001                     ?___awdiv:
   363                           	opt callstack 0
   364  000001                     ?___lwdiv:
   365                           	opt callstack 0
   366  000001                     ssdDigit@pos:
   367                           	opt callstack 0
   368  000001                     digitalWrite@pin:
   369                           	opt callstack 0
   370  000001                     digitalRead@pin:
   371                           	opt callstack 0
   372  000001                     pinMode@pin:
   373                           	opt callstack 0
   374  000001                     delayMicro@a:
   375                           	opt callstack 0
   376  000001                     delayMili@a:
   377                           	opt callstack 0
   378  000001                     atraso_ms@num:
   379                           	opt callstack 0
   380  000001                     ___awdiv@dividend:
   381                           	opt callstack 0
   382  000001                     ___lwdiv@dividend:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x0
   386  000001                     	ds	1
   387  000002                     ssdDigit@val:
   388                           	opt callstack 0
   389                           
   390                           ; 1 bytes @ 0x1
   391  000002                     	ds	1
   392  000003                     ??_digitalRead:
   393  000003                     ??_delayMili:
   394  000003                     digitalWrite@value:
   395                           	opt callstack 0
   396  000003                     pinMode@type:
   397                           	opt callstack 0
   398  000003                     atraso_ms@i:
   399                           	opt callstack 0
   400  000003                     ___awdiv@divisor:
   401                           	opt callstack 0
   402  000003                     ___lwdiv@divisor:
   403                           	opt callstack 0
   404                           
   405                           ; 2 bytes @ 0x2
   406  000003                     	ds	1
   407  000004                     kpReadKey@i:
   408                           	opt callstack 0
   409  000004                     delayMili@i:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x3
   413  000004                     	ds	1
   414  000005                     ??_pinMode:
   415  000005                     ??_digitalWrite:
   416  000005                     atraso_ms@j:
   417                           	opt callstack 0
   418  000005                     ___awdiv@counter:
   419                           	opt callstack 0
   420  000005                     ___lwdiv@quotient:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424  000005                     	ds	1
   425  000006                     atraso_ms@k:
   426                           	opt callstack 0
   427  000006                     ___awdiv@sign:
   428                           	opt callstack 0
   429                           
   430                           ; 1 bytes @ 0x5
   431  000006                     	ds	1
   432  000007                     ___lwdiv@counter:
   433                           	opt callstack 0
   434  000007                     turnOn@led:
   435                           	opt callstack 0
   436  000007                     turnOff@led:
   437                           	opt callstack 0
   438  000007                     soWrite@value:
   439                           	opt callstack 0
   440  000007                     ___awdiv@quotient:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x6
   444  000007                     	ds	1
   445  000008                     ?___lwmod:
   446                           	opt callstack 0
   447  000008                     ___lwmod@dividend:
   448                           	opt callstack 0
   449                           
   450                           ; 2 bytes @ 0x7
   451  000008                     	ds	1
   452  000009                     soWrite@i:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x8
   456  000009                     	ds	1
   457  00000A                     ??_kpDebounce:
   458  00000A                     ??_ssdUpdate:
   459  00000A                     pushNibble@rs:
   460                           	opt callstack 0
   461  00000A                     pushByte@rs:
   462                           	opt callstack 0
   463  00000A                     ___lwmod@divisor:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x9
   467  00000A                     	ds	2
   468  00000C                     ??_pushByte:
   469  00000C                     pushNibble@value:
   470                           	opt callstack 0
   471  00000C                     ___lwmod@counter:
   472                           	opt callstack 0
   473                           
   474                           ; 1 bytes @ 0xB
   475  00000C                     	ds	1
   476  00000D                     pushByte@value:
   477                           	opt callstack 0
   478  00000D                     kpDebounce@i:
   479                           	opt callstack 0
   480  00000D                     cronometro@v0:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0xC
   484  00000D                     	ds	1
   485  00000E                     lcdCommand@value:
   486                           	opt callstack 0
   487  00000E                     lcdChar@value:
   488                           	opt callstack 0
   489                           
   490                           ; 1 bytes @ 0xD
   491  00000E                     	ds	1
   492  00000F                     lcdString@msg:
   493                           	opt callstack 0
   494  00000F                     cronometro@v1:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0xE
   498  00000F                     	ds	2
   499  000011                     ??_lcdString:
   500  000011                     cronometro@v2:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x10
   504  000011                     	ds	2
   505  000013                     lcdString@i:
   506                           	opt callstack 0
   507  000013                     cronometro@v3:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x12
   511  000013                     	ds	2
   512  000015                     ??_geraconta:
   513                           
   514                           ; 1 bytes @ 0x14
   515  000015                     	ds	2
   516  000017                     ??_leTeclado:
   517                           
   518                           ; 1 bytes @ 0x16
   519  000017                     	ds	2
   520  000019                     ??_main:
   521                           
   522                           ; 1 bytes @ 0x18
   523  000019                     	ds	2
   524  00001B                     main@slot:
   525                           	opt callstack 0
   526                           
   527                           ; 1 bytes @ 0x1A
   528  00001B                     	ds	1
   529                           
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 142 in file "main.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  slot            1   26[COMRAM] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   549 ;;      Params:         0       0       0       0       0       0       0
   550 ;;      Locals:         1       0       0       0       0       0       0
   551 ;;      Temps:          2       0       0       0       0       0       0
   552 ;;      Totals:         3       0       0       0       0       0       0
   553 ;;Total ram usage:        3 bytes
   554 ;; Hardware stack levels required when called:    8
   555 ;; This function calls:
   556 ;;		_atraso_ms
   557 ;;		_cronometro
   558 ;;		_geraconta
   559 ;;		_kpDebounce
   560 ;;		_kpInit
   561 ;;		_lcdInit
   562 ;;		_leTeclado
   563 ;;		_ssdInit
   564 ;;		_ssdUpdate
   565 ;;		_timerInit
   566 ;; This function is called by:
   567 ;;		Startup code after reset
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text0
   572  001428                     __ptext0:
   573                           	opt callstack 0
   574  001428                     _main:
   575                           	opt callstack 23
   576  001428                     
   577                           ;main.c: 143:     char slot;;main.c: 144:     lcdInit();
   578  001428  ECBA  F009         	call	_lcdInit	;wreg free
   579                           
   580                           ;main.c: 145:     kpInit();
   581  00142C  EC1B  F00D         	call	_kpInit	;wreg free
   582                           
   583                           ;main.c: 146:     ssdInit();
   584  001430  EC43  F00C         	call	_ssdInit	;wreg free
   585                           
   586                           ;main.c: 147:     timerInit();
   587  001434  ECB8  F00D         	call	_timerInit	;wreg free
   588  001438                     
   589                           ;main.c: 148:     geraconta();
   590  001438  EC5F  F008         	call	_geraconta	;wreg free
   591  00143C                     l2728:
   592                           
   593                           ;main.c: 150:         kpDebounce();
   594  00143C  ECC4  F007         	call	_kpDebounce	;wreg free
   595                           
   596                           ;main.c: 151:         ssdUpdate();
   597  001440  EC59  F006         	call	_ssdUpdate	;wreg free
   598  001444                     
   599                           ;main.c: 152:         atraso_ms(10);
   600  001444  0E00               	movlw	0
   601  001446  6E02               	movwf	(atraso_ms@num+1)^0,c
   602  001448  0E0A               	movlw	10
   603  00144A  6E01               	movwf	atraso_ms@num^0,c
   604  00144C  EC86  F00B         	call	_atraso_ms	;wreg free
   605  001450                     
   606                           ;main.c: 153:         tempo+=1;
   607  001450  4A34               	infsnz	_tempo^0,f,c
   608  001452  2A35               	incf	(_tempo+1)^0,f,c
   609                           
   610                           ;main.c: 154:         switch (slot) {
   611  001454  EF3E  F00A         	goto	l2750
   612  001458                     l2734:
   613                           
   614                           ;main.c: 156:                 leTeclado();
   615  001458  EC83  F005         	call	_leTeclado	;wreg free
   616  00145C                     
   617                           ;main.c: 157:                 slot = 1;
   618  00145C  0E01               	movlw	1
   619  00145E  6E1B               	movwf	main@slot^0,c
   620                           
   621                           ;main.c: 158:                 break;
   622  001460  EF57  F00A         	goto	l2752
   623  001464                     l2738:
   624                           
   625                           ;main.c: 160:                 ssdUpdate();
   626  001464  EC59  F006         	call	_ssdUpdate	;wreg free
   627  001468                     
   628                           ;main.c: 161:                 slot = 2;
   629  001468  0E02               	movlw	2
   630  00146A  6E1B               	movwf	main@slot^0,c
   631                           
   632                           ;main.c: 162:                 break;
   633  00146C  EF57  F00A         	goto	l2752
   634  001470                     l2742:
   635                           
   636                           ;main.c: 164:                 cronometro();
   637  001470  ECE1  F008         	call	_cronometro	;wreg free
   638  001474                     l2744:
   639                           
   640                           ;main.c: 165:                 slot = 0;
   641  001474  0E00               	movlw	0
   642  001476  6E1B               	movwf	main@slot^0,c
   643                           
   644                           ;main.c: 166:                 break;
   645  001478  EF57  F00A         	goto	l2752
   646  00147C                     l2750:
   647  00147C  501B               	movf	main@slot^0,w,c
   648  00147E  6E19               	movwf	??_main^0,c
   649  001480  6A1A               	clrf	(??_main+1)^0,c
   650                           
   651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   652                           ; Switch size 1, requested type "simple"
   653                           ; Number of cases is 1, Range of values is 0 to 0
   654                           ; switch strategies available:
   655                           ; Name         Instructions Cycles
   656                           ; simple_byte            4     3 (average)
   657                           ;	Chosen strategy is simple_byte
   658  001482  501A               	movf	(??_main+1)^0,w,c
   659  001484  0A00               	xorlw	0	; case 0
   660  001486  B4D8               	btfsc	status,2,c
   661  001488  EF48  F00A         	goto	l2776
   662  00148C  EF3A  F00A         	goto	l2744
   663  001490                     l2776:
   664                           
   665                           ; Switch size 1, requested type "simple"
   666                           ; Number of cases is 3, Range of values is 0 to 2
   667                           ; switch strategies available:
   668                           ; Name         Instructions Cycles
   669                           ; simple_byte           10     6 (average)
   670                           ;	Chosen strategy is simple_byte
   671  001490  5019               	movf	??_main^0,w,c
   672  001492  0A00               	xorlw	0	; case 0
   673  001494  B4D8               	btfsc	status,2,c
   674  001496  EF2C  F00A         	goto	l2734
   675  00149A  0A01               	xorlw	1	; case 1
   676  00149C  B4D8               	btfsc	status,2,c
   677  00149E  EF32  F00A         	goto	l2738
   678  0014A2  0A03               	xorlw	3	; case 2
   679  0014A4  B4D8               	btfsc	status,2,c
   680  0014A6  EF38  F00A         	goto	l2742
   681  0014AA  EF3A  F00A         	goto	l2744
   682  0014AE                     l2752:
   683                           
   684                           ;main.c: 171:         ssdUpdate();
   685  0014AE  EC59  F006         	call	_ssdUpdate	;wreg free
   686  0014B2                     
   687                           ;main.c: 172:         atraso_ms(10);
   688  0014B2  0E00               	movlw	0
   689  0014B4  6E02               	movwf	(atraso_ms@num+1)^0,c
   690  0014B6  0E0A               	movlw	10
   691  0014B8  6E01               	movwf	atraso_ms@num^0,c
   692  0014BA  EC86  F00B         	call	_atraso_ms	;wreg free
   693                           
   694                           ;main.c: 173:     }
   695  0014BE  EF1E  F00A         	goto	l2728
   696  0014C2  EF00  F000         	goto	start
   697  0014C6                     __end_of_main:
   698                           	opt callstack 0
   699                           
   700 ;; *************** function _timerInit *****************
   701 ;; Defined at:
   702 ;;		line 55 in file "timer.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   716 ;;      Params:         0       0       0       0       0       0       0
   717 ;;      Locals:         0       0       0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0       0       0
   719 ;;      Totals:         0       0       0       0       0       0       0
   720 ;;Total ram usage:        0 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text1
   730  001B70                     __ptext1:
   731                           	opt callstack 0
   732  001B70                     _timerInit:
   733                           	opt callstack 30
   734  001B70                     
   735                           ;timer.c: 57:  T0CON = 0b00001000;
   736  001B70  0E08               	movlw	8
   737  001B72  6ED5               	movwf	213,c	;volatile
   738  001B74                     
   739                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
   740  001B74  8ED5               	bsf	213,7,c	;volatile
   741  001B76  0012               	return		;funcret
   742  001B78                     __end_of_timerInit:
   743                           	opt callstack 0
   744                           
   745 ;; *************** function _ssdInit *****************
   746 ;; Defined at:
   747 ;;		line 94 in file "ssd.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   761 ;;      Params:         0       0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    2
   768 ;; This function calls:
   769 ;;		_pinMode
   770 ;;		_soInit
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text2
   777  001886                     __ptext2:
   778                           	opt callstack 0
   779  001886                     _ssdInit:
   780                           	opt callstack 28
   781  001886                     
   782                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
   783  001886  0E00               	movlw	0
   784  001888  6E02               	movwf	(pinMode@pin+1)^0,c
   785  00188A  0E18               	movlw	24
   786  00188C  6E01               	movwf	pinMode@pin^0,c
   787  00188E  0E00               	movlw	0
   788  001890  6E04               	movwf	(pinMode@type+1)^0,c
   789  001892  0E00               	movlw	0
   790  001894  6E03               	movwf	pinMode@type^0,c
   791  001896  EC35  F003         	call	_pinMode	;wreg free
   792                           
   793                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
   794  00189A  0E00               	movlw	0
   795  00189C  6E02               	movwf	(pinMode@pin+1)^0,c
   796  00189E  0E19               	movlw	25
   797  0018A0  6E01               	movwf	pinMode@pin^0,c
   798  0018A2  0E00               	movlw	0
   799  0018A4  6E04               	movwf	(pinMode@type+1)^0,c
   800  0018A6  0E00               	movlw	0
   801  0018A8  6E03               	movwf	pinMode@type^0,c
   802  0018AA  EC35  F003         	call	_pinMode	;wreg free
   803                           
   804                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
   805  0018AE  0E00               	movlw	0
   806  0018B0  6E02               	movwf	(pinMode@pin+1)^0,c
   807  0018B2  0E1A               	movlw	26
   808  0018B4  6E01               	movwf	pinMode@pin^0,c
   809  0018B6  0E00               	movlw	0
   810  0018B8  6E04               	movwf	(pinMode@type+1)^0,c
   811  0018BA  0E00               	movlw	0
   812  0018BC  6E03               	movwf	pinMode@type^0,c
   813  0018BE  EC35  F003         	call	_pinMode	;wreg free
   814                           
   815                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
   816  0018C2  0E00               	movlw	0
   817  0018C4  6E02               	movwf	(pinMode@pin+1)^0,c
   818  0018C6  0E1B               	movlw	27
   819  0018C8  6E01               	movwf	pinMode@pin^0,c
   820  0018CA  0E00               	movlw	0
   821  0018CC  6E04               	movwf	(pinMode@type+1)^0,c
   822  0018CE  0E00               	movlw	0
   823  0018D0  6E03               	movwf	pinMode@type^0,c
   824  0018D2  EC35  F003         	call	_pinMode	;wreg free
   825                           
   826                           ;ssd.c: 102:     soInit();
   827  0018D6  ECE1  F00C         	call	_soInit	;wreg free
   828  0018DA  0012               	return		;funcret
   829  0018DC                     __end_of_ssdInit:
   830                           	opt callstack 0
   831                           
   832 ;; *************** function _leTeclado *****************
   833 ;; Defined at:
   834 ;;		line 43 in file "main.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   848 ;;      Params:         0       0       0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0
   850 ;;      Temps:          2       0       0       0       0       0       0
   851 ;;      Totals:         2       0       0       0       0       0       0
   852 ;;Total ram usage:        2 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    7
   855 ;; This function calls:
   856 ;;		___awdiv
   857 ;;		_geraconta
   858 ;;		_kpRead
   859 ;;		_kpReadKey
   860 ;;		_lcdCommand
   861 ;;		_lcdString
   862 ;;		_luzes
   863 ;;		_ssdUpdate
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text3
   870  000B06                     __ptext3:
   871                           	opt callstack 0
   872  000B06                     _leTeclado:
   873                           	opt callstack 23
   874  000B06                     
   875                           ;main.c: 44:     if ((kpRead() != tecla) && (kpReadKey!=0)) {
   876  000B06  ECB3  F00D         	call	_kpRead	;wreg free
   877  000B0A  5036               	movf	_tecla^0,w,c
   878  000B0C  1801               	xorwf	?_kpRead^0,w,c
   879  000B0E  E109               	bnz	u2170
   880  000B10  5037               	movf	(_tecla+1)^0,w,c
   881  000B12  1802               	xorwf	(?_kpRead+1)^0,w,c
   882  000B14  B4D8               	btfsc	status,2,c
   883  000B16  EF8F  F005         	goto	u2171
   884  000B1A  EF91  F005         	goto	u2170
   885  000B1E                     u2171:
   886  000B1E  EF58  F006         	goto	l452
   887  000B22                     u2170:
   888  000B22                     
   889                           ;main.c: 45:         tecla = kpRead();
   890  000B22  ECB3  F00D         	call	_kpRead	;wreg free
   891  000B26  C001  F036         	movff	?_kpRead,_tecla
   892  000B2A  C002  F037         	movff	?_kpRead+1,_tecla+1
   893                           
   894                           ;main.c: 46:         switch (kpReadKey()) {
   895  000B2E  EF36  F006         	goto	l2590
   896  000B32                     l2548:
   897                           
   898                           ;main.c: 48:                 ssdUpdate();
   899  000B32  EC59  F006         	call	_ssdUpdate	;wreg free
   900  000B36                     
   901                           ;main.c: 49:                 resposta = x[pos1] + y[pos1];
   902  000B36  503E               	movf	_pos1^0,w,c
   903  000B38  0D02               	mullw	2
   904  000B3A  0E1C               	movlw	low _y
   905  000B3C  24F3               	addwf	243,w,c
   906  000B3E  6ED9               	movwf	fsr2l,c
   907  000B40  0E00               	movlw	high _y
   908  000B42  20F4               	addwfc	prodh,w,c
   909  000B44  6EDA               	movwf	fsr2h,c
   910  000B46  50DF               	movf	indf2,w,c
   911  000B48  6E17               	movwf	??_leTeclado^0,c
   912  000B4A  503E               	movf	_pos1^0,w,c
   913  000B4C  0D02               	mullw	2
   914  000B4E  0E28               	movlw	low _x
   915  000B50  24F3               	addwf	243,w,c
   916  000B52  6ED9               	movwf	fsr2l,c
   917  000B54  0E00               	movlw	high _x
   918  000B56  20F4               	addwfc	prodh,w,c
   919  000B58  6EDA               	movwf	fsr2h,c
   920  000B5A  50DF               	movf	indf2,w,c
   921  000B5C  2417               	addwf	??_leTeclado^0,w,c
   922  000B5E  6E40               	movwf	_resposta^0,c
   923  000B60                     
   924                           ;main.c: 50:                 lcdCommand(0xC0);
   925  000B60  0EC0               	movlw	192
   926  000B62  EC98  F00D         	call	_lcdCommand
   927  000B66                     
   928                           ;main.c: 51:                 lcdString("  +" );
   929  000B66  0E5C               	movlw	low STR_1
   930  000B68  6E0F               	movwf	lcdString@msg^0,c
   931  000B6A  0E06               	movlw	high STR_1
   932  000B6C  6E10               	movwf	(lcdString@msg+1)^0,c
   933  000B6E  EC6E  F00C         	call	_lcdString	;wreg free
   934                           
   935                           ;main.c: 52:                 break;
   936  000B72  EF58  F006         	goto	l452
   937  000B76                     l2556:
   938                           
   939                           ;main.c: 54:                 ssdUpdate();
   940  000B76  EC59  F006         	call	_ssdUpdate	;wreg free
   941  000B7A                     
   942                           ;main.c: 55:                 resposta = x[pos1] - y[pos1];
   943  000B7A  503E               	movf	_pos1^0,w,c
   944  000B7C  0D02               	mullw	2
   945  000B7E  0E1C               	movlw	low _y
   946  000B80  24F3               	addwf	243,w,c
   947  000B82  6ED9               	movwf	fsr2l,c
   948  000B84  0E00               	movlw	high _y
   949  000B86  20F4               	addwfc	prodh,w,c
   950  000B88  6EDA               	movwf	fsr2h,c
   951  000B8A  50DF               	movf	indf2,w,c
   952  000B8C  6E17               	movwf	??_leTeclado^0,c
   953  000B8E  503E               	movf	_pos1^0,w,c
   954  000B90  0D02               	mullw	2
   955  000B92  0E28               	movlw	low _x
   956  000B94  24F3               	addwf	243,w,c
   957  000B96  6ED9               	movwf	fsr2l,c
   958  000B98  0E00               	movlw	high _x
   959  000B9A  20F4               	addwfc	prodh,w,c
   960  000B9C  6EDA               	movwf	fsr2h,c
   961  000B9E  50DF               	movf	indf2,w,c
   962  000BA0  6E18               	movwf	(??_leTeclado+1)^0,c
   963  000BA2  5017               	movf	??_leTeclado^0,w,c
   964  000BA4  5C18               	subwf	(??_leTeclado+1)^0,w,c
   965  000BA6  6E40               	movwf	_resposta^0,c
   966  000BA8                     
   967                           ;main.c: 56:                 lcdCommand(0xC0);
   968  000BA8  0EC0               	movlw	192
   969  000BAA  EC98  F00D         	call	_lcdCommand
   970  000BAE                     
   971                           ;main.c: 57:                 lcdString("  -" );
   972  000BAE  0E60               	movlw	low STR_2
   973  000BB0  6E0F               	movwf	lcdString@msg^0,c
   974  000BB2  0E06               	movlw	high STR_2
   975  000BB4  6E10               	movwf	(lcdString@msg+1)^0,c
   976  000BB6  EC6E  F00C         	call	_lcdString	;wreg free
   977                           
   978                           ;main.c: 58:                 break;
   979  000BBA  EF58  F006         	goto	l452
   980  000BBE                     l2564:
   981                           
   982                           ;main.c: 60:                 ssdUpdate();
   983  000BBE  EC59  F006         	call	_ssdUpdate	;wreg free
   984  000BC2                     
   985                           ;main.c: 61:                 resposta = x[pos1] * y[pos1];
   986  000BC2  503E               	movf	_pos1^0,w,c
   987  000BC4  0D02               	mullw	2
   988  000BC6  0E1C               	movlw	low _y
   989  000BC8  24F3               	addwf	243,w,c
   990  000BCA  6ED9               	movwf	fsr2l,c
   991  000BCC  0E00               	movlw	high _y
   992  000BCE  20F4               	addwfc	prodh,w,c
   993  000BD0  6EDA               	movwf	fsr2h,c
   994  000BD2  50DF               	movf	indf2,w,c
   995  000BD4  6E17               	movwf	??_leTeclado^0,c
   996  000BD6  503E               	movf	_pos1^0,w,c
   997  000BD8  0D02               	mullw	2
   998  000BDA  0E28               	movlw	low _x
   999  000BDC  24F3               	addwf	243,w,c
  1000  000BDE  6ED9               	movwf	fsr2l,c
  1001  000BE0  0E00               	movlw	high _x
  1002  000BE2  20F4               	addwfc	prodh,w,c
  1003  000BE4  6EDA               	movwf	fsr2h,c
  1004  000BE6  50DF               	movf	indf2,w,c
  1005  000BE8  0217               	mulwf	??_leTeclado^0,c
  1006  000BEA  CFF3 F040          	movff	prodl,_resposta
  1007  000BEE                     
  1008                           ;main.c: 62:                 lcdCommand(0xC0);
  1009  000BEE  0EC0               	movlw	192
  1010  000BF0  EC98  F00D         	call	_lcdCommand
  1011  000BF4                     
  1012                           ;main.c: 63:                 lcdString("  *" );
  1013  000BF4  0E58               	movlw	low STR_3
  1014  000BF6  6E0F               	movwf	lcdString@msg^0,c
  1015  000BF8  0E06               	movlw	high STR_3
  1016  000BFA  6E10               	movwf	(lcdString@msg+1)^0,c
  1017  000BFC  EC6E  F00C         	call	_lcdString	;wreg free
  1018                           
  1019                           ;main.c: 64:                 break;
  1020  000C00  EF58  F006         	goto	l452
  1021  000C04                     l2572:
  1022                           
  1023                           ;main.c: 66:                 ssdUpdate();
  1024  000C04  EC59  F006         	call	_ssdUpdate	;wreg free
  1025  000C08                     
  1026                           ;main.c: 67:                 resposta = x[pos1] / y[pos1];
  1027  000C08  503E               	movf	_pos1^0,w,c
  1028  000C0A  0D02               	mullw	2
  1029  000C0C  0E28               	movlw	low _x
  1030  000C0E  24F3               	addwf	243,w,c
  1031  000C10  6ED9               	movwf	fsr2l,c
  1032  000C12  0E00               	movlw	high _x
  1033  000C14  20F4               	addwfc	prodh,w,c
  1034  000C16  6EDA               	movwf	fsr2h,c
  1035  000C18  CFDE F001          	movff	postinc2,___awdiv@dividend
  1036  000C1C  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  1037  000C20  503E               	movf	_pos1^0,w,c
  1038  000C22  0D02               	mullw	2
  1039  000C24  0E1C               	movlw	low _y
  1040  000C26  24F3               	addwf	243,w,c
  1041  000C28  6ED9               	movwf	fsr2l,c
  1042  000C2A  0E00               	movlw	high _y
  1043  000C2C  20F4               	addwfc	prodh,w,c
  1044  000C2E  6EDA               	movwf	fsr2h,c
  1045  000C30  CFDE F003          	movff	postinc2,___awdiv@divisor
  1046  000C34  CFDD F004          	movff	postdec2,___awdiv@divisor+1
  1047  000C38  EC58  F009         	call	___awdiv	;wreg free
  1048  000C3C  5001               	movf	?___awdiv^0,w,c
  1049  000C3E  6E40               	movwf	_resposta^0,c
  1050  000C40                     
  1051                           ;main.c: 68:                 lcdCommand(0xC0);
  1052  000C40  0EC0               	movlw	192
  1053  000C42  EC98  F00D         	call	_lcdCommand
  1054  000C46                     
  1055                           ;main.c: 69:                 lcdString("  /" );
  1056  000C46  0E64               	movlw	low STR_4
  1057  000C48  6E0F               	movwf	lcdString@msg^0,c
  1058  000C4A  0E06               	movlw	high STR_4
  1059  000C4C  6E10               	movwf	(lcdString@msg+1)^0,c
  1060  000C4E  EC6E  F00C         	call	_lcdString	;wreg free
  1061                           
  1062                           ;main.c: 70:                 break;
  1063  000C52  EF58  F006         	goto	l452
  1064  000C56                     l2580:
  1065                           
  1066                           ;main.c: 72:                 luzes();
  1067  000C56  EC63  F00A         	call	_luzes	;wreg free
  1068  000C5A                     
  1069                           ;main.c: 73:                 pos1++;
  1070  000C5A  2A3E               	incf	_pos1^0,f,c
  1071  000C5C                     
  1072                           ;main.c: 74:                 geraconta();
  1073  000C5C  EC5F  F008         	call	_geraconta	;wreg free
  1074  000C60                     
  1075                           ;main.c: 75:                 tempo = 0;
  1076  000C60  0E00               	movlw	0
  1077  000C62  6E35               	movwf	(_tempo+1)^0,c
  1078  000C64  0E00               	movlw	0
  1079  000C66  6E34               	movwf	_tempo^0,c
  1080                           
  1081                           ;main.c: 76:                 break;
  1082  000C68  EF58  F006         	goto	l452
  1083  000C6C                     l2590:
  1084  000C6C  ECA8  F00A         	call	_kpReadKey	;wreg free
  1085  000C70  6E17               	movwf	??_leTeclado^0,c
  1086  000C72  6A18               	clrf	(??_leTeclado+1)^0,c
  1087                           
  1088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1089                           ; Switch size 1, requested type "simple"
  1090                           ; Number of cases is 1, Range of values is 0 to 0
  1091                           ; switch strategies available:
  1092                           ; Name         Instructions Cycles
  1093                           ; simple_byte            4     3 (average)
  1094                           ;	Chosen strategy is simple_byte
  1095  000C74  5018               	movf	(??_leTeclado+1)^0,w,c
  1096  000C76  0A00               	xorlw	0	; case 0
  1097  000C78  B4D8               	btfsc	status,2,c
  1098  000C7A  EF41  F006         	goto	l2778
  1099  000C7E  EF58  F006         	goto	l452
  1100  000C82                     l2778:
  1101                           
  1102                           ; Switch size 1, requested type "simple"
  1103                           ; Number of cases is 5, Range of values is 68 to 115
  1104                           ; switch strategies available:
  1105                           ; Name         Instructions Cycles
  1106                           ; simple_byte           16     9 (average)
  1107                           ;	Chosen strategy is simple_byte
  1108  000C82  5017               	movf	??_leTeclado^0,w,c
  1109  000C84  0A44               	xorlw	68	; case 68
  1110  000C86  B4D8               	btfsc	status,2,c
  1111  000C88  EFDF  F005         	goto	l2564
  1112  000C8C  0A08               	xorlw	8	; case 76
  1113  000C8E  B4D8               	btfsc	status,2,c
  1114  000C90  EFBB  F005         	goto	l2556
  1115  000C94  0A1E               	xorlw	30	; case 82
  1116  000C96  B4D8               	btfsc	status,2,c
  1117  000C98  EF02  F006         	goto	l2572
  1118  000C9C  0A07               	xorlw	7	; case 85
  1119  000C9E  B4D8               	btfsc	status,2,c
  1120  000CA0  EF99  F005         	goto	l2548
  1121  000CA4  0A26               	xorlw	38	; case 115
  1122  000CA6  B4D8               	btfsc	status,2,c
  1123  000CA8  EF2B  F006         	goto	l2580
  1124  000CAC  EF58  F006         	goto	l452
  1125  000CB0                     l452:
  1126  000CB0  0012               	return		;funcret
  1127  000CB2                     __end_of_leTeclado:
  1128                           	opt callstack 0
  1129                           
  1130 ;; *************** function _luzes *****************
  1131 ;; Defined at:
  1132 ;;		line 28 in file "main.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1146 ;;      Params:         0       0       0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		_atraso_ms
  1155 ;;		_turnOff
  1156 ;;		_turnOn
  1157 ;; This function is called by:
  1158 ;;		_leTeclado
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text4
  1163  0014C6                     __ptext4:
  1164                           	opt callstack 0
  1165  0014C6                     _luzes:
  1166                           	opt callstack 27
  1167  0014C6                     
  1168                           ;main.c: 29:     if (resposta == gabarito) {
  1169  0014C6  503F               	movf	_gabarito^0,w,c
  1170  0014C8  1840               	xorwf	_resposta^0,w,c
  1171  0014CA  A4D8               	btfss	status,2,c
  1172  0014CC  EF6A  F00A         	goto	u1881
  1173  0014D0  EF6C  F00A         	goto	u1880
  1174  0014D4                     u1881:
  1175  0014D4  EF86  F00A         	goto	l2280
  1176  0014D8                     u1880:
  1177  0014D8                     
  1178                           ;main.c: 30:         turnOn(2);
  1179  0014D8  0E00               	movlw	0
  1180  0014DA  6E08               	movwf	(turnOn@led+1)^0,c
  1181  0014DC  0E02               	movlw	2
  1182  0014DE  6E07               	movwf	turnOn@led^0,c
  1183  0014E0  EC1E  F00B         	call	_turnOn	;wreg free
  1184                           
  1185                           ;main.c: 31:         turnOff(1);
  1186  0014E4  0E00               	movlw	0
  1187  0014E6  6E08               	movwf	(turnOff@led+1)^0,c
  1188  0014E8  0E01               	movlw	1
  1189  0014EA  6E07               	movwf	turnOff@led^0,c
  1190  0014EC  EC52  F00B         	call	_turnOff	;wreg free
  1191                           
  1192                           ;main.c: 32:         turnOff(4);
  1193  0014F0  0E00               	movlw	0
  1194  0014F2  6E08               	movwf	(turnOff@led+1)^0,c
  1195  0014F4  0E04               	movlw	4
  1196  0014F6  6E07               	movwf	turnOff@led^0,c
  1197  0014F8  EC52  F00B         	call	_turnOff	;wreg free
  1198                           
  1199                           ;main.c: 33:         atraso_ms(3000);
  1200  0014FC  0E0B               	movlw	11
  1201  0014FE  6E02               	movwf	(atraso_ms@num+1)^0,c
  1202  001500  0EB8               	movlw	184
  1203  001502  6E01               	movwf	atraso_ms@num^0,c
  1204  001504  EC86  F00B         	call	_atraso_ms	;wreg free
  1205                           
  1206                           ;main.c: 35:     }else if(resposta != gabarito){
  1207  001508  EFA7  F00A         	goto	l440
  1208  00150C                     l2280:
  1209  00150C  503F               	movf	_gabarito^0,w,c
  1210  00150E  1840               	xorwf	_resposta^0,w,c
  1211  001510  B4D8               	btfsc	status,2,c
  1212  001512  EF8D  F00A         	goto	u1891
  1213  001516  EF8F  F00A         	goto	u1890
  1214  00151A                     u1891:
  1215  00151A  EFA7  F00A         	goto	l440
  1216  00151E                     u1890:
  1217  00151E                     
  1218                           ;main.c: 36:         turnOn(1);
  1219  00151E  0E00               	movlw	0
  1220  001520  6E08               	movwf	(turnOn@led+1)^0,c
  1221  001522  0E01               	movlw	1
  1222  001524  6E07               	movwf	turnOn@led^0,c
  1223  001526  EC1E  F00B         	call	_turnOn	;wreg free
  1224                           
  1225                           ;main.c: 37:         turnOff(2);
  1226  00152A  0E00               	movlw	0
  1227  00152C  6E08               	movwf	(turnOff@led+1)^0,c
  1228  00152E  0E02               	movlw	2
  1229  001530  6E07               	movwf	turnOff@led^0,c
  1230  001532  EC52  F00B         	call	_turnOff	;wreg free
  1231                           
  1232                           ;main.c: 38:         turnOff(4);
  1233  001536  0E00               	movlw	0
  1234  001538  6E08               	movwf	(turnOff@led+1)^0,c
  1235  00153A  0E04               	movlw	4
  1236  00153C  6E07               	movwf	turnOff@led^0,c
  1237  00153E  EC52  F00B         	call	_turnOff	;wreg free
  1238                           
  1239                           ;main.c: 39:         atraso_ms(3000);
  1240  001542  0E0B               	movlw	11
  1241  001544  6E02               	movwf	(atraso_ms@num+1)^0,c
  1242  001546  0EB8               	movlw	184
  1243  001548  6E01               	movwf	atraso_ms@num^0,c
  1244  00154A  EC86  F00B         	call	_atraso_ms	;wreg free
  1245  00154E                     l440:
  1246  00154E  0012               	return		;funcret
  1247  001550                     __end_of_luzes:
  1248                           	opt callstack 0
  1249                           
  1250 ;; *************** function _turnOn *****************
  1251 ;; Defined at:
  1252 ;;		line 21 in file "rgb.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  led             2    6[COMRAM] int 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1266 ;;      Params:         2       0       0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0
  1269 ;;      Totals:         2       0       0       0       0       0       0
  1270 ;;Total ram usage:        2 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    1
  1273 ;; This function calls:
  1274 ;;		_digitalWrite
  1275 ;; This function is called by:
  1276 ;;		_luzes
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text5
  1281  00163C                     __ptext5:
  1282                           	opt callstack 0
  1283  00163C                     _turnOn:
  1284                           	opt callstack 27
  1285  00163C                     
  1286                           ;rgb.c: 22:  if (led & 1) {
  1287  00163C  A007               	btfss	turnOn@led^0,0,c
  1288  00163E  EF23  F00B         	goto	u1611
  1289  001642  EF25  F00B         	goto	u1610
  1290  001646                     u1611:
  1291  001646  EF2F  F00B         	goto	l2122
  1292  00164A                     u1610:
  1293  00164A                     
  1294                           ;rgb.c: 23:   digitalWrite(PIN_D0, 1);
  1295  00164A  0E00               	movlw	0
  1296  00164C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1297  00164E  0E18               	movlw	24
  1298  001650  6E01               	movwf	digitalWrite@pin^0,c
  1299  001652  0E00               	movlw	0
  1300  001654  6E04               	movwf	(digitalWrite@value+1)^0,c
  1301  001656  0E01               	movlw	1
  1302  001658  6E03               	movwf	digitalWrite@value^0,c
  1303  00165A  EC5C  F004         	call	_digitalWrite	;wreg free
  1304  00165E                     l2122:
  1305                           
  1306                           ;rgb.c: 25:  if (led & 2) {
  1307  00165E  A207               	btfss	turnOn@led^0,1,c
  1308  001660  EF34  F00B         	goto	u1621
  1309  001664  EF36  F00B         	goto	u1620
  1310  001668                     u1621:
  1311  001668  EF40  F00B         	goto	l2126
  1312  00166C                     u1620:
  1313  00166C                     
  1314                           ;rgb.c: 26:   digitalWrite(PIN_D1, 1);
  1315  00166C  0E00               	movlw	0
  1316  00166E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1317  001670  0E19               	movlw	25
  1318  001672  6E01               	movwf	digitalWrite@pin^0,c
  1319  001674  0E00               	movlw	0
  1320  001676  6E04               	movwf	(digitalWrite@value+1)^0,c
  1321  001678  0E01               	movlw	1
  1322  00167A  6E03               	movwf	digitalWrite@value^0,c
  1323  00167C  EC5C  F004         	call	_digitalWrite	;wreg free
  1324  001680                     l2126:
  1325                           
  1326                           ;rgb.c: 28:  if (led & 4) {
  1327  001680  A407               	btfss	turnOn@led^0,2,c
  1328  001682  EF45  F00B         	goto	u1631
  1329  001686  EF47  F00B         	goto	u1630
  1330  00168A                     u1631:
  1331  00168A  EF51  F00B         	goto	l286
  1332  00168E                     u1630:
  1333  00168E                     
  1334                           ;rgb.c: 29:   digitalWrite(PIN_D2, 1);
  1335  00168E  0E00               	movlw	0
  1336  001690  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1337  001692  0E1A               	movlw	26
  1338  001694  6E01               	movwf	digitalWrite@pin^0,c
  1339  001696  0E00               	movlw	0
  1340  001698  6E04               	movwf	(digitalWrite@value+1)^0,c
  1341  00169A  0E01               	movlw	1
  1342  00169C  6E03               	movwf	digitalWrite@value^0,c
  1343  00169E  EC5C  F004         	call	_digitalWrite	;wreg free
  1344  0016A2                     l286:
  1345  0016A2  0012               	return		;funcret
  1346  0016A4                     __end_of_turnOn:
  1347                           	opt callstack 0
  1348                           
  1349 ;; *************** function _turnOff *****************
  1350 ;; Defined at:
  1351 ;;		line 33 in file "rgb.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  led             2    6[COMRAM] int 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1365 ;;      Params:         2       0       0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0
  1368 ;;      Totals:         2       0       0       0       0       0       0
  1369 ;;Total ram usage:        2 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    1
  1372 ;; This function calls:
  1373 ;;		_digitalWrite
  1374 ;; This function is called by:
  1375 ;;		_luzes
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text6
  1380  0016A4                     __ptext6:
  1381                           	opt callstack 0
  1382  0016A4                     _turnOff:
  1383                           	opt callstack 27
  1384  0016A4                     
  1385                           ;rgb.c: 34:  if (led & 1) {
  1386  0016A4  A007               	btfss	turnOff@led^0,0,c
  1387  0016A6  EF57  F00B         	goto	u1641
  1388  0016AA  EF59  F00B         	goto	u1640
  1389  0016AE                     u1641:
  1390  0016AE  EF63  F00B         	goto	l2134
  1391  0016B2                     u1640:
  1392  0016B2                     
  1393                           ;rgb.c: 35:   digitalWrite(PIN_D0, 0);
  1394  0016B2  0E00               	movlw	0
  1395  0016B4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1396  0016B6  0E18               	movlw	24
  1397  0016B8  6E01               	movwf	digitalWrite@pin^0,c
  1398  0016BA  0E00               	movlw	0
  1399  0016BC  6E04               	movwf	(digitalWrite@value+1)^0,c
  1400  0016BE  0E00               	movlw	0
  1401  0016C0  6E03               	movwf	digitalWrite@value^0,c
  1402  0016C2  EC5C  F004         	call	_digitalWrite	;wreg free
  1403  0016C6                     l2134:
  1404                           
  1405                           ;rgb.c: 37:  if (led & 2) {
  1406  0016C6  A207               	btfss	turnOff@led^0,1,c
  1407  0016C8  EF68  F00B         	goto	u1651
  1408  0016CC  EF6A  F00B         	goto	u1650
  1409  0016D0                     u1651:
  1410  0016D0  EF74  F00B         	goto	l2138
  1411  0016D4                     u1650:
  1412  0016D4                     
  1413                           ;rgb.c: 38:   digitalWrite(PIN_D1, 0);
  1414  0016D4  0E00               	movlw	0
  1415  0016D6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1416  0016D8  0E19               	movlw	25
  1417  0016DA  6E01               	movwf	digitalWrite@pin^0,c
  1418  0016DC  0E00               	movlw	0
  1419  0016DE  6E04               	movwf	(digitalWrite@value+1)^0,c
  1420  0016E0  0E00               	movlw	0
  1421  0016E2  6E03               	movwf	digitalWrite@value^0,c
  1422  0016E4  EC5C  F004         	call	_digitalWrite	;wreg free
  1423  0016E8                     l2138:
  1424                           
  1425                           ;rgb.c: 40:  if (led & 4) {
  1426  0016E8  A407               	btfss	turnOff@led^0,2,c
  1427  0016EA  EF79  F00B         	goto	u1661
  1428  0016EE  EF7B  F00B         	goto	u1660
  1429  0016F2                     u1661:
  1430  0016F2  EF85  F00B         	goto	l292
  1431  0016F6                     u1660:
  1432  0016F6                     
  1433                           ;rgb.c: 41:   digitalWrite(PIN_D2, 0);
  1434  0016F6  0E00               	movlw	0
  1435  0016F8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1436  0016FA  0E1A               	movlw	26
  1437  0016FC  6E01               	movwf	digitalWrite@pin^0,c
  1438  0016FE  0E00               	movlw	0
  1439  001700  6E04               	movwf	(digitalWrite@value+1)^0,c
  1440  001702  0E00               	movlw	0
  1441  001704  6E03               	movwf	digitalWrite@value^0,c
  1442  001706  EC5C  F004         	call	_digitalWrite	;wreg free
  1443  00170A                     l292:
  1444  00170A  0012               	return		;funcret
  1445  00170C                     __end_of_turnOff:
  1446                           	opt callstack 0
  1447                           
  1448 ;; *************** function _atraso_ms *****************
  1449 ;; Defined at:
  1450 ;;		line 2 in file "atraso.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  num             2    0[COMRAM] unsigned int 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  i               2    2[COMRAM] int 
  1455 ;;  k               1    5[COMRAM] volatile unsigned char 
  1456 ;;  j               1    4[COMRAM] volatile unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1466 ;;      Params:         2       0       0       0       0       0       0
  1467 ;;      Locals:         4       0       0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0
  1469 ;;      Totals:         6       0       0       0       0       0       0
  1470 ;;Total ram usage:        6 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_luzes
  1476 ;;		_main
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text7
  1481  00170C                     __ptext7:
  1482                           	opt callstack 0
  1483  00170C                     _atraso_ms:
  1484                           	opt callstack 28
  1485  00170C                     
  1486                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  1487  00170C  0E00               	movlw	0
  1488  00170E  6E04               	movwf	(atraso_ms@i+1)^0,c
  1489  001710  0E00               	movlw	0
  1490  001712  6E03               	movwf	atraso_ms@i^0,c
  1491  001714  EFAC  F00B         	goto	l2166
  1492  001718                     l2144:
  1493                           
  1494                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  1495  001718  0E00               	movlw	0
  1496  00171A  6E05               	movwf	atraso_ms@j^0,c	;volatile
  1497  00171C                     l2146:
  1498  00171C  0E28               	movlw	40
  1499  00171E  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  1500  001720  EF94  F00B         	goto	u1671
  1501  001724  EF96  F00B         	goto	u1670
  1502  001728                     u1671:
  1503  001728  EF98  F00B         	goto	l2150
  1504  00172C                     u1670:
  1505  00172C  EFAA  F00B         	goto	l2164
  1506  001730                     l2150:
  1507                           
  1508                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  1509  001730  0E00               	movlw	0
  1510  001732  6E06               	movwf	atraso_ms@k^0,c	;volatile
  1511  001734                     l2152:
  1512  001734  0E02               	movlw	2
  1513  001736  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  1514  001738  EFA0  F00B         	goto	u1681
  1515  00173C  EFA2  F00B         	goto	u1680
  1516  001740                     u1681:
  1517  001740  EFA4  F00B         	goto	l2156
  1518  001744                     u1680:
  1519  001744  EFA7  F00B         	goto	l2160
  1520  001748                     l2156:
  1521  001748  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  1522  00174A  EF9A  F00B         	goto	l2152
  1523  00174E                     l2160:
  1524                           
  1525                           ;atraso.c: 7:         }
  1526  00174E  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  1527  001750  EF8E  F00B         	goto	l2146
  1528  001754                     l2164:
  1529                           
  1530                           ;atraso.c: 9:     }
  1531  001754  4A03               	infsnz	atraso_ms@i^0,f,c
  1532  001756  2A04               	incf	(atraso_ms@i+1)^0,f,c
  1533  001758                     l2166:
  1534  001758  5001               	movf	atraso_ms@num^0,w,c
  1535  00175A  5C03               	subwf	atraso_ms@i^0,w,c
  1536  00175C  5002               	movf	(atraso_ms@num+1)^0,w,c
  1537  00175E  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  1538  001760  A0D8               	btfss	status,0,c
  1539  001762  EFB5  F00B         	goto	u1691
  1540  001766  EFB7  F00B         	goto	u1690
  1541  00176A                     u1691:
  1542  00176A  EF8C  F00B         	goto	l2144
  1543  00176E                     u1690:
  1544  00176E  0012               	return		;funcret
  1545  001770                     __end_of_atraso_ms:
  1546                           	opt callstack 0
  1547                           
  1548 ;; *************** function _kpReadKey *****************
  1549 ;; Defined at:
  1550 ;;		line 17 in file "keypad.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  i               2    3[COMRAM] int 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      unsigned char 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1564 ;;      Params:         0       0       0       0       0       0       0
  1565 ;;      Locals:         2       0       0       0       0       0       0
  1566 ;;      Temps:          3       0       0       0       0       0       0
  1567 ;;      Totals:         5       0       0       0       0       0       0
  1568 ;;Total ram usage:        5 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_leTeclado
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text8
  1578  001550                     __ptext8:
  1579                           	opt callstack 0
  1580  001550                     _kpReadKey:
  1581                           	opt callstack 29
  1582  001550                     
  1583                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  1584  001550  0E00               	movlw	0
  1585  001552  6E05               	movwf	(kpReadKey@i+1)^0,c
  1586  001554  0E00               	movlw	0
  1587  001556  6E04               	movwf	kpReadKey@i^0,c
  1588  001558                     l1396:
  1589                           
  1590                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  1591  001558  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  1592  00155C  0E01               	movlw	1
  1593  00155E  6E02               	movwf	(??_kpReadKey+1)^0,c
  1594  001560  0E00               	movlw	0
  1595  001562  6E03               	movwf	(??_kpReadKey+2)^0,c
  1596  001564  2A01               	incf	??_kpReadKey^0,f,c
  1597  001566  EFB8  F00A         	goto	u674
  1598  00156A                     u675:
  1599  00156A  90D8               	bcf	status,0,c
  1600  00156C  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  1601  00156E  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  1602  001570                     u674:
  1603  001570  2E01               	decfsz	??_kpReadKey^0,f,c
  1604  001572  EFB5  F00A         	goto	u675
  1605  001576  503C               	movf	_keys^0,w,c
  1606  001578  1602               	andwf	(??_kpReadKey+1)^0,f,c
  1607  00157A  503D               	movf	(_keys+1)^0,w,c
  1608  00157C  1603               	andwf	(??_kpReadKey+2)^0,f,c
  1609  00157E  5002               	movf	(??_kpReadKey+1)^0,w,c
  1610  001580  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  1611  001582  B4D8               	btfsc	status,2,c
  1612  001584  EFC6  F00A         	goto	u681
  1613  001588  EFC8  F00A         	goto	u680
  1614  00158C                     u681:
  1615  00158C  EFD2  F00A         	goto	l1402
  1616  001590                     u680:
  1617  001590                     
  1618                           ;keypad.c: 21:    return charKey[i];
  1619  001590  0E11               	movlw	low _charKey
  1620  001592  2404               	addwf	kpReadKey@i^0,w,c
  1621  001594  6EF6               	movwf	tblptrl,c
  1622  001596  0E06               	movlw	high _charKey
  1623  001598  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  1624  00159A  6EF7               	movwf	tblptrh,c
  1625  00159C                     	if	0	;There are less than 3 active tblptr bytes
  1626  00159C                     	endif
  1627  00159C  0008               	tblrd		*
  1628  00159E  50F5               	movf	tablat,w,c
  1629  0015A0  EFE3  F00A         	goto	l196
  1630  0015A4                     l1402:
  1631                           
  1632                           ;keypad.c: 23:  }
  1633  0015A4  4A04               	infsnz	kpReadKey@i^0,f,c
  1634  0015A6  2A05               	incf	(kpReadKey@i+1)^0,f,c
  1635  0015A8  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  1636  0015AA  EFE0  F00A         	goto	u691
  1637  0015AE  5005               	movf	(kpReadKey@i+1)^0,w,c
  1638  0015B0  E109               	bnz	u690
  1639  0015B2  0E0A               	movlw	10
  1640  0015B4  5C04               	subwf	kpReadKey@i^0,w,c
  1641  0015B6  A0D8               	btfss	status,0,c
  1642  0015B8  EFE0  F00A         	goto	u691
  1643  0015BC  EFE2  F00A         	goto	u690
  1644  0015C0                     u691:
  1645  0015C0  EFAC  F00A         	goto	l1396
  1646  0015C4                     u690:
  1647  0015C4                     
  1648                           ;keypad.c: 25:  return 0;
  1649  0015C4  0E00               	movlw	0
  1650  0015C6                     l196:
  1651  0015C6  0012               	return		;funcret
  1652  0015C8                     __end_of_kpReadKey:
  1653                           	opt callstack 0
  1654                           
  1655 ;; *************** function _kpRead *****************
  1656 ;; Defined at:
  1657 ;;		line 14 in file "keypad.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2    0[COMRAM] unsigned int 
  1664 ;; Registers used:
  1665 ;;		None
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         2       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0
  1673 ;;      Temps:          0       0       0       0       0       0       0
  1674 ;;      Totals:         2       0       0       0       0       0       0
  1675 ;;Total ram usage:        2 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_leTeclado
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text9
  1685  001B66                     __ptext9:
  1686                           	opt callstack 0
  1687  001B66                     _kpRead:
  1688                           	opt callstack 29
  1689  001B66                     
  1690                           ;keypad.c: 15:     return keys;
  1691  001B66  C03C  F001         	movff	_keys,?_kpRead
  1692  001B6A  C03D  F002         	movff	_keys+1,?_kpRead+1
  1693  001B6E  0012               	return		;funcret
  1694  001B70                     __end_of_kpRead:
  1695                           	opt callstack 0
  1696                           
  1697 ;; *************** function _geraconta *****************
  1698 ;; Defined at:
  1699 ;;		line 85 in file "main.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2  404[None  ] int 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1713 ;;      Params:         0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0
  1715 ;;      Temps:          2       0       0       0       0       0       0
  1716 ;;      Totals:         2       0       0       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    6
  1720 ;; This function calls:
  1721 ;;		_lcdCommand
  1722 ;;		_lcdString
  1723 ;; This function is called by:
  1724 ;;		_leTeclado
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text10
  1730  0010BE                     __ptext10:
  1731                           	opt callstack 0
  1732  0010BE                     _geraconta:
  1733                           	opt callstack 23
  1734  0010BE                     
  1735                           ;main.c: 86:     switch (op) {
  1736  0010BE  EFBB  F008         	goto	l2336
  1737  0010C2                     l2286:
  1738                           
  1739                           ;main.c: 88:             gabarito = 8;
  1740  0010C2  0E08               	movlw	8
  1741  0010C4  6E3F               	movwf	_gabarito^0,c
  1742  0010C6                     
  1743                           ;main.c: 89:             lcdCommand(0x01);
  1744  0010C6  0E01               	movlw	1
  1745  0010C8  EC98  F00D         	call	_lcdCommand
  1746  0010CC                     
  1747                           ;main.c: 90:             lcdString("4 ? 2 = 8");
  1748  0010CC  0E4E               	movlw	low STR_5
  1749  0010CE  6E0F               	movwf	lcdString@msg^0,c
  1750  0010D0  0E06               	movlw	high STR_5
  1751  0010D2  6E10               	movwf	(lcdString@msg+1)^0,c
  1752  0010D4  EC6E  F00C         	call	_lcdString	;wreg free
  1753  0010D8                     
  1754                           ;main.c: 91:             op = 1;
  1755  0010D8  0E01               	movlw	1
  1756  0010DA  6E41               	movwf	_op^0,c
  1757                           
  1758                           ;main.c: 92:             break;
  1759  0010DC  EFE0  F008         	goto	l464
  1760  0010E0                     l2294:
  1761                           
  1762                           ;main.c: 94:             gabarito = 3;
  1763  0010E0  0E03               	movlw	3
  1764  0010E2  6E3F               	movwf	_gabarito^0,c
  1765  0010E4                     
  1766                           ;main.c: 95:             lcdCommand(0x01);
  1767  0010E4  0E01               	movlw	1
  1768  0010E6  EC98  F00D         	call	_lcdCommand
  1769  0010EA                     
  1770                           ;main.c: 96:             lcdString("2 ? 1 = 3");
  1771  0010EA  0E3A               	movlw	low STR_6
  1772  0010EC  6E0F               	movwf	lcdString@msg^0,c
  1773  0010EE  0E06               	movlw	high STR_6
  1774  0010F0  6E10               	movwf	(lcdString@msg+1)^0,c
  1775  0010F2  EC6E  F00C         	call	_lcdString	;wreg free
  1776  0010F6                     
  1777                           ;main.c: 97:             op = 2;
  1778  0010F6  0E02               	movlw	2
  1779  0010F8  6E41               	movwf	_op^0,c
  1780                           
  1781                           ;main.c: 98:             break;
  1782  0010FA  EFE0  F008         	goto	l464
  1783  0010FE                     l2302:
  1784                           
  1785                           ;main.c: 100:             gabarito = 2;
  1786  0010FE  0E02               	movlw	2
  1787  001100  6E3F               	movwf	_gabarito^0,c
  1788  001102                     
  1789                           ;main.c: 101:             lcdCommand(0x01);
  1790  001102  0E01               	movlw	1
  1791  001104  EC98  F00D         	call	_lcdCommand
  1792  001108                     
  1793                           ;main.c: 102:             lcdString("6 ? 3 = 2");
  1794  001108  0E30               	movlw	low STR_7
  1795  00110A  6E0F               	movwf	lcdString@msg^0,c
  1796  00110C  0E06               	movlw	high STR_7
  1797  00110E  6E10               	movwf	(lcdString@msg+1)^0,c
  1798  001110  EC6E  F00C         	call	_lcdString	;wreg free
  1799  001114                     
  1800                           ;main.c: 103:             op = 3;
  1801  001114  0E03               	movlw	3
  1802  001116  6E41               	movwf	_op^0,c
  1803                           
  1804                           ;main.c: 104:             break;
  1805  001118  EFE0  F008         	goto	l464
  1806  00111C                     l2310:
  1807                           
  1808                           ;main.c: 106:             gabarito = 1;
  1809  00111C  0E01               	movlw	1
  1810  00111E  6E3F               	movwf	_gabarito^0,c
  1811  001120                     
  1812                           ;main.c: 107:             lcdCommand(0x01);
  1813  001120  0E01               	movlw	1
  1814  001122  EC98  F00D         	call	_lcdCommand
  1815  001126                     
  1816                           ;main.c: 108:             lcdString("8 ? 8 = 1");
  1817  001126  0E26               	movlw	low STR_8
  1818  001128  6E0F               	movwf	lcdString@msg^0,c
  1819  00112A  0E06               	movlw	high STR_8
  1820  00112C  6E10               	movwf	(lcdString@msg+1)^0,c
  1821  00112E  EC6E  F00C         	call	_lcdString	;wreg free
  1822  001132                     
  1823                           ;main.c: 109:             op = 4;
  1824  001132  0E04               	movlw	4
  1825  001134  6E41               	movwf	_op^0,c
  1826                           
  1827                           ;main.c: 110:             break;
  1828  001136  EFE0  F008         	goto	l464
  1829  00113A                     l2318:
  1830                           
  1831                           ;main.c: 112:             gabarito = 5;
  1832  00113A  0E05               	movlw	5
  1833  00113C  6E3F               	movwf	_gabarito^0,c
  1834  00113E                     
  1835                           ;main.c: 113:             lcdCommand(0x01);
  1836  00113E  0E01               	movlw	1
  1837  001140  EC98  F00D         	call	_lcdCommand
  1838  001144                     
  1839                           ;main.c: 114:             lcdString("6 ? 1 = 5");
  1840  001144  0E44               	movlw	low STR_9
  1841  001146  6E0F               	movwf	lcdString@msg^0,c
  1842  001148  0E06               	movlw	high STR_9
  1843  00114A  6E10               	movwf	(lcdString@msg+1)^0,c
  1844  00114C  EC6E  F00C         	call	_lcdString	;wreg free
  1845  001150                     
  1846                           ;main.c: 115:             op = 5;
  1847  001150  0E05               	movlw	5
  1848  001152  6E41               	movwf	_op^0,c
  1849                           
  1850                           ;main.c: 116:             break;
  1851  001154  EFE0  F008         	goto	l464
  1852  001158                     l2326:
  1853                           
  1854                           ;main.c: 118:             gabarito = 45;
  1855  001158  0E2D               	movlw	45
  1856  00115A  6E3F               	movwf	_gabarito^0,c
  1857  00115C                     
  1858                           ;main.c: 119:             lcdCommand(0x01);
  1859  00115C  0E01               	movlw	1
  1860  00115E  EC98  F00D         	call	_lcdCommand
  1861  001162                     
  1862                           ;main.c: 120:             lcdString("9 ? 5 = 45");
  1863  001162  0E1B               	movlw	low STR_10
  1864  001164  6E0F               	movwf	lcdString@msg^0,c
  1865  001166  0E06               	movlw	high STR_10
  1866  001168  6E10               	movwf	(lcdString@msg+1)^0,c
  1867  00116A  EC6E  F00C         	call	_lcdString	;wreg free
  1868  00116E                     
  1869                           ;main.c: 121:             op = 0;
  1870  00116E  0E00               	movlw	0
  1871  001170  6E41               	movwf	_op^0,c
  1872                           
  1873                           ;main.c: 122:             break;
  1874  001172  EFE0  F008         	goto	l464
  1875  001176                     l2336:
  1876  001176  5041               	movf	_op^0,w,c
  1877  001178  6E15               	movwf	??_geraconta^0,c
  1878  00117A  6A16               	clrf	(??_geraconta+1)^0,c
  1879                           
  1880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1881                           ; Switch size 1, requested type "simple"
  1882                           ; Number of cases is 1, Range of values is 0 to 0
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte            4     3 (average)
  1886                           ;	Chosen strategy is simple_byte
  1887  00117C  5016               	movf	(??_geraconta+1)^0,w,c
  1888  00117E  0A00               	xorlw	0	; case 0
  1889  001180  B4D8               	btfsc	status,2,c
  1890  001182  EFC5  F008         	goto	l2780
  1891  001186  EFE0  F008         	goto	l464
  1892  00118A                     l2780:
  1893                           
  1894                           ; Switch size 1, requested type "simple"
  1895                           ; Number of cases is 6, Range of values is 0 to 5
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte           19    10 (average)
  1899                           ;	Chosen strategy is simple_byte
  1900  00118A  5015               	movf	??_geraconta^0,w,c
  1901  00118C  0A00               	xorlw	0	; case 0
  1902  00118E  B4D8               	btfsc	status,2,c
  1903  001190  EF61  F008         	goto	l2286
  1904  001194  0A01               	xorlw	1	; case 1
  1905  001196  B4D8               	btfsc	status,2,c
  1906  001198  EF70  F008         	goto	l2294
  1907  00119C  0A03               	xorlw	3	; case 2
  1908  00119E  B4D8               	btfsc	status,2,c
  1909  0011A0  EF7F  F008         	goto	l2302
  1910  0011A4  0A01               	xorlw	1	; case 3
  1911  0011A6  B4D8               	btfsc	status,2,c
  1912  0011A8  EF8E  F008         	goto	l2310
  1913  0011AC  0A07               	xorlw	7	; case 4
  1914  0011AE  B4D8               	btfsc	status,2,c
  1915  0011B0  EF9D  F008         	goto	l2318
  1916  0011B4  0A01               	xorlw	1	; case 5
  1917  0011B6  B4D8               	btfsc	status,2,c
  1918  0011B8  EFAC  F008         	goto	l2326
  1919  0011BC  EFE0  F008         	goto	l464
  1920  0011C0                     l464:
  1921  0011C0  0012               	return		;funcret
  1922  0011C2                     __end_of_geraconta:
  1923                           	opt callstack 0
  1924                           
  1925 ;; *************** function _lcdString *****************
  1926 ;; Defined at:
  1927 ;;		line 57 in file "lcd.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  msg             2   14[COMRAM] PTR unsigned char 
  1930 ;;		 -> STR_10(11), STR_9(10), STR_8(10), STR_7(10), 
  1931 ;;		 -> STR_6(10), STR_5(10), STR_4(4), STR_3(4), 
  1932 ;;		 -> STR_2(4), STR_1(4), 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  i               2   18[COMRAM] int 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1944 ;;      Params:         2       0       0       0       0       0       0
  1945 ;;      Locals:         2       0       0       0       0       0       0
  1946 ;;      Temps:          2       0       0       0       0       0       0
  1947 ;;      Totals:         6       0       0       0       0       0       0
  1948 ;;Total ram usage:        6 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    5
  1951 ;; This function calls:
  1952 ;;		_lcdChar
  1953 ;; This function is called by:
  1954 ;;		_leTeclado
  1955 ;;		_geraconta
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text11
  1960  0018DC                     __ptext11:
  1961                           	opt callstack 0
  1962  0018DC                     _lcdString:
  1963                           	opt callstack 24
  1964  0018DC                     
  1965                           ;lcd.c: 58:  int i = 0;
  1966  0018DC  0E00               	movlw	0
  1967  0018DE  6E14               	movwf	(lcdString@i+1)^0,c
  1968  0018E0  0E00               	movlw	0
  1969  0018E2  6E13               	movwf	lcdString@i^0,c
  1970                           
  1971                           ;lcd.c: 59:  while (msg[i] != 0) {
  1972  0018E4  EF84  F00C         	goto	l2116
  1973  0018E8                     l2112:
  1974                           
  1975                           ;lcd.c: 60:   lcdChar(msg[i]);
  1976  0018E8  5013               	movf	lcdString@i^0,w,c
  1977  0018EA  240F               	addwf	lcdString@msg^0,w,c
  1978  0018EC  6E11               	movwf	??_lcdString^0,c
  1979  0018EE  5014               	movf	(lcdString@i+1)^0,w,c
  1980  0018F0  2010               	addwfc	(lcdString@msg+1)^0,w,c
  1981  0018F2  6E12               	movwf	(??_lcdString+1)^0,c
  1982  0018F4  C011  FFF6         	movff	??_lcdString,tblptrl
  1983  0018F8  C012  FFF7         	movff	??_lcdString+1,tblptrh
  1984  0018FC                     	if	0	;tblptru may be non-zero
  1985  0018FC                     	endif
  1986  0018FC                     	if	0	;tblptru may be non-zero
  1987  0018FC                     	endif
  1988  0018FC  0008               	tblrd		*
  1989  0018FE  50F5               	movf	tablat,w,c
  1990  001900  EC89  F00D         	call	_lcdChar
  1991  001904                     
  1992                           ;lcd.c: 61:   i++;
  1993  001904  4A13               	infsnz	lcdString@i^0,f,c
  1994  001906  2A14               	incf	(lcdString@i+1)^0,f,c
  1995  001908                     l2116:
  1996                           
  1997                           ;lcd.c: 59:  while (msg[i] != 0) {
  1998  001908  5013               	movf	lcdString@i^0,w,c
  1999  00190A  240F               	addwf	lcdString@msg^0,w,c
  2000  00190C  6E11               	movwf	??_lcdString^0,c
  2001  00190E  5014               	movf	(lcdString@i+1)^0,w,c
  2002  001910  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2003  001912  6E12               	movwf	(??_lcdString+1)^0,c
  2004  001914  C011  FFF6         	movff	??_lcdString,tblptrl
  2005  001918  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2006  00191C                     	if	0	;tblptru may be non-zero
  2007  00191C                     	endif
  2008  00191C                     	if	0	;tblptru may be non-zero
  2009  00191C                     	endif
  2010  00191C  0008               	tblrd		*
  2011  00191E  50F5               	movf	tablat,w,c
  2012  001920  0900               	iorlw	0
  2013  001922  A4D8               	btfss	status,2,c
  2014  001924  EF96  F00C         	goto	u1601
  2015  001928  EF98  F00C         	goto	u1600
  2016  00192C                     u1601:
  2017  00192C  EF74  F00C         	goto	l2112
  2018  001930                     u1600:
  2019  001930  0012               	return		;funcret
  2020  001932                     __end_of_lcdString:
  2021                           	opt callstack 0
  2022                           
  2023 ;; *************** function _lcdChar *****************
  2024 ;; Defined at:
  2025 ;;		line 52 in file "lcd.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  value           1    wreg     unsigned char 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  value           1   13[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2039 ;;      Params:         0       0       0       0       0       0       0
  2040 ;;      Locals:         1       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0
  2042 ;;      Totals:         1       0       0       0       0       0       0
  2043 ;;Total ram usage:        1 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    4
  2046 ;; This function calls:
  2047 ;;		_delayMicro
  2048 ;;		_pushByte
  2049 ;; This function is called by:
  2050 ;;		_lcdString
  2051 ;;		_lcdNumber
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text12
  2056  001B12                     __ptext12:
  2057                           	opt callstack 0
  2058  001B12                     _lcdChar:
  2059                           	opt callstack 24
  2060                           
  2061                           ;incstack = 0
  2062                           ;lcdChar@value stored from wreg
  2063  001B12  6E0E               	movwf	lcdChar@value^0,c
  2064  001B14                     
  2065                           ;lcd.c: 53:  pushByte(value, 1);
  2066  001B14  0E00               	movlw	0
  2067  001B16  6E0B               	movwf	(pushByte@rs+1)^0,c
  2068  001B18  0E01               	movlw	1
  2069  001B1A  6E0A               	movwf	pushByte@rs^0,c
  2070  001B1C  500E               	movf	lcdChar@value^0,w,c
  2071  001B1E  ECEA  F00B         	call	_pushByte
  2072  001B22                     
  2073                           ;lcd.c: 54:  delayMicro(80);
  2074  001B22  0E00               	movlw	0
  2075  001B24  6E02               	movwf	(delayMicro@a+1)^0,c
  2076  001B26  0E50               	movlw	80
  2077  001B28  6E01               	movwf	delayMicro@a^0,c
  2078  001B2A  ECBC  F00D         	call	_delayMicro	;wreg free
  2079  001B2E  0012               	return		;funcret
  2080  001B30                     __end_of_lcdChar:
  2081                           	opt callstack 0
  2082                           
  2083 ;; *************** function ___awdiv *****************
  2084 ;; Defined at:
  2085 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  dividend        2    0[COMRAM] int 
  2088 ;;  divisor         2    2[COMRAM] int 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  quotient        2    6[COMRAM] int 
  2091 ;;  sign            1    5[COMRAM] unsigned char 
  2092 ;;  counter         1    4[COMRAM] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  2    0[COMRAM] int 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2102 ;;      Params:         4       0       0       0       0       0       0
  2103 ;;      Locals:         4       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0
  2105 ;;      Totals:         8       0       0       0       0       0       0
  2106 ;;Total ram usage:        8 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_leTeclado
  2112 ;;		_dec2bcd
  2113 ;;		_bcd2dec
  2114 ;;		_lcdNumber
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text13
  2119  0012B0                     __ptext13:
  2120                           	opt callstack 0
  2121  0012B0                     ___awdiv:
  2122                           	opt callstack 29
  2123  0012B0  0E00               	movlw	0
  2124  0012B2  6E06               	movwf	___awdiv@sign^0,c
  2125  0012B4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2126  0012B6  EF61  F009         	goto	u1900
  2127  0012BA  EF5F  F009         	goto	u1901
  2128  0012BE                     u1901:
  2129  0012BE  EF67  F009         	goto	l2350
  2130  0012C2                     u1900:
  2131  0012C2  6C03               	negf	___awdiv@divisor^0,c
  2132  0012C4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2133  0012C6  B0D8               	btfsc	status,0,c
  2134  0012C8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2135  0012CA  0E01               	movlw	1
  2136  0012CC  6E06               	movwf	___awdiv@sign^0,c
  2137  0012CE                     l2350:
  2138  0012CE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2139  0012D0  EF6E  F009         	goto	u1910
  2140  0012D4  EF6C  F009         	goto	u1911
  2141  0012D8                     u1911:
  2142  0012D8  EF74  F009         	goto	l2356
  2143  0012DC                     u1910:
  2144  0012DC  6C01               	negf	___awdiv@dividend^0,c
  2145  0012DE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2146  0012E0  B0D8               	btfsc	status,0,c
  2147  0012E2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2148  0012E4  0E01               	movlw	1
  2149  0012E6  1A06               	xorwf	___awdiv@sign^0,f,c
  2150  0012E8                     l2356:
  2151  0012E8  0E00               	movlw	0
  2152  0012EA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2153  0012EC  0E00               	movlw	0
  2154  0012EE  6E07               	movwf	___awdiv@quotient^0,c
  2155  0012F0  5003               	movf	___awdiv@divisor^0,w,c
  2156  0012F2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2157  0012F4  B4D8               	btfsc	status,2,c
  2158  0012F6  EF7F  F009         	goto	u1921
  2159  0012FA  EF81  F009         	goto	u1920
  2160  0012FE                     u1921:
  2161  0012FE  EFA9  F009         	goto	l2378
  2162  001302                     u1920:
  2163  001302  0E01               	movlw	1
  2164  001304  6E05               	movwf	___awdiv@counter^0,c
  2165  001306  EF89  F009         	goto	l2364
  2166  00130A                     l2362:
  2167  00130A  90D8               	bcf	status,0,c
  2168  00130C  3603               	rlcf	___awdiv@divisor^0,f,c
  2169  00130E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2170  001310  2A05               	incf	___awdiv@counter^0,f,c
  2171  001312                     l2364:
  2172  001312  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2173  001314  EF8E  F009         	goto	u1931
  2174  001318  EF90  F009         	goto	u1930
  2175  00131C                     u1931:
  2176  00131C  EF85  F009         	goto	l2362
  2177  001320                     u1930:
  2178  001320                     l2366:
  2179  001320  90D8               	bcf	status,0,c
  2180  001322  3607               	rlcf	___awdiv@quotient^0,f,c
  2181  001324  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2182  001326  5003               	movf	___awdiv@divisor^0,w,c
  2183  001328  5C01               	subwf	___awdiv@dividend^0,w,c
  2184  00132A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2185  00132C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2186  00132E  A0D8               	btfss	status,0,c
  2187  001330  EF9C  F009         	goto	u1941
  2188  001334  EF9E  F009         	goto	u1940
  2189  001338                     u1941:
  2190  001338  EFA3  F009         	goto	l2374
  2191  00133C                     u1940:
  2192  00133C  5003               	movf	___awdiv@divisor^0,w,c
  2193  00133E  5E01               	subwf	___awdiv@dividend^0,f,c
  2194  001340  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2195  001342  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2196  001344  8007               	bsf	___awdiv@quotient^0,0,c
  2197  001346                     l2374:
  2198  001346  90D8               	bcf	status,0,c
  2199  001348  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2200  00134A  3203               	rrcf	___awdiv@divisor^0,f,c
  2201  00134C  2E05               	decfsz	___awdiv@counter^0,f,c
  2202  00134E  EF90  F009         	goto	l2366
  2203  001352                     l2378:
  2204  001352  5006               	movf	___awdiv@sign^0,w,c
  2205  001354  B4D8               	btfsc	status,2,c
  2206  001356  EFAF  F009         	goto	u1951
  2207  00135A  EFB1  F009         	goto	u1950
  2208  00135E                     u1951:
  2209  00135E  EFB5  F009         	goto	l2382
  2210  001362                     u1950:
  2211  001362  6C07               	negf	___awdiv@quotient^0,c
  2212  001364  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2213  001366  B0D8               	btfsc	status,0,c
  2214  001368  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2215  00136A                     l2382:
  2216  00136A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2217  00136E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2218  001372  0012               	return		;funcret
  2219  001374                     __end_of___awdiv:
  2220                           	opt callstack 0
  2221                           
  2222 ;; *************** function _lcdInit *****************
  2223 ;; Defined at:
  2224 ;;		line 72 in file "lcd.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2238 ;;      Params:         0       0       0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0
  2241 ;;      Totals:         0       0       0       0       0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    5
  2245 ;; This function calls:
  2246 ;;		_delayMicro
  2247 ;;		_delayMili
  2248 ;;		_lcdCommand
  2249 ;;		_pinMode
  2250 ;;		_pushNibble
  2251 ;;		_soInit
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text14
  2258  001374                     __ptext14:
  2259                           	opt callstack 0
  2260  001374                     _lcdInit:
  2261                           	opt callstack 25
  2262  001374                     
  2263                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2264  001374  0E00               	movlw	0
  2265  001376  6E02               	movwf	(pinMode@pin+1)^0,c
  2266  001378  0E1C               	movlw	28
  2267  00137A  6E01               	movwf	pinMode@pin^0,c
  2268  00137C  0E00               	movlw	0
  2269  00137E  6E04               	movwf	(pinMode@type+1)^0,c
  2270  001380  0E00               	movlw	0
  2271  001382  6E03               	movwf	pinMode@type^0,c
  2272  001384  EC35  F003         	call	_pinMode	;wreg free
  2273                           
  2274                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2275  001388  0E00               	movlw	0
  2276  00138A  6E02               	movwf	(pinMode@pin+1)^0,c
  2277  00138C  0E1D               	movlw	29
  2278  00138E  6E01               	movwf	pinMode@pin^0,c
  2279  001390  0E00               	movlw	0
  2280  001392  6E04               	movwf	(pinMode@type+1)^0,c
  2281  001394  0E00               	movlw	0
  2282  001396  6E03               	movwf	pinMode@type^0,c
  2283  001398  EC35  F003         	call	_pinMode	;wreg free
  2284                           
  2285                           ;lcd.c: 75:  soInit();
  2286  00139C  ECE1  F00C         	call	_soInit	;wreg free
  2287                           
  2288                           ;lcd.c: 76:  delayMili(15);
  2289  0013A0  0E00               	movlw	0
  2290  0013A2  6E02               	movwf	(delayMili@a+1)^0,c
  2291  0013A4  0E0F               	movlw	15
  2292  0013A6  6E01               	movwf	delayMili@a^0,c
  2293  0013A8  EC34  F00D         	call	_delayMili	;wreg free
  2294                           
  2295                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2296  0013AC  0E00               	movlw	0
  2297  0013AE  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2298  0013B0  0E00               	movlw	0
  2299  0013B2  6E0A               	movwf	pushNibble@rs^0,c
  2300  0013B4  0E03               	movlw	3
  2301  0013B6  EC76  F00D         	call	_pushNibble
  2302                           
  2303                           ;lcd.c: 79:  delayMili(5);
  2304  0013BA  0E00               	movlw	0
  2305  0013BC  6E02               	movwf	(delayMili@a+1)^0,c
  2306  0013BE  0E05               	movlw	5
  2307  0013C0  6E01               	movwf	delayMili@a^0,c
  2308  0013C2  EC34  F00D         	call	_delayMili	;wreg free
  2309                           
  2310                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2311  0013C6  0E00               	movlw	0
  2312  0013C8  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2313  0013CA  0E00               	movlw	0
  2314  0013CC  6E0A               	movwf	pushNibble@rs^0,c
  2315  0013CE  0E03               	movlw	3
  2316  0013D0  EC76  F00D         	call	_pushNibble
  2317  0013D4                     
  2318                           ;lcd.c: 81:  delayMicro(160);
  2319  0013D4  0E00               	movlw	0
  2320  0013D6  6E02               	movwf	(delayMicro@a+1)^0,c
  2321  0013D8  0EA0               	movlw	160
  2322  0013DA  6E01               	movwf	delayMicro@a^0,c
  2323  0013DC  ECBC  F00D         	call	_delayMicro	;wreg free
  2324  0013E0                     
  2325                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2326  0013E0  0E00               	movlw	0
  2327  0013E2  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2328  0013E4  0E00               	movlw	0
  2329  0013E6  6E0A               	movwf	pushNibble@rs^0,c
  2330  0013E8  0E03               	movlw	3
  2331  0013EA  EC76  F00D         	call	_pushNibble
  2332                           
  2333                           ;lcd.c: 83:  delayMicro(160);
  2334  0013EE  0E00               	movlw	0
  2335  0013F0  6E02               	movwf	(delayMicro@a+1)^0,c
  2336  0013F2  0EA0               	movlw	160
  2337  0013F4  6E01               	movwf	delayMicro@a^0,c
  2338  0013F6  ECBC  F00D         	call	_delayMicro	;wreg free
  2339  0013FA                     
  2340                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2341  0013FA  0E00               	movlw	0
  2342  0013FC  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2343  0013FE  0E00               	movlw	0
  2344  001400  6E0A               	movwf	pushNibble@rs^0,c
  2345  001402  0E02               	movlw	2
  2346  001404  EC76  F00D         	call	_pushNibble
  2347  001408                     
  2348                           ;lcd.c: 86:  delayMili(10);
  2349  001408  0E00               	movlw	0
  2350  00140A  6E02               	movwf	(delayMili@a+1)^0,c
  2351  00140C  0E0A               	movlw	10
  2352  00140E  6E01               	movwf	delayMili@a^0,c
  2353  001410  EC34  F00D         	call	_delayMili	;wreg free
  2354  001414                     
  2355                           ;lcd.c: 88:  lcdCommand(0x28);
  2356  001414  0E28               	movlw	40
  2357  001416  EC98  F00D         	call	_lcdCommand
  2358  00141A                     
  2359                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2360  00141A  0E0C               	movlw	12
  2361  00141C  EC98  F00D         	call	_lcdCommand
  2362  001420                     
  2363                           ;lcd.c: 90:  lcdCommand(0x01);
  2364  001420  0E01               	movlw	1
  2365  001422  EC98  F00D         	call	_lcdCommand
  2366  001426  0012               	return		;funcret
  2367  001428                     __end_of_lcdInit:
  2368                           	opt callstack 0
  2369                           
  2370 ;; *************** function _pushNibble *****************
  2371 ;; Defined at:
  2372 ;;		line 25 in file "lcd.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  value           1    wreg     unsigned char 
  2375 ;;  rs              2    9[COMRAM] int 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  value           1   11[COMRAM] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2, status,0, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2387 ;;      Params:         2       0       0       0       0       0       0
  2388 ;;      Locals:         1       0       0       0       0       0       0
  2389 ;;      Temps:          0       0       0       0       0       0       0
  2390 ;;      Totals:         3       0       0       0       0       0       0
  2391 ;;Total ram usage:        3 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    3
  2394 ;; This function calls:
  2395 ;;		_digitalWrite
  2396 ;;		_pulseEnablePin
  2397 ;;		_soWrite
  2398 ;; This function is called by:
  2399 ;;		_lcdInit
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text15
  2404  001AEC                     __ptext15:
  2405                           	opt callstack 0
  2406  001AEC                     _pushNibble:
  2407                           	opt callstack 26
  2408                           
  2409                           ;incstack = 0
  2410                           ;pushNibble@value stored from wreg
  2411  001AEC  6E0C               	movwf	pushNibble@value^0,c
  2412  001AEE                     
  2413                           ;lcd.c: 26:  soWrite(value);
  2414  001AEE  C00C  F007         	movff	pushNibble@value,soWrite@value
  2415  001AF2  6A08               	clrf	(soWrite@value+1)^0,c
  2416  001AF4  EC99  F00C         	call	_soWrite	;wreg free
  2417                           
  2418                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2419  001AF8  0E00               	movlw	0
  2420  001AFA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2421  001AFC  0E1D               	movlw	29
  2422  001AFE  6E01               	movwf	digitalWrite@pin^0,c
  2423  001B00  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2424  001B04  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2425  001B08  EC5C  F004         	call	_digitalWrite	;wreg free
  2426                           
  2427                           ;lcd.c: 28:  pulseEnablePin();
  2428  001B0C  ECC0  F00C         	call	_pulseEnablePin	;wreg free
  2429  001B10  0012               	return		;funcret
  2430  001B12                     __end_of_pushNibble:
  2431                           	opt callstack 0
  2432                           
  2433 ;; *************** function _lcdCommand *****************
  2434 ;; Defined at:
  2435 ;;		line 40 in file "lcd.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  value           1    wreg     unsigned char 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  value           1   13[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2449 ;;      Params:         0       0       0       0       0       0       0
  2450 ;;      Locals:         1       0       0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0
  2452 ;;      Totals:         1       0       0       0       0       0       0
  2453 ;;Total ram usage:        1 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    4
  2456 ;; This function calls:
  2457 ;;		_delayMili
  2458 ;;		_pushByte
  2459 ;; This function is called by:
  2460 ;;		_lcdInit
  2461 ;;		_leTeclado
  2462 ;;		_geraconta
  2463 ;;		_lcdPosition
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text16
  2468  001B30                     __ptext16:
  2469                           	opt callstack 0
  2470  001B30                     _lcdCommand:
  2471                           	opt callstack 25
  2472                           
  2473                           ;incstack = 0
  2474                           ;lcdCommand@value stored from wreg
  2475  001B30  6E0E               	movwf	lcdCommand@value^0,c
  2476  001B32                     
  2477                           ;lcd.c: 41:  pushByte(value, 0);
  2478  001B32  0E00               	movlw	0
  2479  001B34  6E0B               	movwf	(pushByte@rs+1)^0,c
  2480  001B36  0E00               	movlw	0
  2481  001B38  6E0A               	movwf	pushByte@rs^0,c
  2482  001B3A  500E               	movf	lcdCommand@value^0,w,c
  2483  001B3C  ECEA  F00B         	call	_pushByte
  2484                           
  2485                           ;lcd.c: 42:  delayMili(2);
  2486  001B40  0E00               	movlw	0
  2487  001B42  6E02               	movwf	(delayMili@a+1)^0,c
  2488  001B44  0E02               	movlw	2
  2489  001B46  6E01               	movwf	delayMili@a^0,c
  2490  001B48  EC34  F00D         	call	_delayMili	;wreg free
  2491  001B4C  0012               	return		;funcret
  2492  001B4E                     __end_of_lcdCommand:
  2493                           	opt callstack 0
  2494                           
  2495 ;; *************** function _pushByte *****************
  2496 ;; Defined at:
  2497 ;;		line 31 in file "lcd.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  value           1    wreg     unsigned char 
  2500 ;;  rs              2    9[COMRAM] int 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  value           1   12[COMRAM] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2512 ;;      Params:         2       0       0       0       0       0       0
  2513 ;;      Locals:         1       0       0       0       0       0       0
  2514 ;;      Temps:          1       0       0       0       0       0       0
  2515 ;;      Totals:         4       0       0       0       0       0       0
  2516 ;;Total ram usage:        4 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    3
  2519 ;; This function calls:
  2520 ;;		_digitalWrite
  2521 ;;		_pulseEnablePin
  2522 ;;		_soWrite
  2523 ;; This function is called by:
  2524 ;;		_lcdCommand
  2525 ;;		_lcdChar
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text17
  2530  0017D4                     __ptext17:
  2531                           	opt callstack 0
  2532  0017D4                     _pushByte:
  2533                           	opt callstack 24
  2534                           
  2535                           ;incstack = 0
  2536                           ;pushByte@value stored from wreg
  2537  0017D4  6E0D               	movwf	pushByte@value^0,c
  2538  0017D6                     
  2539                           ;lcd.c: 32:  soWrite(value >> 4);
  2540  0017D6  C00D  F00C         	movff	pushByte@value,??_pushByte
  2541  0017DA  3A0C               	swapf	??_pushByte^0,f,c
  2542  0017DC  0E0F               	movlw	15
  2543  0017DE  160C               	andwf	??_pushByte^0,f,c
  2544  0017E0  500C               	movf	??_pushByte^0,w,c
  2545  0017E2  6E07               	movwf	soWrite@value^0,c
  2546  0017E4  6A08               	clrf	(soWrite@value+1)^0,c
  2547  0017E6  EC99  F00C         	call	_soWrite	;wreg free
  2548                           
  2549                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2550  0017EA  0E00               	movlw	0
  2551  0017EC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2552  0017EE  0E1D               	movlw	29
  2553  0017F0  6E01               	movwf	digitalWrite@pin^0,c
  2554  0017F2  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2555  0017F6  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2556  0017FA  EC5C  F004         	call	_digitalWrite	;wreg free
  2557                           
  2558                           ;lcd.c: 34:  pulseEnablePin();
  2559  0017FE  ECC0  F00C         	call	_pulseEnablePin	;wreg free
  2560                           
  2561                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2562  001802  C00D  F00C         	movff	pushByte@value,??_pushByte
  2563  001806  0E0F               	movlw	15
  2564  001808  160C               	andwf	??_pushByte^0,f,c
  2565  00180A  500C               	movf	??_pushByte^0,w,c
  2566  00180C  6E07               	movwf	soWrite@value^0,c
  2567  00180E  6A08               	clrf	(soWrite@value+1)^0,c
  2568  001810  EC99  F00C         	call	_soWrite	;wreg free
  2569                           
  2570                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2571  001814  0E00               	movlw	0
  2572  001816  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2573  001818  0E1D               	movlw	29
  2574  00181A  6E01               	movwf	digitalWrite@pin^0,c
  2575  00181C  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2576  001820  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2577  001824  EC5C  F004         	call	_digitalWrite	;wreg free
  2578                           
  2579                           ;lcd.c: 38:  pulseEnablePin();
  2580  001828  ECC0  F00C         	call	_pulseEnablePin	;wreg free
  2581  00182C  0012               	return		;funcret
  2582  00182E                     __end_of_pushByte:
  2583                           	opt callstack 0
  2584                           
  2585 ;; *************** function _pulseEnablePin *****************
  2586 ;; Defined at:
  2587 ;;		line 18 in file "lcd.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2601 ;;      Params:         0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    1
  2608 ;; This function calls:
  2609 ;;		_delayMicro
  2610 ;;		_digitalWrite
  2611 ;; This function is called by:
  2612 ;;		_pushNibble
  2613 ;;		_pushByte
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text18
  2618  001980                     __ptext18:
  2619                           	opt callstack 0
  2620  001980                     _pulseEnablePin:
  2621                           	opt callstack 25
  2622  001980                     
  2623                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  2624  001980  0E00               	movlw	0
  2625  001982  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2626  001984  0E1C               	movlw	28
  2627  001986  6E01               	movwf	digitalWrite@pin^0,c
  2628  001988  0E00               	movlw	0
  2629  00198A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2630  00198C  0E01               	movlw	1
  2631  00198E  6E03               	movwf	digitalWrite@value^0,c
  2632  001990  EC5C  F004         	call	_digitalWrite	;wreg free
  2633  001994                     
  2634                           ;lcd.c: 20:  delayMicro(5);
  2635  001994  0E00               	movlw	0
  2636  001996  6E02               	movwf	(delayMicro@a+1)^0,c
  2637  001998  0E05               	movlw	5
  2638  00199A  6E01               	movwf	delayMicro@a^0,c
  2639  00199C  ECBC  F00D         	call	_delayMicro	;wreg free
  2640  0019A0                     
  2641                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  2642  0019A0  0E00               	movlw	0
  2643  0019A2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2644  0019A4  0E1C               	movlw	28
  2645  0019A6  6E01               	movwf	digitalWrite@pin^0,c
  2646  0019A8  0E00               	movlw	0
  2647  0019AA  6E04               	movwf	(digitalWrite@value+1)^0,c
  2648  0019AC  0E00               	movlw	0
  2649  0019AE  6E03               	movwf	digitalWrite@value^0,c
  2650  0019B0  EC5C  F004         	call	_digitalWrite	;wreg free
  2651                           
  2652                           ;lcd.c: 22:  delayMicro(5);
  2653  0019B4  0E00               	movlw	0
  2654  0019B6  6E02               	movwf	(delayMicro@a+1)^0,c
  2655  0019B8  0E05               	movlw	5
  2656  0019BA  6E01               	movwf	delayMicro@a^0,c
  2657  0019BC  ECBC  F00D         	call	_delayMicro	;wreg free
  2658  0019C0  0012               	return		;funcret
  2659  0019C2                     __end_of_pulseEnablePin:
  2660                           	opt callstack 0
  2661                           
  2662 ;; *************** function _delayMicro *****************
  2663 ;; Defined at:
  2664 ;;		line 5 in file "lcd.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  a               2    0[COMRAM] int 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  i               2    0        volatile int 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		None
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2678 ;;      Params:         2       0       0       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0
  2681 ;;      Totals:         2       0       0       0       0       0       0
  2682 ;;Total ram usage:        2 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_pulseEnablePin
  2688 ;;		_lcdChar
  2689 ;;		_lcdInit
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text19
  2694  001B78                     __ptext19:
  2695                           	opt callstack 0
  2696  001B78                     _delayMicro:
  2697                           	opt callstack 25
  2698  001B78  0012               	return		;funcret
  2699  001B7A                     __end_of_delayMicro:
  2700                           	opt callstack 0
  2701                           
  2702 ;; *************** function _delayMili *****************
  2703 ;; Defined at:
  2704 ;;		line 10 in file "lcd.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  a               2    0[COMRAM] int 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  i               2    3[COMRAM] volatile int 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2718 ;;      Params:         2       0       0       0       0       0       0
  2719 ;;      Locals:         2       0       0       0       0       0       0
  2720 ;;      Temps:          1       0       0       0       0       0       0
  2721 ;;      Totals:         5       0       0       0       0       0       0
  2722 ;;Total ram usage:        5 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_lcdCommand
  2728 ;;		_lcdInit
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text20
  2733  001A68                     __ptext20:
  2734                           	opt callstack 0
  2735  001A68                     _delayMili:
  2736                           	opt callstack 28
  2737  001A68                     
  2738                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  2739  001A68  0E00               	movlw	0
  2740  001A6A  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  2741  001A6C  0E00               	movlw	0
  2742  001A6E  6E04               	movwf	delayMili@i^0,c	;volatile
  2743  001A70  EF3C  F00D         	goto	l2062
  2744  001A74                     l2060:
  2745                           
  2746                           ;lcd.c: 15:  }
  2747  001A74  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  2748  001A76  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  2749  001A78                     l2062:
  2750  001A78  5001               	movf	delayMili@a^0,w,c
  2751  001A7A  5C04               	subwf	delayMili@i^0,w,c	;volatile
  2752  001A7C  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  2753  001A7E  0A80               	xorlw	128
  2754  001A80  6E03               	movwf	??_delayMili^0,c
  2755  001A82  5002               	movf	(delayMili@a+1)^0,w,c
  2756  001A84  0A80               	xorlw	128
  2757  001A86  5803               	subwfb	??_delayMili^0,w,c
  2758  001A88  A0D8               	btfss	status,0,c
  2759  001A8A  EF49  F00D         	goto	u1391
  2760  001A8E  EF4B  F00D         	goto	u1390
  2761  001A92                     u1391:
  2762  001A92  EF3A  F00D         	goto	l2060
  2763  001A96                     u1390:
  2764  001A96  0012               	return		;funcret
  2765  001A98                     __end_of_delayMili:
  2766                           	opt callstack 0
  2767                           
  2768 ;; *************** function _kpInit *****************
  2769 ;; Defined at:
  2770 ;;		line 54 in file "keypad.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2784 ;;      Params:         0       0       0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    2
  2791 ;; This function calls:
  2792 ;;		_pinMode
  2793 ;;		_soInit
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text21
  2800  001A36                     __ptext21:
  2801                           	opt callstack 0
  2802  001A36                     _kpInit:
  2803                           	opt callstack 28
  2804  001A36                     
  2805                           ;keypad.c: 55:   soInit();
  2806  001A36  ECE1  F00C         	call	_soInit	;wreg free
  2807                           
  2808                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2809  001A3A  0E00               	movlw	0
  2810  001A3C  6E02               	movwf	(pinMode@pin+1)^0,c
  2811  001A3E  0E0A               	movlw	10
  2812  001A40  6E01               	movwf	pinMode@pin^0,c
  2813  001A42  0E00               	movlw	0
  2814  001A44  6E04               	movwf	(pinMode@type+1)^0,c
  2815  001A46  0E01               	movlw	1
  2816  001A48  6E03               	movwf	pinMode@type^0,c
  2817  001A4A  EC35  F003         	call	_pinMode	;wreg free
  2818                           
  2819                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2820  001A4E  0E00               	movlw	0
  2821  001A50  6E02               	movwf	(pinMode@pin+1)^0,c
  2822  001A52  0E09               	movlw	9
  2823  001A54  6E01               	movwf	pinMode@pin^0,c
  2824  001A56  0E00               	movlw	0
  2825  001A58  6E04               	movwf	(pinMode@type+1)^0,c
  2826  001A5A  0E01               	movlw	1
  2827  001A5C  6E03               	movwf	pinMode@type^0,c
  2828  001A5E  EC35  F003         	call	_pinMode	;wreg free
  2829  001A62                     
  2830                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2831  001A62  0E0C               	movlw	12
  2832  001A64  6EC1               	movwf	193,c	;volatile
  2833  001A66  0012               	return		;funcret
  2834  001A68                     __end_of_kpInit:
  2835                           	opt callstack 0
  2836                           
  2837 ;; *************** function _soInit *****************
  2838 ;; Defined at:
  2839 ;;		line 3 in file "so.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2853 ;;      Params:         0       0       0       0       0       0       0
  2854 ;;      Locals:         0       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0
  2856 ;;      Totals:         0       0       0       0       0       0       0
  2857 ;;Total ram usage:        0 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    1
  2860 ;; This function calls:
  2861 ;;		_pinMode
  2862 ;; This function is called by:
  2863 ;;		_kpInit
  2864 ;;		_lcdInit
  2865 ;;		_ssdInit
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text22
  2870  0019C2                     __ptext22:
  2871                           	opt callstack 0
  2872  0019C2                     _soInit:
  2873                           	opt callstack 28
  2874  0019C2                     
  2875                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2876  0019C2  0E00               	movlw	0
  2877  0019C4  6E02               	movwf	(pinMode@pin+1)^0,c
  2878  0019C6  0E1F               	movlw	31
  2879  0019C8  6E01               	movwf	pinMode@pin^0,c
  2880  0019CA  0E00               	movlw	0
  2881  0019CC  6E04               	movwf	(pinMode@type+1)^0,c
  2882  0019CE  0E00               	movlw	0
  2883  0019D0  6E03               	movwf	pinMode@type^0,c
  2884  0019D2  EC35  F003         	call	_pinMode	;wreg free
  2885                           
  2886                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2887  0019D6  0E00               	movlw	0
  2888  0019D8  6E02               	movwf	(pinMode@pin+1)^0,c
  2889  0019DA  0E08               	movlw	8
  2890  0019DC  6E01               	movwf	pinMode@pin^0,c
  2891  0019DE  0E00               	movlw	0
  2892  0019E0  6E04               	movwf	(pinMode@type+1)^0,c
  2893  0019E2  0E00               	movlw	0
  2894  0019E4  6E03               	movwf	pinMode@type^0,c
  2895  0019E6  EC35  F003         	call	_pinMode	;wreg free
  2896                           
  2897                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2898  0019EA  0E00               	movlw	0
  2899  0019EC  6E02               	movwf	(pinMode@pin+1)^0,c
  2900  0019EE  0E1E               	movlw	30
  2901  0019F0  6E01               	movwf	pinMode@pin^0,c
  2902  0019F2  0E00               	movlw	0
  2903  0019F4  6E04               	movwf	(pinMode@type+1)^0,c
  2904  0019F6  0E00               	movlw	0
  2905  0019F8  6E03               	movwf	pinMode@type^0,c
  2906  0019FA  EC35  F003         	call	_pinMode	;wreg free
  2907  0019FE  0012               	return		;funcret
  2908  001A00                     __end_of_soInit:
  2909                           	opt callstack 0
  2910                           
  2911 ;; *************** function _pinMode *****************
  2912 ;; Defined at:
  2913 ;;		line 54 in file "io.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  pin             2    0[COMRAM] int 
  2916 ;;  type            2    2[COMRAM] int 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2928 ;;      Params:         4       0       0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0
  2930 ;;      Temps:          2       0       0       0       0       0       0
  2931 ;;      Totals:         6       0       0       0       0       0       0
  2932 ;;Total ram usage:        6 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_kpInit
  2938 ;;		_lcdInit
  2939 ;;		_soInit
  2940 ;;		_ssdInit
  2941 ;;		_i2cInit
  2942 ;;		_read_SCL
  2943 ;;		_read_SDA
  2944 ;;		_clear_SCL
  2945 ;;		_clear_SDA
  2946 ;;		_rgbInit
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text23
  2951  00066A                     __ptext23:
  2952                           	opt callstack 0
  2953  00066A                     _pinMode:
  2954                           	opt callstack 28
  2955  00066A                     
  2956                           ;io.c: 56:     if(pin <8){
  2957  00066A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2958  00066C  EF43  F003         	goto	u1400
  2959  000670  5002               	movf	(pinMode@pin+1)^0,w,c
  2960  000672  E107               	bnz	u1401
  2961  000674  0E08               	movlw	8
  2962  000676  5C01               	subwf	pinMode@pin^0,w,c
  2963  000678  B0D8               	btfsc	status,0,c
  2964  00067A  EF41  F003         	goto	u1401
  2965  00067E  EF43  F003         	goto	u1400
  2966  000682                     u1401:
  2967  000682  EF6D  F003         	goto	l2076
  2968  000686                     u1400:
  2969  000686                     
  2970                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2971  000686  5003               	movf	pinMode@type^0,w,c
  2972  000688  1004               	iorwf	(pinMode@type+1)^0,w,c
  2973  00068A  B4D8               	btfsc	status,2,c
  2974  00068C  EF4A  F003         	goto	u1411
  2975  000690  EF4C  F003         	goto	u1410
  2976  000694                     u1411:
  2977  000694  EF5C  F003         	goto	l2074
  2978  000698                     u1410:
  2979  000698  C001  F005         	movff	pinMode@pin,??_pinMode
  2980  00069C  0E01               	movlw	1
  2981  00069E  6E06               	movwf	(??_pinMode+1)^0,c
  2982  0006A0  2A05               	incf	??_pinMode^0,f,c
  2983  0006A2  EF55  F003         	goto	u1424
  2984  0006A6                     u1425:
  2985  0006A6  90D8               	bcf	status,0,c
  2986  0006A8  3606               	rlcf	(??_pinMode+1)^0,f,c
  2987  0006AA                     u1424:
  2988  0006AA  2E05               	decfsz	??_pinMode^0,f,c
  2989  0006AC  EF53  F003         	goto	u1425
  2990  0006B0  5006               	movf	(??_pinMode+1)^0,w,c
  2991  0006B2  1292               	iorwf	146,f,c	;volatile
  2992  0006B4  EF5B  F004         	goto	l173
  2993  0006B8                     l2074:
  2994  0006B8  C001  F005         	movff	pinMode@pin,??_pinMode
  2995  0006BC  0E01               	movlw	1
  2996  0006BE  6E06               	movwf	(??_pinMode+1)^0,c
  2997  0006C0  2A05               	incf	??_pinMode^0,f,c
  2998  0006C2  EF65  F003         	goto	u1434
  2999  0006C6                     u1435:
  3000  0006C6  90D8               	bcf	status,0,c
  3001  0006C8  3606               	rlcf	(??_pinMode+1)^0,f,c
  3002  0006CA                     u1434:
  3003  0006CA  2E05               	decfsz	??_pinMode^0,f,c
  3004  0006CC  EF63  F003         	goto	u1435
  3005  0006D0  5006               	movf	(??_pinMode+1)^0,w,c
  3006  0006D2  0AFF               	xorlw	255
  3007  0006D4  1692               	andwf	146,f,c	;volatile
  3008  0006D6  EF5B  F004         	goto	l173
  3009  0006DA                     l2076:
  3010  0006DA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3011  0006DC  EF7B  F003         	goto	u1440
  3012  0006E0  5002               	movf	(pinMode@pin+1)^0,w,c
  3013  0006E2  E107               	bnz	u1441
  3014  0006E4  0E10               	movlw	16
  3015  0006E6  5C01               	subwf	pinMode@pin^0,w,c
  3016  0006E8  B0D8               	btfsc	status,0,c
  3017  0006EA  EF79  F003         	goto	u1441
  3018  0006EE  EF7B  F003         	goto	u1440
  3019  0006F2                     u1441:
  3020  0006F2  EFA9  F003         	goto	l2084
  3021  0006F6                     u1440:
  3022  0006F6                     
  3023                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3024  0006F6  5003               	movf	pinMode@type^0,w,c
  3025  0006F8  1004               	iorwf	(pinMode@type+1)^0,w,c
  3026  0006FA  B4D8               	btfsc	status,2,c
  3027  0006FC  EF82  F003         	goto	u1451
  3028  000700  EF84  F003         	goto	u1450
  3029  000704                     u1451:
  3030  000704  EF96  F003         	goto	l2082
  3031  000708                     u1450:
  3032  000708  C001  F005         	movff	pinMode@pin,??_pinMode
  3033  00070C  0EF8               	movlw	-8
  3034  00070E  2605               	addwf	??_pinMode^0,f,c
  3035  000710  0E01               	movlw	1
  3036  000712  6E06               	movwf	(??_pinMode+1)^0,c
  3037  000714  2A05               	incf	??_pinMode^0,f,c
  3038  000716  EF8F  F003         	goto	u1464
  3039  00071A                     u1465:
  3040  00071A  90D8               	bcf	status,0,c
  3041  00071C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3042  00071E                     u1464:
  3043  00071E  2E05               	decfsz	??_pinMode^0,f,c
  3044  000720  EF8D  F003         	goto	u1465
  3045  000724  5006               	movf	(??_pinMode+1)^0,w,c
  3046  000726  1293               	iorwf	147,f,c	;volatile
  3047  000728  EF5B  F004         	goto	l173
  3048  00072C                     l2082:
  3049  00072C  C001  F005         	movff	pinMode@pin,??_pinMode
  3050  000730  0EF8               	movlw	-8
  3051  000732  2605               	addwf	??_pinMode^0,f,c
  3052  000734  0E01               	movlw	1
  3053  000736  6E06               	movwf	(??_pinMode+1)^0,c
  3054  000738  2A05               	incf	??_pinMode^0,f,c
  3055  00073A  EFA1  F003         	goto	u1474
  3056  00073E                     u1475:
  3057  00073E  90D8               	bcf	status,0,c
  3058  000740  3606               	rlcf	(??_pinMode+1)^0,f,c
  3059  000742                     u1474:
  3060  000742  2E05               	decfsz	??_pinMode^0,f,c
  3061  000744  EF9F  F003         	goto	u1475
  3062  000748  5006               	movf	(??_pinMode+1)^0,w,c
  3063  00074A  0AFF               	xorlw	255
  3064  00074C  1693               	andwf	147,f,c	;volatile
  3065  00074E  EF5B  F004         	goto	l173
  3066  000752                     l2084:
  3067  000752  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3068  000754  EFB7  F003         	goto	u1480
  3069  000758  5002               	movf	(pinMode@pin+1)^0,w,c
  3070  00075A  E107               	bnz	u1481
  3071  00075C  0E18               	movlw	24
  3072  00075E  5C01               	subwf	pinMode@pin^0,w,c
  3073  000760  B0D8               	btfsc	status,0,c
  3074  000762  EFB5  F003         	goto	u1481
  3075  000766  EFB7  F003         	goto	u1480
  3076  00076A                     u1481:
  3077  00076A  EFE5  F003         	goto	l2092
  3078  00076E                     u1480:
  3079  00076E                     
  3080                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3081  00076E  5003               	movf	pinMode@type^0,w,c
  3082  000770  1004               	iorwf	(pinMode@type+1)^0,w,c
  3083  000772  B4D8               	btfsc	status,2,c
  3084  000774  EFBE  F003         	goto	u1491
  3085  000778  EFC0  F003         	goto	u1490
  3086  00077C                     u1491:
  3087  00077C  EFD2  F003         	goto	l2090
  3088  000780                     u1490:
  3089  000780  C001  F005         	movff	pinMode@pin,??_pinMode
  3090  000784  0EF0               	movlw	-16
  3091  000786  2605               	addwf	??_pinMode^0,f,c
  3092  000788  0E01               	movlw	1
  3093  00078A  6E06               	movwf	(??_pinMode+1)^0,c
  3094  00078C  2A05               	incf	??_pinMode^0,f,c
  3095  00078E  EFCB  F003         	goto	u1504
  3096  000792                     u1505:
  3097  000792  90D8               	bcf	status,0,c
  3098  000794  3606               	rlcf	(??_pinMode+1)^0,f,c
  3099  000796                     u1504:
  3100  000796  2E05               	decfsz	??_pinMode^0,f,c
  3101  000798  EFC9  F003         	goto	u1505
  3102  00079C  5006               	movf	(??_pinMode+1)^0,w,c
  3103  00079E  1294               	iorwf	148,f,c	;volatile
  3104  0007A0  EF5B  F004         	goto	l173
  3105  0007A4                     l2090:
  3106  0007A4  C001  F005         	movff	pinMode@pin,??_pinMode
  3107  0007A8  0EF0               	movlw	-16
  3108  0007AA  2605               	addwf	??_pinMode^0,f,c
  3109  0007AC  0E01               	movlw	1
  3110  0007AE  6E06               	movwf	(??_pinMode+1)^0,c
  3111  0007B0  2A05               	incf	??_pinMode^0,f,c
  3112  0007B2  EFDD  F003         	goto	u1514
  3113  0007B6                     u1515:
  3114  0007B6  90D8               	bcf	status,0,c
  3115  0007B8  3606               	rlcf	(??_pinMode+1)^0,f,c
  3116  0007BA                     u1514:
  3117  0007BA  2E05               	decfsz	??_pinMode^0,f,c
  3118  0007BC  EFDB  F003         	goto	u1515
  3119  0007C0  5006               	movf	(??_pinMode+1)^0,w,c
  3120  0007C2  0AFF               	xorlw	255
  3121  0007C4  1694               	andwf	148,f,c	;volatile
  3122  0007C6  EF5B  F004         	goto	l173
  3123  0007CA                     l2092:
  3124  0007CA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3125  0007CC  EFF3  F003         	goto	u1520
  3126  0007D0  5002               	movf	(pinMode@pin+1)^0,w,c
  3127  0007D2  E107               	bnz	u1521
  3128  0007D4  0E20               	movlw	32
  3129  0007D6  5C01               	subwf	pinMode@pin^0,w,c
  3130  0007D8  B0D8               	btfsc	status,0,c
  3131  0007DA  EFF1  F003         	goto	u1521
  3132  0007DE  EFF3  F003         	goto	u1520
  3133  0007E2                     u1521:
  3134  0007E2  EF21  F004         	goto	l2100
  3135  0007E6                     u1520:
  3136  0007E6                     
  3137                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3138  0007E6  5003               	movf	pinMode@type^0,w,c
  3139  0007E8  1004               	iorwf	(pinMode@type+1)^0,w,c
  3140  0007EA  B4D8               	btfsc	status,2,c
  3141  0007EC  EFFA  F003         	goto	u1531
  3142  0007F0  EFFC  F003         	goto	u1530
  3143  0007F4                     u1531:
  3144  0007F4  EF0E  F004         	goto	l2098
  3145  0007F8                     u1530:
  3146  0007F8  C001  F005         	movff	pinMode@pin,??_pinMode
  3147  0007FC  0EE8               	movlw	-24
  3148  0007FE  2605               	addwf	??_pinMode^0,f,c
  3149  000800  0E01               	movlw	1
  3150  000802  6E06               	movwf	(??_pinMode+1)^0,c
  3151  000804  2A05               	incf	??_pinMode^0,f,c
  3152  000806  EF07  F004         	goto	u1544
  3153  00080A                     u1545:
  3154  00080A  90D8               	bcf	status,0,c
  3155  00080C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3156  00080E                     u1544:
  3157  00080E  2E05               	decfsz	??_pinMode^0,f,c
  3158  000810  EF05  F004         	goto	u1545
  3159  000814  5006               	movf	(??_pinMode+1)^0,w,c
  3160  000816  1295               	iorwf	149,f,c	;volatile
  3161  000818  EF5B  F004         	goto	l173
  3162  00081C                     l2098:
  3163  00081C  C001  F005         	movff	pinMode@pin,??_pinMode
  3164  000820  0EE8               	movlw	-24
  3165  000822  2605               	addwf	??_pinMode^0,f,c
  3166  000824  0E01               	movlw	1
  3167  000826  6E06               	movwf	(??_pinMode+1)^0,c
  3168  000828  2A05               	incf	??_pinMode^0,f,c
  3169  00082A  EF19  F004         	goto	u1554
  3170  00082E                     u1555:
  3171  00082E  90D8               	bcf	status,0,c
  3172  000830  3606               	rlcf	(??_pinMode+1)^0,f,c
  3173  000832                     u1554:
  3174  000832  2E05               	decfsz	??_pinMode^0,f,c
  3175  000834  EF17  F004         	goto	u1555
  3176  000838  5006               	movf	(??_pinMode+1)^0,w,c
  3177  00083A  0AFF               	xorlw	255
  3178  00083C  1695               	andwf	149,f,c	;volatile
  3179  00083E  EF5B  F004         	goto	l173
  3180  000842                     l2100:
  3181  000842  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3182  000844  EF2F  F004         	goto	u1560
  3183  000848  5002               	movf	(pinMode@pin+1)^0,w,c
  3184  00084A  E107               	bnz	u1561
  3185  00084C  0E28               	movlw	40
  3186  00084E  5C01               	subwf	pinMode@pin^0,w,c
  3187  000850  B0D8               	btfsc	status,0,c
  3188  000852  EF2D  F004         	goto	u1561
  3189  000856  EF2F  F004         	goto	u1560
  3190  00085A                     u1561:
  3191  00085A  EF5B  F004         	goto	l173
  3192  00085E                     u1560:
  3193  00085E                     
  3194                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3195  00085E  5003               	movf	pinMode@type^0,w,c
  3196  000860  1004               	iorwf	(pinMode@type+1)^0,w,c
  3197  000862  B4D8               	btfsc	status,2,c
  3198  000864  EF36  F004         	goto	u1571
  3199  000868  EF38  F004         	goto	u1570
  3200  00086C                     u1571:
  3201  00086C  EF4A  F004         	goto	l2106
  3202  000870                     u1570:
  3203  000870  C001  F005         	movff	pinMode@pin,??_pinMode
  3204  000874  0EE0               	movlw	-32
  3205  000876  2605               	addwf	??_pinMode^0,f,c
  3206  000878  0E01               	movlw	1
  3207  00087A  6E06               	movwf	(??_pinMode+1)^0,c
  3208  00087C  2A05               	incf	??_pinMode^0,f,c
  3209  00087E  EF43  F004         	goto	u1584
  3210  000882                     u1585:
  3211  000882  90D8               	bcf	status,0,c
  3212  000884  3606               	rlcf	(??_pinMode+1)^0,f,c
  3213  000886                     u1584:
  3214  000886  2E05               	decfsz	??_pinMode^0,f,c
  3215  000888  EF41  F004         	goto	u1585
  3216  00088C  5006               	movf	(??_pinMode+1)^0,w,c
  3217  00088E  1296               	iorwf	150,f,c	;volatile
  3218  000890  EF5B  F004         	goto	l173
  3219  000894                     l2106:
  3220  000894  C001  F005         	movff	pinMode@pin,??_pinMode
  3221  000898  0EE0               	movlw	-32
  3222  00089A  2605               	addwf	??_pinMode^0,f,c
  3223  00089C  0E01               	movlw	1
  3224  00089E  6E06               	movwf	(??_pinMode+1)^0,c
  3225  0008A0  2A05               	incf	??_pinMode^0,f,c
  3226  0008A2  EF55  F004         	goto	u1594
  3227  0008A6                     u1595:
  3228  0008A6  90D8               	bcf	status,0,c
  3229  0008A8  3606               	rlcf	(??_pinMode+1)^0,f,c
  3230  0008AA                     u1594:
  3231  0008AA  2E05               	decfsz	??_pinMode^0,f,c
  3232  0008AC  EF53  F004         	goto	u1595
  3233  0008B0  5006               	movf	(??_pinMode+1)^0,w,c
  3234  0008B2  0AFF               	xorlw	255
  3235  0008B4  1696               	andwf	150,f,c	;volatile
  3236  0008B6                     l173:
  3237  0008B6  0012               	return		;funcret
  3238  0008B8                     __end_of_pinMode:
  3239                           	opt callstack 0
  3240                           
  3241 ;; *************** function _kpDebounce *****************
  3242 ;; Defined at:
  3243 ;;		line 27 in file "keypad.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  i               2   12[COMRAM] int 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3257 ;;      Params:         0       0       0       0       0       0       0
  3258 ;;      Locals:         2       0       0       0       0       0       0
  3259 ;;      Temps:          3       0       0       0       0       0       0
  3260 ;;      Totals:         5       0       0       0       0       0       0
  3261 ;;Total ram usage:        5 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    3
  3264 ;; This function calls:
  3265 ;;		_digitalRead
  3266 ;;		_soWrite
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text24
  3273  000F88                     __ptext24:
  3274                           	opt callstack 0
  3275  000F88                     _kpDebounce:
  3276                           	opt callstack 27
  3277  000F88                     
  3278                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3279  000F88  0E00               	movlw	0
  3280  000F8A  6E3B               	movwf	(kpDebounce@newRead+1)^0,c
  3281  000F8C  0E00               	movlw	0
  3282  000F8E  6E3A               	movwf	kpDebounce@newRead^0,c
  3283                           
  3284                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3285  000F90  0E00               	movlw	0
  3286  000F92  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3287  000F94  0E00               	movlw	0
  3288  000F96  6E0D               	movwf	kpDebounce@i^0,c
  3289  000F98                     l2496:
  3290  000F98  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3291  000F9A  EFD8  F007         	goto	u2091
  3292  000F9E  500E               	movf	(kpDebounce@i+1)^0,w,c
  3293  000FA0  E109               	bnz	u2090
  3294  000FA2  0E05               	movlw	5
  3295  000FA4  5C0D               	subwf	kpDebounce@i^0,w,c
  3296  000FA6  A0D8               	btfss	status,0,c
  3297  000FA8  EFD8  F007         	goto	u2091
  3298  000FAC  EFDA  F007         	goto	u2090
  3299  000FB0                     u2091:
  3300  000FB0  EFDC  F007         	goto	l2500
  3301  000FB4                     u2090:
  3302  000FB4  EF3D  F008         	goto	l2512
  3303  000FB8                     l2500:
  3304                           
  3305                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3306  000FB8  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3307  000FBC  0E03               	movlw	3
  3308  000FBE  260A               	addwf	??_kpDebounce^0,f,c
  3309  000FC0  0E01               	movlw	1
  3310  000FC2  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3311  000FC4  0E00               	movlw	0
  3312  000FC6  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3313  000FC8  2A0A               	incf	??_kpDebounce^0,f,c
  3314  000FCA  EFEA  F007         	goto	u2104
  3315  000FCE                     u2105:
  3316  000FCE  90D8               	bcf	status,0,c
  3317  000FD0  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3318  000FD2  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3319  000FD4                     u2104:
  3320  000FD4  2E0A               	decfsz	??_kpDebounce^0,f,c
  3321  000FD6  EFE7  F007         	goto	u2105
  3322  000FDA  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3323  000FDE  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3324  000FE2  EC99  F00C         	call	_soWrite	;wreg free
  3325                           
  3326                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3327  000FE6  0E00               	movlw	0
  3328  000FE8  6E02               	movwf	(digitalRead@pin+1)^0,c
  3329  000FEA  0E0A               	movlw	10
  3330  000FEC  6E01               	movwf	digitalRead@pin^0,c
  3331  000FEE  EC0F  F007         	call	_digitalRead	;wreg free
  3332  000FF2  5001               	movf	?_digitalRead^0,w,c
  3333  000FF4  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3334  000FF6  B4D8               	btfsc	status,2,c
  3335  000FF8  EF00  F008         	goto	u2111
  3336  000FFC  EF02  F008         	goto	u2110
  3337  001000                     u2111:
  3338  001000  EF15  F008         	goto	l2504
  3339  001004                     u2110:
  3340  001004                     
  3341                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3342  001004  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3343  001008  0E01               	movlw	1
  3344  00100A  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3345  00100C  0E00               	movlw	0
  3346  00100E  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3347  001010  2A0A               	incf	??_kpDebounce^0,f,c
  3348  001012  EF0E  F008         	goto	u2124
  3349  001016                     u2125:
  3350  001016  90D8               	bcf	status,0,c
  3351  001018  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3352  00101A  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3353  00101C                     u2124:
  3354  00101C  2E0A               	decfsz	??_kpDebounce^0,f,c
  3355  00101E  EF0B  F008         	goto	u2125
  3356  001022  500B               	movf	(??_kpDebounce+1)^0,w,c
  3357  001024  123A               	iorwf	kpDebounce@newRead^0,f,c
  3358  001026  500C               	movf	(??_kpDebounce+2)^0,w,c
  3359  001028  123B               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3360  00102A                     l2504:
  3361                           
  3362                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3363  00102A  0E00               	movlw	0
  3364  00102C  6E02               	movwf	(digitalRead@pin+1)^0,c
  3365  00102E  0E09               	movlw	9
  3366  001030  6E01               	movwf	digitalRead@pin^0,c
  3367  001032  EC0F  F007         	call	_digitalRead	;wreg free
  3368  001036  5001               	movf	?_digitalRead^0,w,c
  3369  001038  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3370  00103A  B4D8               	btfsc	status,2,c
  3371  00103C  EF22  F008         	goto	u2131
  3372  001040  EF24  F008         	goto	u2130
  3373  001044                     u2131:
  3374  001044  EF39  F008         	goto	l2508
  3375  001048                     u2130:
  3376  001048                     
  3377                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3378  001048  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3379  00104C  0E05               	movlw	5
  3380  00104E  260A               	addwf	??_kpDebounce^0,f,c
  3381  001050  0E01               	movlw	1
  3382  001052  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3383  001054  0E00               	movlw	0
  3384  001056  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3385  001058  2A0A               	incf	??_kpDebounce^0,f,c
  3386  00105A  EF32  F008         	goto	u2144
  3387  00105E                     u2145:
  3388  00105E  90D8               	bcf	status,0,c
  3389  001060  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3390  001062  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3391  001064                     u2144:
  3392  001064  2E0A               	decfsz	??_kpDebounce^0,f,c
  3393  001066  EF2F  F008         	goto	u2145
  3394  00106A  500B               	movf	(??_kpDebounce+1)^0,w,c
  3395  00106C  123A               	iorwf	kpDebounce@newRead^0,f,c
  3396  00106E  500C               	movf	(??_kpDebounce+2)^0,w,c
  3397  001070  123B               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3398  001072                     l2508:
  3399                           
  3400                           ;keypad.c: 42:     }
  3401  001072  4A0D               	infsnz	kpDebounce@i^0,f,c
  3402  001074  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3403  001076  EFCC  F007         	goto	l2496
  3404  00107A                     l2512:
  3405                           
  3406                           ;keypad.c: 43:     if (oldRead == newRead) {
  3407  00107A  503A               	movf	kpDebounce@newRead^0,w,c
  3408  00107C  1838               	xorwf	kpDebounce@oldRead^0,w,c
  3409  00107E  E107               	bnz	u2151
  3410  001080  503B               	movf	(kpDebounce@newRead+1)^0,w,c
  3411  001082  1839               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3412  001084  A4D8               	btfss	status,2,c
  3413  001086  EF47  F008         	goto	u2151
  3414  00108A  EF49  F008         	goto	u2150
  3415  00108E                     u2151:
  3416  00108E  EF4C  F008         	goto	l2516
  3417  001092                     u2150:
  3418  001092                     
  3419                           ;keypad.c: 44:         tempo--;
  3420  001092  0648               	decf	kpDebounce@tempo^0,f,c
  3421                           
  3422                           ;keypad.c: 45:     } else {
  3423  001094  EF52  F008         	goto	l210
  3424  001098                     l2516:
  3425                           
  3426                           ;keypad.c: 46:         tempo = 1;
  3427  001098  0E01               	movlw	1
  3428  00109A  6E48               	movwf	kpDebounce@tempo^0,c
  3429  00109C                     
  3430                           ;keypad.c: 47:         oldRead = newRead;
  3431  00109C  C03A  F038         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3432  0010A0  C03B  F039         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3433  0010A4                     l210:
  3434                           
  3435                           ;keypad.c: 49:     if (tempo == 0) {
  3436  0010A4  5048               	movf	kpDebounce@tempo^0,w,c
  3437  0010A6  A4D8               	btfss	status,2,c
  3438  0010A8  EF58  F008         	goto	u2161
  3439  0010AC  EF5A  F008         	goto	u2160
  3440  0010B0                     u2161:
  3441  0010B0  EF5E  F008         	goto	l212
  3442  0010B4                     u2160:
  3443  0010B4                     
  3444                           ;keypad.c: 50:         keys = oldRead;
  3445  0010B4  C038  F03C         	movff	kpDebounce@oldRead,_keys
  3446  0010B8  C039  F03D         	movff	kpDebounce@oldRead+1,_keys+1
  3447  0010BC                     l212:
  3448  0010BC  0012               	return		;funcret
  3449  0010BE                     __end_of_kpDebounce:
  3450                           	opt callstack 0
  3451                           
  3452 ;; *************** function _digitalRead *****************
  3453 ;; Defined at:
  3454 ;;		line 39 in file "io.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  pin             2    0[COMRAM] int 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  2    0[COMRAM] int 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3468 ;;      Params:         2       0       0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0
  3470 ;;      Temps:          3       0       0       0       0       0       0
  3471 ;;      Totals:         5       0       0       0       0       0       0
  3472 ;;Total ram usage:        5 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_kpDebounce
  3478 ;;		_read_SCL
  3479 ;;		_read_SDA
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text25
  3484  000E1E                     __ptext25:
  3485                           	opt callstack 0
  3486  000E1E                     _digitalRead:
  3487                           	opt callstack 29
  3488  000E1E                     
  3489                           ;io.c: 40:     if(pin <8){
  3490  000E1E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3491  000E20  EF1D  F007         	goto	u1720
  3492  000E24  5002               	movf	(digitalRead@pin+1)^0,w,c
  3493  000E26  E107               	bnz	u1721
  3494  000E28  0E08               	movlw	8
  3495  000E2A  5C01               	subwf	digitalRead@pin^0,w,c
  3496  000E2C  B0D8               	btfsc	status,0,c
  3497  000E2E  EF1B  F007         	goto	u1721
  3498  000E32  EF1D  F007         	goto	u1720
  3499  000E36                     u1721:
  3500  000E36  EF31  F007         	goto	l2180
  3501  000E3A                     u1720:
  3502  000E3A                     
  3503                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  3504  000E3A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3505  000E3E  0E01               	movlw	1
  3506  000E40  6E04               	movwf	(??_digitalRead+1)^0,c
  3507  000E42  2A03               	incf	??_digitalRead^0,f,c
  3508  000E44  EF26  F007         	goto	u1734
  3509  000E48                     u1735:
  3510  000E48  90D8               	bcf	status,0,c
  3511  000E4A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3512  000E4C                     u1734:
  3513  000E4C  2E03               	decfsz	??_digitalRead^0,f,c
  3514  000E4E  EF24  F007         	goto	u1735
  3515  000E52  5004               	movf	(??_digitalRead+1)^0,w,c
  3516  000E54  1480               	andwf	128,w,c	;volatile
  3517  000E56  6E05               	movwf	(??_digitalRead+2)^0,c
  3518  000E58  5005               	movf	(??_digitalRead+2)^0,w,c
  3519  000E5A  6E01               	movwf	?_digitalRead^0,c
  3520  000E5C  6A02               	clrf	(?_digitalRead+1)^0,c
  3521  000E5E  EFC3  F007         	goto	l143
  3522  000E62                     l2180:
  3523  000E62  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3524  000E64  EF3F  F007         	goto	u1740
  3525  000E68  5002               	movf	(digitalRead@pin+1)^0,w,c
  3526  000E6A  E107               	bnz	u1741
  3527  000E6C  0E10               	movlw	16
  3528  000E6E  5C01               	subwf	digitalRead@pin^0,w,c
  3529  000E70  B0D8               	btfsc	status,0,c
  3530  000E72  EF3D  F007         	goto	u1741
  3531  000E76  EF3F  F007         	goto	u1740
  3532  000E7A                     u1741:
  3533  000E7A  EF55  F007         	goto	l2188
  3534  000E7E                     u1740:
  3535  000E7E                     
  3536                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  3537  000E7E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3538  000E82  0EF8               	movlw	-8
  3539  000E84  2603               	addwf	??_digitalRead^0,f,c
  3540  000E86  0E01               	movlw	1
  3541  000E88  6E04               	movwf	(??_digitalRead+1)^0,c
  3542  000E8A  2A03               	incf	??_digitalRead^0,f,c
  3543  000E8C  EF4A  F007         	goto	u1754
  3544  000E90                     u1755:
  3545  000E90  90D8               	bcf	status,0,c
  3546  000E92  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3547  000E94                     u1754:
  3548  000E94  2E03               	decfsz	??_digitalRead^0,f,c
  3549  000E96  EF48  F007         	goto	u1755
  3550  000E9A  5004               	movf	(??_digitalRead+1)^0,w,c
  3551  000E9C  1481               	andwf	129,w,c	;volatile
  3552  000E9E  6E05               	movwf	(??_digitalRead+2)^0,c
  3553  000EA0  5005               	movf	(??_digitalRead+2)^0,w,c
  3554  000EA2  6E01               	movwf	?_digitalRead^0,c
  3555  000EA4  6A02               	clrf	(?_digitalRead+1)^0,c
  3556  000EA6  EFC3  F007         	goto	l143
  3557  000EAA                     l2188:
  3558  000EAA  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3559  000EAC  EF63  F007         	goto	u1760
  3560  000EB0  5002               	movf	(digitalRead@pin+1)^0,w,c
  3561  000EB2  E107               	bnz	u1761
  3562  000EB4  0E18               	movlw	24
  3563  000EB6  5C01               	subwf	digitalRead@pin^0,w,c
  3564  000EB8  B0D8               	btfsc	status,0,c
  3565  000EBA  EF61  F007         	goto	u1761
  3566  000EBE  EF63  F007         	goto	u1760
  3567  000EC2                     u1761:
  3568  000EC2  EF79  F007         	goto	l2196
  3569  000EC6                     u1760:
  3570  000EC6                     
  3571                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  3572  000EC6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3573  000ECA  0EF0               	movlw	-16
  3574  000ECC  2603               	addwf	??_digitalRead^0,f,c
  3575  000ECE  0E01               	movlw	1
  3576  000ED0  6E04               	movwf	(??_digitalRead+1)^0,c
  3577  000ED2  2A03               	incf	??_digitalRead^0,f,c
  3578  000ED4  EF6E  F007         	goto	u1774
  3579  000ED8                     u1775:
  3580  000ED8  90D8               	bcf	status,0,c
  3581  000EDA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3582  000EDC                     u1774:
  3583  000EDC  2E03               	decfsz	??_digitalRead^0,f,c
  3584  000EDE  EF6C  F007         	goto	u1775
  3585  000EE2  5004               	movf	(??_digitalRead+1)^0,w,c
  3586  000EE4  1482               	andwf	130,w,c	;volatile
  3587  000EE6  6E05               	movwf	(??_digitalRead+2)^0,c
  3588  000EE8  5005               	movf	(??_digitalRead+2)^0,w,c
  3589  000EEA  6E01               	movwf	?_digitalRead^0,c
  3590  000EEC  6A02               	clrf	(?_digitalRead+1)^0,c
  3591  000EEE  EFC3  F007         	goto	l143
  3592  000EF2                     l2196:
  3593  000EF2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3594  000EF4  EF87  F007         	goto	u1780
  3595  000EF8  5002               	movf	(digitalRead@pin+1)^0,w,c
  3596  000EFA  E107               	bnz	u1781
  3597  000EFC  0E20               	movlw	32
  3598  000EFE  5C01               	subwf	digitalRead@pin^0,w,c
  3599  000F00  B0D8               	btfsc	status,0,c
  3600  000F02  EF85  F007         	goto	u1781
  3601  000F06  EF87  F007         	goto	u1780
  3602  000F0A                     u1781:
  3603  000F0A  EF9D  F007         	goto	l2204
  3604  000F0E                     u1780:
  3605  000F0E                     
  3606                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  3607  000F0E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3608  000F12  0EE8               	movlw	-24
  3609  000F14  2603               	addwf	??_digitalRead^0,f,c
  3610  000F16  0E01               	movlw	1
  3611  000F18  6E04               	movwf	(??_digitalRead+1)^0,c
  3612  000F1A  2A03               	incf	??_digitalRead^0,f,c
  3613  000F1C  EF92  F007         	goto	u1794
  3614  000F20                     u1795:
  3615  000F20  90D8               	bcf	status,0,c
  3616  000F22  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3617  000F24                     u1794:
  3618  000F24  2E03               	decfsz	??_digitalRead^0,f,c
  3619  000F26  EF90  F007         	goto	u1795
  3620  000F2A  5004               	movf	(??_digitalRead+1)^0,w,c
  3621  000F2C  1483               	andwf	131,w,c	;volatile
  3622  000F2E  6E05               	movwf	(??_digitalRead+2)^0,c
  3623  000F30  5005               	movf	(??_digitalRead+2)^0,w,c
  3624  000F32  6E01               	movwf	?_digitalRead^0,c
  3625  000F34  6A02               	clrf	(?_digitalRead+1)^0,c
  3626  000F36  EFC3  F007         	goto	l143
  3627  000F3A                     l2204:
  3628  000F3A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3629  000F3C  EFAB  F007         	goto	u1800
  3630  000F40  5002               	movf	(digitalRead@pin+1)^0,w,c
  3631  000F42  E107               	bnz	u1801
  3632  000F44  0E28               	movlw	40
  3633  000F46  5C01               	subwf	digitalRead@pin^0,w,c
  3634  000F48  B0D8               	btfsc	status,0,c
  3635  000F4A  EFA9  F007         	goto	u1801
  3636  000F4E  EFAB  F007         	goto	u1800
  3637  000F52                     u1801:
  3638  000F52  EFC1  F007         	goto	l148
  3639  000F56                     u1800:
  3640  000F56                     
  3641                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  3642  000F56  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3643  000F5A  0EE0               	movlw	-32
  3644  000F5C  2603               	addwf	??_digitalRead^0,f,c
  3645  000F5E  0E01               	movlw	1
  3646  000F60  6E04               	movwf	(??_digitalRead+1)^0,c
  3647  000F62  2A03               	incf	??_digitalRead^0,f,c
  3648  000F64  EFB6  F007         	goto	u1814
  3649  000F68                     u1815:
  3650  000F68  90D8               	bcf	status,0,c
  3651  000F6A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3652  000F6C                     u1814:
  3653  000F6C  2E03               	decfsz	??_digitalRead^0,f,c
  3654  000F6E  EFB4  F007         	goto	u1815
  3655  000F72  5004               	movf	(??_digitalRead+1)^0,w,c
  3656  000F74  1484               	andwf	132,w,c	;volatile
  3657  000F76  6E05               	movwf	(??_digitalRead+2)^0,c
  3658  000F78  5005               	movf	(??_digitalRead+2)^0,w,c
  3659  000F7A  6E01               	movwf	?_digitalRead^0,c
  3660  000F7C  6A02               	clrf	(?_digitalRead+1)^0,c
  3661  000F7E  EFC3  F007         	goto	l143
  3662  000F82                     l148:
  3663  000F82                     
  3664                           ;io.c: 51:     return -1;
  3665  000F82  6801               	setf	?_digitalRead^0,c
  3666  000F84  6802               	setf	(?_digitalRead+1)^0,c
  3667  000F86                     l143:
  3668  000F86  0012               	return		;funcret
  3669  000F88                     __end_of_digitalRead:
  3670                           	opt callstack 0
  3671                           
  3672 ;; *************** function _cronometro *****************
  3673 ;; Defined at:
  3674 ;;		line 129 in file "main.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  v3              2   18[COMRAM] int 
  3679 ;;  v2              2   16[COMRAM] int 
  3680 ;;  v1              2   14[COMRAM] int 
  3681 ;;  v0              2   12[COMRAM] int 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3691 ;;      Params:         0       0       0       0       0       0       0
  3692 ;;      Locals:         8       0       0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0
  3694 ;;      Totals:         8       0       0       0       0       0       0
  3695 ;;Total ram usage:        8 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    4
  3698 ;; This function calls:
  3699 ;;		___lwdiv
  3700 ;;		___lwmod
  3701 ;;		_ssdDigit
  3702 ;;		_ssdUpdate
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text26
  3709  0011C2                     __ptext26:
  3710                           	opt callstack 0
  3711  0011C2                     _cronometro:
  3712                           	opt callstack 26
  3713  0011C2                     
  3714                           ;main.c: 130:     ssdUpdate();
  3715  0011C2  EC59  F006         	call	_ssdUpdate	;wreg free
  3716  0011C6                     
  3717                           ;main.c: 131:     int v0, v1, v2, v3;;main.c: 132:     v0 = ((tempo / 10000) % 10);
  3718  0011C6  0E27               	movlw	39
  3719  0011C8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3720  0011CA  0E10               	movlw	16
  3721  0011CC  6E03               	movwf	___lwdiv@divisor^0,c
  3722  0011CE  C034  F001         	movff	_tempo,___lwdiv@dividend
  3723  0011D2  C035  F002         	movff	_tempo+1,___lwdiv@dividend+1
  3724  0011D6  ECE4  F00A         	call	___lwdiv	;wreg free
  3725  0011DA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3726  0011DE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3727  0011E2  0E00               	movlw	0
  3728  0011E4  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3729  0011E6  0E0A               	movlw	10
  3730  0011E8  6E0A               	movwf	___lwmod@divisor^0,c
  3731  0011EA  ECB8  F00B         	call	___lwmod	;wreg free
  3732  0011EE  C008  F00D         	movff	?___lwmod,cronometro@v0
  3733  0011F2  C009  F00E         	movff	?___lwmod+1,cronometro@v0+1
  3734  0011F6                     
  3735                           ;main.c: 133:     v1 = ((tempo / 1000) % 10);
  3736  0011F6  0E03               	movlw	3
  3737  0011F8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3738  0011FA  0EE8               	movlw	232
  3739  0011FC  6E03               	movwf	___lwdiv@divisor^0,c
  3740  0011FE  C034  F001         	movff	_tempo,___lwdiv@dividend
  3741  001202  C035  F002         	movff	_tempo+1,___lwdiv@dividend+1
  3742  001206  ECE4  F00A         	call	___lwdiv	;wreg free
  3743  00120A  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3744  00120E  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3745  001212  0E00               	movlw	0
  3746  001214  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3747  001216  0E0A               	movlw	10
  3748  001218  6E0A               	movwf	___lwmod@divisor^0,c
  3749  00121A  ECB8  F00B         	call	___lwmod	;wreg free
  3750  00121E  C008  F00F         	movff	?___lwmod,cronometro@v1
  3751  001222  C009  F010         	movff	?___lwmod+1,cronometro@v1+1
  3752  001226                     
  3753                           ;main.c: 134:     v2 = ((tempo / 100) % 10);
  3754  001226  0E00               	movlw	0
  3755  001228  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3756  00122A  0E64               	movlw	100
  3757  00122C  6E03               	movwf	___lwdiv@divisor^0,c
  3758  00122E  C034  F001         	movff	_tempo,___lwdiv@dividend
  3759  001232  C035  F002         	movff	_tempo+1,___lwdiv@dividend+1
  3760  001236  ECE4  F00A         	call	___lwdiv	;wreg free
  3761  00123A  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3762  00123E  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3763  001242  0E00               	movlw	0
  3764  001244  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3765  001246  0E0A               	movlw	10
  3766  001248  6E0A               	movwf	___lwmod@divisor^0,c
  3767  00124A  ECB8  F00B         	call	___lwmod	;wreg free
  3768  00124E  C008  F011         	movff	?___lwmod,cronometro@v2
  3769  001252  C009  F012         	movff	?___lwmod+1,cronometro@v2+1
  3770  001256                     
  3771                           ;main.c: 135:     v3 = ((tempo / 10)%10);
  3772  001256  0E00               	movlw	0
  3773  001258  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3774  00125A  0E0A               	movlw	10
  3775  00125C  6E03               	movwf	___lwdiv@divisor^0,c
  3776  00125E  C034  F001         	movff	_tempo,___lwdiv@dividend
  3777  001262  C035  F002         	movff	_tempo+1,___lwdiv@dividend+1
  3778  001266  ECE4  F00A         	call	___lwdiv	;wreg free
  3779  00126A  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3780  00126E  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3781  001272  0E00               	movlw	0
  3782  001274  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3783  001276  0E0A               	movlw	10
  3784  001278  6E0A               	movwf	___lwmod@divisor^0,c
  3785  00127A  ECB8  F00B         	call	___lwmod	;wreg free
  3786  00127E  C008  F013         	movff	?___lwmod,cronometro@v3
  3787  001282  C009  F014         	movff	?___lwmod+1,cronometro@v3+1
  3788  001286                     
  3789                           ;main.c: 136:     ssdDigit(v0, 0);
  3790  001286  0E00               	movlw	0
  3791  001288  6E01               	movwf	ssdDigit@pos^0,c
  3792  00128A  500D               	movf	cronometro@v0^0,w,c
  3793  00128C  EC17  F00C         	call	_ssdDigit
  3794  001290                     
  3795                           ;main.c: 137:     ssdDigit(v1, 1);
  3796  001290  0E01               	movlw	1
  3797  001292  6E01               	movwf	ssdDigit@pos^0,c
  3798  001294  500F               	movf	cronometro@v1^0,w,c
  3799  001296  EC17  F00C         	call	_ssdDigit
  3800  00129A                     
  3801                           ;main.c: 138:     ssdDigit(v2, 2);
  3802  00129A  0E02               	movlw	2
  3803  00129C  6E01               	movwf	ssdDigit@pos^0,c
  3804  00129E  5011               	movf	cronometro@v2^0,w,c
  3805  0012A0  EC17  F00C         	call	_ssdDigit
  3806  0012A4                     
  3807                           ;main.c: 139:     ssdDigit(v3, 3);
  3808  0012A4  0E03               	movlw	3
  3809  0012A6  6E01               	movwf	ssdDigit@pos^0,c
  3810  0012A8  5013               	movf	cronometro@v3^0,w,c
  3811  0012AA  EC17  F00C         	call	_ssdDigit
  3812  0012AE  0012               	return		;funcret
  3813  0012B0                     __end_of_cronometro:
  3814                           	opt callstack 0
  3815                           
  3816 ;; *************** function _ssdUpdate *****************
  3817 ;; Defined at:
  3818 ;;		line 50 in file "ssd.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3832 ;;      Params:         0       0       0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0
  3834 ;;      Temps:          2       0       0       0       0       0       0
  3835 ;;      Totals:         2       0       0       0       0       0       0
  3836 ;;Total ram usage:        2 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    3
  3839 ;; This function calls:
  3840 ;;		_digitalWrite
  3841 ;;		_soWrite
  3842 ;; This function is called by:
  3843 ;;		_leTeclado
  3844 ;;		_cronometro
  3845 ;;		_main
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text27
  3850  000CB2                     __ptext27:
  3851                           	opt callstack 0
  3852  000CB2                     _ssdUpdate:
  3853                           	opt callstack 27
  3854  000CB2                     
  3855                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  3856  000CB2  0E00               	movlw	0
  3857  000CB4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3858  000CB6  0E18               	movlw	24
  3859  000CB8  6E01               	movwf	digitalWrite@pin^0,c
  3860  000CBA  0E00               	movlw	0
  3861  000CBC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3862  000CBE  0E00               	movlw	0
  3863  000CC0  6E03               	movwf	digitalWrite@value^0,c
  3864  000CC2  EC5C  F004         	call	_digitalWrite	;wreg free
  3865                           
  3866                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  3867  000CC6  0E00               	movlw	0
  3868  000CC8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3869  000CCA  0E19               	movlw	25
  3870  000CCC  6E01               	movwf	digitalWrite@pin^0,c
  3871  000CCE  0E00               	movlw	0
  3872  000CD0  6E04               	movwf	(digitalWrite@value+1)^0,c
  3873  000CD2  0E00               	movlw	0
  3874  000CD4  6E03               	movwf	digitalWrite@value^0,c
  3875  000CD6  EC5C  F004         	call	_digitalWrite	;wreg free
  3876                           
  3877                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  3878  000CDA  0E00               	movlw	0
  3879  000CDC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3880  000CDE  0E1A               	movlw	26
  3881  000CE0  6E01               	movwf	digitalWrite@pin^0,c
  3882  000CE2  0E00               	movlw	0
  3883  000CE4  6E04               	movwf	(digitalWrite@value+1)^0,c
  3884  000CE6  0E00               	movlw	0
  3885  000CE8  6E03               	movwf	digitalWrite@value^0,c
  3886  000CEA  EC5C  F004         	call	_digitalWrite	;wreg free
  3887                           
  3888                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  3889  000CEE  0E00               	movlw	0
  3890  000CF0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3891  000CF2  0E1B               	movlw	27
  3892  000CF4  6E01               	movwf	digitalWrite@pin^0,c
  3893  000CF6  0E00               	movlw	0
  3894  000CF8  6E04               	movwf	(digitalWrite@value+1)^0,c
  3895  000CFA  0E00               	movlw	0
  3896  000CFC  6E03               	movwf	digitalWrite@value^0,c
  3897  000CFE  EC5C  F004         	call	_digitalWrite	;wreg free
  3898                           
  3899                           ;ssd.c: 60:     soWrite(0x00);
  3900  000D02  0E00               	movlw	0
  3901  000D04  6E08               	movwf	(soWrite@value+1)^0,c
  3902  000D06  0E00               	movlw	0
  3903  000D08  6E07               	movwf	soWrite@value^0,c
  3904  000D0A  EC99  F00C         	call	_soWrite	;wreg free
  3905                           
  3906                           ;ssd.c: 62:     switch (display)
  3907  000D0E  EFF1  F006         	goto	l2270
  3908  000D12                     l2242:
  3909                           
  3910                           ;ssd.c: 65:             soWrite(valor[v0]);
  3911  000D12  0E01               	movlw	low _valor
  3912  000D14  2446               	addwf	_v0^0,w,c
  3913  000D16  6EF6               	movwf	tblptrl,c
  3914  000D18  6AF7               	clrf	tblptrh,c
  3915  000D1A  0E06               	movlw	high _valor
  3916  000D1C  22F7               	addwfc	tblptrh,f,c
  3917  000D1E                     	if	0	;There are less than 3 active tblptr bytes
  3918  000D1E                     	endif
  3919  000D1E  0008               	tblrd		*
  3920  000D20  50F5               	movf	tablat,w,c
  3921  000D22  6E07               	movwf	soWrite@value^0,c
  3922  000D24  6A08               	clrf	(soWrite@value+1)^0,c
  3923  000D26  EC99  F00C         	call	_soWrite	;wreg free
  3924  000D2A                     
  3925                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  3926  000D2A  0E00               	movlw	0
  3927  000D2C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3928  000D2E  0E18               	movlw	24
  3929  000D30  6E01               	movwf	digitalWrite@pin^0,c
  3930  000D32  0E00               	movlw	0
  3931  000D34  6E04               	movwf	(digitalWrite@value+1)^0,c
  3932  000D36  0E01               	movlw	1
  3933  000D38  6E03               	movwf	digitalWrite@value^0,c
  3934  000D3A  EC5C  F004         	call	_digitalWrite	;wreg free
  3935  000D3E                     
  3936                           ;ssd.c: 67:             display = 1;
  3937  000D3E  0E01               	movlw	1
  3938  000D40  6E47               	movwf	_display^0,c
  3939                           
  3940                           ;ssd.c: 68:             break;
  3941  000D42  EF0E  F007         	goto	l350
  3942  000D46                     l2248:
  3943                           
  3944                           ;ssd.c: 71:             soWrite(valor[v1]);
  3945  000D46  0E01               	movlw	low _valor
  3946  000D48  2445               	addwf	_v1^0,w,c
  3947  000D4A  6EF6               	movwf	tblptrl,c
  3948  000D4C  6AF7               	clrf	tblptrh,c
  3949  000D4E  0E06               	movlw	high _valor
  3950  000D50  22F7               	addwfc	tblptrh,f,c
  3951  000D52                     	if	0	;There are less than 3 active tblptr bytes
  3952  000D52                     	endif
  3953  000D52  0008               	tblrd		*
  3954  000D54  50F5               	movf	tablat,w,c
  3955  000D56  6E07               	movwf	soWrite@value^0,c
  3956  000D58  6A08               	clrf	(soWrite@value+1)^0,c
  3957  000D5A  EC99  F00C         	call	_soWrite	;wreg free
  3958  000D5E                     
  3959                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  3960  000D5E  0E00               	movlw	0
  3961  000D60  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3962  000D62  0E19               	movlw	25
  3963  000D64  6E01               	movwf	digitalWrite@pin^0,c
  3964  000D66  0E00               	movlw	0
  3965  000D68  6E04               	movwf	(digitalWrite@value+1)^0,c
  3966  000D6A  0E01               	movlw	1
  3967  000D6C  6E03               	movwf	digitalWrite@value^0,c
  3968  000D6E  EC5C  F004         	call	_digitalWrite	;wreg free
  3969  000D72                     
  3970                           ;ssd.c: 73:             display = 2;
  3971  000D72  0E02               	movlw	2
  3972  000D74  6E47               	movwf	_display^0,c
  3973                           
  3974                           ;ssd.c: 74:             break;
  3975  000D76  EF0E  F007         	goto	l350
  3976  000D7A                     l2254:
  3977                           
  3978                           ;ssd.c: 77:             soWrite(valor[v2]);
  3979  000D7A  0E01               	movlw	low _valor
  3980  000D7C  2444               	addwf	_v2^0,w,c
  3981  000D7E  6EF6               	movwf	tblptrl,c
  3982  000D80  6AF7               	clrf	tblptrh,c
  3983  000D82  0E06               	movlw	high _valor
  3984  000D84  22F7               	addwfc	tblptrh,f,c
  3985  000D86                     	if	0	;There are less than 3 active tblptr bytes
  3986  000D86                     	endif
  3987  000D86  0008               	tblrd		*
  3988  000D88  50F5               	movf	tablat,w,c
  3989  000D8A  6E07               	movwf	soWrite@value^0,c
  3990  000D8C  6A08               	clrf	(soWrite@value+1)^0,c
  3991  000D8E  EC99  F00C         	call	_soWrite	;wreg free
  3992  000D92                     
  3993                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  3994  000D92  0E00               	movlw	0
  3995  000D94  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3996  000D96  0E1A               	movlw	26
  3997  000D98  6E01               	movwf	digitalWrite@pin^0,c
  3998  000D9A  0E00               	movlw	0
  3999  000D9C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4000  000D9E  0E01               	movlw	1
  4001  000DA0  6E03               	movwf	digitalWrite@value^0,c
  4002  000DA2  EC5C  F004         	call	_digitalWrite	;wreg free
  4003  000DA6                     
  4004                           ;ssd.c: 79:             display = 3;
  4005  000DA6  0E03               	movlw	3
  4006  000DA8  6E47               	movwf	_display^0,c
  4007                           
  4008                           ;ssd.c: 80:             break;
  4009  000DAA  EF0E  F007         	goto	l350
  4010  000DAE                     l2260:
  4011                           
  4012                           ;ssd.c: 83:             soWrite(valor[v3]);
  4013  000DAE  0E01               	movlw	low _valor
  4014  000DB0  2443               	addwf	_v3^0,w,c
  4015  000DB2  6EF6               	movwf	tblptrl,c
  4016  000DB4  6AF7               	clrf	tblptrh,c
  4017  000DB6  0E06               	movlw	high _valor
  4018  000DB8  22F7               	addwfc	tblptrh,f,c
  4019  000DBA                     	if	0	;There are less than 3 active tblptr bytes
  4020  000DBA                     	endif
  4021  000DBA  0008               	tblrd		*
  4022  000DBC  50F5               	movf	tablat,w,c
  4023  000DBE  6E07               	movwf	soWrite@value^0,c
  4024  000DC0  6A08               	clrf	(soWrite@value+1)^0,c
  4025  000DC2  EC99  F00C         	call	_soWrite	;wreg free
  4026  000DC6                     
  4027                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  4028  000DC6  0E00               	movlw	0
  4029  000DC8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4030  000DCA  0E1B               	movlw	27
  4031  000DCC  6E01               	movwf	digitalWrite@pin^0,c
  4032  000DCE  0E00               	movlw	0
  4033  000DD0  6E04               	movwf	(digitalWrite@value+1)^0,c
  4034  000DD2  0E01               	movlw	1
  4035  000DD4  6E03               	movwf	digitalWrite@value^0,c
  4036  000DD6  EC5C  F004         	call	_digitalWrite	;wreg free
  4037  000DDA                     l2264:
  4038                           
  4039                           ;ssd.c: 85:             display = 0;
  4040  000DDA  0E00               	movlw	0
  4041  000DDC  6E47               	movwf	_display^0,c
  4042                           
  4043                           ;ssd.c: 86:             break;
  4044  000DDE  EF0E  F007         	goto	l350
  4045  000DE2                     l2270:
  4046  000DE2  5047               	movf	_display^0,w,c
  4047  000DE4  6E0A               	movwf	??_ssdUpdate^0,c
  4048  000DE6  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  4049                           
  4050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4051                           ; Switch size 1, requested type "simple"
  4052                           ; Number of cases is 1, Range of values is 0 to 0
  4053                           ; switch strategies available:
  4054                           ; Name         Instructions Cycles
  4055                           ; simple_byte            4     3 (average)
  4056                           ;	Chosen strategy is simple_byte
  4057  000DE8  500B               	movf	(??_ssdUpdate+1)^0,w,c
  4058  000DEA  0A00               	xorlw	0	; case 0
  4059  000DEC  B4D8               	btfsc	status,2,c
  4060  000DEE  EFFB  F006         	goto	l2782
  4061  000DF2  EFED  F006         	goto	l2264
  4062  000DF6                     l2782:
  4063                           
  4064                           ; Switch size 1, requested type "simple"
  4065                           ; Number of cases is 4, Range of values is 0 to 3
  4066                           ; switch strategies available:
  4067                           ; Name         Instructions Cycles
  4068                           ; simple_byte           13     7 (average)
  4069                           ;	Chosen strategy is simple_byte
  4070  000DF6  500A               	movf	??_ssdUpdate^0,w,c
  4071  000DF8  0A00               	xorlw	0	; case 0
  4072  000DFA  B4D8               	btfsc	status,2,c
  4073  000DFC  EF89  F006         	goto	l2242
  4074  000E00  0A01               	xorlw	1	; case 1
  4075  000E02  B4D8               	btfsc	status,2,c
  4076  000E04  EFA3  F006         	goto	l2248
  4077  000E08  0A03               	xorlw	3	; case 2
  4078  000E0A  B4D8               	btfsc	status,2,c
  4079  000E0C  EFBD  F006         	goto	l2254
  4080  000E10  0A01               	xorlw	1	; case 3
  4081  000E12  B4D8               	btfsc	status,2,c
  4082  000E14  EFD7  F006         	goto	l2260
  4083  000E18  EFED  F006         	goto	l2264
  4084  000E1C                     l350:
  4085  000E1C  0012               	return		;funcret
  4086  000E1E                     __end_of_ssdUpdate:
  4087                           	opt callstack 0
  4088                           
  4089 ;; *************** function _soWrite *****************
  4090 ;; Defined at:
  4091 ;;		line 18 in file "so.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  value           2    6[COMRAM] int 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  i               1    8[COMRAM] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4105 ;;      Params:         2       0       0       0       0       0       0
  4106 ;;      Locals:         1       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0
  4108 ;;      Totals:         3       0       0       0       0       0       0
  4109 ;;Total ram usage:        3 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    2
  4112 ;; This function calls:
  4113 ;;		_PulseClockData
  4114 ;;		_PulseEnClock
  4115 ;;		_digitalWrite
  4116 ;; This function is called by:
  4117 ;;		_kpDebounce
  4118 ;;		_pushNibble
  4119 ;;		_pushByte
  4120 ;;		_ssdUpdate
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text28
  4125  001932                     __ptext28:
  4126                           	opt callstack 0
  4127  001932                     _soWrite:
  4128                           	opt callstack 27
  4129  001932                     
  4130                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4131  001932  0E00               	movlw	0
  4132  001934  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4133  001936  0E08               	movlw	8
  4134  001938  6E01               	movwf	digitalWrite@pin^0,c
  4135  00193A  0E00               	movlw	0
  4136  00193C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4137  00193E  0E00               	movlw	0
  4138  001940  6E03               	movwf	digitalWrite@value^0,c
  4139  001942  EC5C  F004         	call	_digitalWrite	;wreg free
  4140  001946                     
  4141                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4142  001946  0E00               	movlw	0
  4143  001948  6E09               	movwf	soWrite@i^0,c
  4144  00194A                     l2040:
  4145                           
  4146                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4147  00194A  0E00               	movlw	0
  4148  00194C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4149  00194E  0E1E               	movlw	30
  4150  001950  6E01               	movwf	digitalWrite@pin^0,c
  4151  001952  0E80               	movlw	128
  4152  001954  1407               	andwf	soWrite@value^0,w,c
  4153  001956  6E03               	movwf	digitalWrite@value^0,c
  4154  001958  6A04               	clrf	(digitalWrite@value+1)^0,c
  4155  00195A  EC5C  F004         	call	_digitalWrite	;wreg free
  4156                           
  4157                           ;so.c: 23:   PulseClockData();
  4158  00195E  EC61  F00D         	call	_PulseClockData	;wreg free
  4159  001962                     
  4160                           ;so.c: 24:   value <<= 1;
  4161  001962  90D8               	bcf	status,0,c
  4162  001964  3607               	rlcf	soWrite@value^0,f,c
  4163  001966  3608               	rlcf	(soWrite@value+1)^0,f,c
  4164  001968                     
  4165                           ;so.c: 25:  }
  4166  001968  2A09               	incf	soWrite@i^0,f,c
  4167  00196A  0E07               	movlw	7
  4168  00196C  6409               	cpfsgt	soWrite@i^0,c
  4169  00196E  EFBB  F00C         	goto	u1381
  4170  001972  EFBD  F00C         	goto	u1380
  4171  001976                     u1381:
  4172  001976  EFA5  F00C         	goto	l2040
  4173  00197A                     u1380:
  4174  00197A                     
  4175                           ;so.c: 26:  PulseEnClock();
  4176  00197A  EC4C  F00D         	call	_PulseEnClock	;wreg free
  4177  00197E  0012               	return		;funcret
  4178  001980                     __end_of_soWrite:
  4179                           	opt callstack 0
  4180                           
  4181 ;; *************** function _PulseEnClock *****************
  4182 ;; Defined at:
  4183 ;;		line 9 in file "so.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4197 ;;      Params:         0       0       0       0       0       0       0
  4198 ;;      Locals:         0       0       0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0
  4200 ;;      Totals:         0       0       0       0       0       0       0
  4201 ;;Total ram usage:        0 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    1
  4204 ;; This function calls:
  4205 ;;		_digitalWrite
  4206 ;; This function is called by:
  4207 ;;		_soWrite
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text29
  4212  001A98                     __ptext29:
  4213                           	opt callstack 0
  4214  001A98                     _PulseEnClock:
  4215                           	opt callstack 27
  4216  001A98                     
  4217                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4218  001A98  0E00               	movlw	0
  4219  001A9A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4220  001A9C  0E1F               	movlw	31
  4221  001A9E  6E01               	movwf	digitalWrite@pin^0,c
  4222  001AA0  0E00               	movlw	0
  4223  001AA2  6E04               	movwf	(digitalWrite@value+1)^0,c
  4224  001AA4  0E01               	movlw	1
  4225  001AA6  6E03               	movwf	digitalWrite@value^0,c
  4226  001AA8  EC5C  F004         	call	_digitalWrite	;wreg free
  4227                           
  4228                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4229  001AAC  0E00               	movlw	0
  4230  001AAE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4231  001AB0  0E1F               	movlw	31
  4232  001AB2  6E01               	movwf	digitalWrite@pin^0,c
  4233  001AB4  0E00               	movlw	0
  4234  001AB6  6E04               	movwf	(digitalWrite@value+1)^0,c
  4235  001AB8  0E00               	movlw	0
  4236  001ABA  6E03               	movwf	digitalWrite@value^0,c
  4237  001ABC  EC5C  F004         	call	_digitalWrite	;wreg free
  4238  001AC0  0012               	return		;funcret
  4239  001AC2                     __end_of_PulseEnClock:
  4240                           	opt callstack 0
  4241                           
  4242 ;; *************** function _PulseClockData *****************
  4243 ;; Defined at:
  4244 ;;		line 14 in file "so.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4258 ;;      Params:         0       0       0       0       0       0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0
  4261 ;;      Totals:         0       0       0       0       0       0       0
  4262 ;;Total ram usage:        0 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    1
  4265 ;; This function calls:
  4266 ;;		_digitalWrite
  4267 ;; This function is called by:
  4268 ;;		_soWrite
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text30
  4273  001AC2                     __ptext30:
  4274                           	opt callstack 0
  4275  001AC2                     _PulseClockData:
  4276                           	opt callstack 27
  4277  001AC2                     
  4278                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4279  001AC2  0E00               	movlw	0
  4280  001AC4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4281  001AC6  0E08               	movlw	8
  4282  001AC8  6E01               	movwf	digitalWrite@pin^0,c
  4283  001ACA  0E00               	movlw	0
  4284  001ACC  6E04               	movwf	(digitalWrite@value+1)^0,c
  4285  001ACE  0E01               	movlw	1
  4286  001AD0  6E03               	movwf	digitalWrite@value^0,c
  4287  001AD2  EC5C  F004         	call	_digitalWrite	;wreg free
  4288                           
  4289                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4290  001AD6  0E00               	movlw	0
  4291  001AD8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4292  001ADA  0E08               	movlw	8
  4293  001ADC  6E01               	movwf	digitalWrite@pin^0,c
  4294  001ADE  0E00               	movlw	0
  4295  001AE0  6E04               	movwf	(digitalWrite@value+1)^0,c
  4296  001AE2  0E00               	movlw	0
  4297  001AE4  6E03               	movwf	digitalWrite@value^0,c
  4298  001AE6  EC5C  F004         	call	_digitalWrite	;wreg free
  4299  001AEA  0012               	return		;funcret
  4300  001AEC                     __end_of_PulseClockData:
  4301                           	opt callstack 0
  4302                           
  4303 ;; *************** function _digitalWrite *****************
  4304 ;; Defined at:
  4305 ;;		line 14 in file "io.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  pin             2    0[COMRAM] int 
  4308 ;;  value           2    2[COMRAM] int 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4320 ;;      Params:         4       0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0
  4322 ;;      Temps:          2       0       0       0       0       0       0
  4323 ;;      Totals:         6       0       0       0       0       0       0
  4324 ;;Total ram usage:        6 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_pulseEnablePin
  4330 ;;		_pushNibble
  4331 ;;		_pushByte
  4332 ;;		_turnOn
  4333 ;;		_turnOff
  4334 ;;		_PulseEnClock
  4335 ;;		_PulseClockData
  4336 ;;		_soWrite
  4337 ;;		_ssdUpdate
  4338 ;;		_clear_SCL
  4339 ;;		_clear_SDA
  4340 ;;		_rgbColor
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text31
  4345  0008B8                     __ptext31:
  4346                           	opt callstack 0
  4347  0008B8                     _digitalWrite:
  4348                           	opt callstack 28
  4349  0008B8                     
  4350                           ;io.c: 16:     if(pin <8){
  4351  0008B8  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4352  0008BA  EF6A  F004         	goto	u1180
  4353  0008BE  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4354  0008C0  E107               	bnz	u1181
  4355  0008C2  0E08               	movlw	8
  4356  0008C4  5C01               	subwf	digitalWrite@pin^0,w,c
  4357  0008C6  B0D8               	btfsc	status,0,c
  4358  0008C8  EF68  F004         	goto	u1181
  4359  0008CC  EF6A  F004         	goto	u1180
  4360  0008D0                     u1181:
  4361  0008D0  EF94  F004         	goto	l1996
  4362  0008D4                     u1180:
  4363  0008D4                     
  4364                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4365  0008D4  5003               	movf	digitalWrite@value^0,w,c
  4366  0008D6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4367  0008D8  B4D8               	btfsc	status,2,c
  4368  0008DA  EF71  F004         	goto	u1191
  4369  0008DE  EF73  F004         	goto	u1190
  4370  0008E2                     u1191:
  4371  0008E2  EF83  F004         	goto	l1994
  4372  0008E6                     u1190:
  4373  0008E6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4374  0008EA  0E01               	movlw	1
  4375  0008EC  6E06               	movwf	(??_digitalWrite+1)^0,c
  4376  0008EE  2A05               	incf	??_digitalWrite^0,f,c
  4377  0008F0  EF7C  F004         	goto	u1204
  4378  0008F4                     u1205:
  4379  0008F4  90D8               	bcf	status,0,c
  4380  0008F6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4381  0008F8                     u1204:
  4382  0008F8  2E05               	decfsz	??_digitalWrite^0,f,c
  4383  0008FA  EF7A  F004         	goto	u1205
  4384  0008FE  5006               	movf	(??_digitalWrite+1)^0,w,c
  4385  000900  1280               	iorwf	128,f,c	;volatile
  4386  000902  EF82  F005         	goto	l139
  4387  000906                     l1994:
  4388  000906  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4389  00090A  0E01               	movlw	1
  4390  00090C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4391  00090E  2A05               	incf	??_digitalWrite^0,f,c
  4392  000910  EF8C  F004         	goto	u1214
  4393  000914                     u1215:
  4394  000914  90D8               	bcf	status,0,c
  4395  000916  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4396  000918                     u1214:
  4397  000918  2E05               	decfsz	??_digitalWrite^0,f,c
  4398  00091A  EF8A  F004         	goto	u1215
  4399  00091E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4400  000920  0AFF               	xorlw	255
  4401  000922  1680               	andwf	128,f,c	;volatile
  4402  000924  EF82  F005         	goto	l139
  4403  000928                     l1996:
  4404  000928  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4405  00092A  EFA2  F004         	goto	u1220
  4406  00092E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4407  000930  E107               	bnz	u1221
  4408  000932  0E10               	movlw	16
  4409  000934  5C01               	subwf	digitalWrite@pin^0,w,c
  4410  000936  B0D8               	btfsc	status,0,c
  4411  000938  EFA0  F004         	goto	u1221
  4412  00093C  EFA2  F004         	goto	u1220
  4413  000940                     u1221:
  4414  000940  EFD0  F004         	goto	l2004
  4415  000944                     u1220:
  4416  000944                     
  4417                           ;io.c: 20:         pin -=8;
  4418  000944  0EF8               	movlw	248
  4419  000946  2601               	addwf	digitalWrite@pin^0,f,c
  4420  000948  0EFF               	movlw	255
  4421  00094A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4422                           
  4423                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4424  00094C  5003               	movf	digitalWrite@value^0,w,c
  4425  00094E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4426  000950  B4D8               	btfsc	status,2,c
  4427  000952  EFAD  F004         	goto	u1231
  4428  000956  EFAF  F004         	goto	u1230
  4429  00095A                     u1231:
  4430  00095A  EFBF  F004         	goto	l2002
  4431  00095E                     u1230:
  4432  00095E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4433  000962  0E01               	movlw	1
  4434  000964  6E06               	movwf	(??_digitalWrite+1)^0,c
  4435  000966  2A05               	incf	??_digitalWrite^0,f,c
  4436  000968  EFB8  F004         	goto	u1244
  4437  00096C                     u1245:
  4438  00096C  90D8               	bcf	status,0,c
  4439  00096E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4440  000970                     u1244:
  4441  000970  2E05               	decfsz	??_digitalWrite^0,f,c
  4442  000972  EFB6  F004         	goto	u1245
  4443  000976  5006               	movf	(??_digitalWrite+1)^0,w,c
  4444  000978  1281               	iorwf	129,f,c	;volatile
  4445  00097A  EF82  F005         	goto	l139
  4446  00097E                     l2002:
  4447  00097E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4448  000982  0E01               	movlw	1
  4449  000984  6E06               	movwf	(??_digitalWrite+1)^0,c
  4450  000986  2A05               	incf	??_digitalWrite^0,f,c
  4451  000988  EFC8  F004         	goto	u1254
  4452  00098C                     u1255:
  4453  00098C  90D8               	bcf	status,0,c
  4454  00098E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4455  000990                     u1254:
  4456  000990  2E05               	decfsz	??_digitalWrite^0,f,c
  4457  000992  EFC6  F004         	goto	u1255
  4458  000996  5006               	movf	(??_digitalWrite+1)^0,w,c
  4459  000998  0AFF               	xorlw	255
  4460  00099A  1681               	andwf	129,f,c	;volatile
  4461  00099C  EF82  F005         	goto	l139
  4462  0009A0                     l2004:
  4463  0009A0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4464  0009A2  EFDE  F004         	goto	u1260
  4465  0009A6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4466  0009A8  E107               	bnz	u1261
  4467  0009AA  0E18               	movlw	24
  4468  0009AC  5C01               	subwf	digitalWrite@pin^0,w,c
  4469  0009AE  B0D8               	btfsc	status,0,c
  4470  0009B0  EFDC  F004         	goto	u1261
  4471  0009B4  EFDE  F004         	goto	u1260
  4472  0009B8                     u1261:
  4473  0009B8  EF0C  F005         	goto	l2012
  4474  0009BC                     u1260:
  4475  0009BC                     
  4476                           ;io.c: 24:         pin -=16;
  4477  0009BC  0EF0               	movlw	240
  4478  0009BE  2601               	addwf	digitalWrite@pin^0,f,c
  4479  0009C0  0EFF               	movlw	255
  4480  0009C2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4481                           
  4482                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4483  0009C4  5003               	movf	digitalWrite@value^0,w,c
  4484  0009C6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4485  0009C8  B4D8               	btfsc	status,2,c
  4486  0009CA  EFE9  F004         	goto	u1271
  4487  0009CE  EFEB  F004         	goto	u1270
  4488  0009D2                     u1271:
  4489  0009D2  EFFB  F004         	goto	l2010
  4490  0009D6                     u1270:
  4491  0009D6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4492  0009DA  0E01               	movlw	1
  4493  0009DC  6E06               	movwf	(??_digitalWrite+1)^0,c
  4494  0009DE  2A05               	incf	??_digitalWrite^0,f,c
  4495  0009E0  EFF4  F004         	goto	u1284
  4496  0009E4                     u1285:
  4497  0009E4  90D8               	bcf	status,0,c
  4498  0009E6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4499  0009E8                     u1284:
  4500  0009E8  2E05               	decfsz	??_digitalWrite^0,f,c
  4501  0009EA  EFF2  F004         	goto	u1285
  4502  0009EE  5006               	movf	(??_digitalWrite+1)^0,w,c
  4503  0009F0  1282               	iorwf	130,f,c	;volatile
  4504  0009F2  EF82  F005         	goto	l139
  4505  0009F6                     l2010:
  4506  0009F6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4507  0009FA  0E01               	movlw	1
  4508  0009FC  6E06               	movwf	(??_digitalWrite+1)^0,c
  4509  0009FE  2A05               	incf	??_digitalWrite^0,f,c
  4510  000A00  EF04  F005         	goto	u1294
  4511  000A04                     u1295:
  4512  000A04  90D8               	bcf	status,0,c
  4513  000A06  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4514  000A08                     u1294:
  4515  000A08  2E05               	decfsz	??_digitalWrite^0,f,c
  4516  000A0A  EF02  F005         	goto	u1295
  4517  000A0E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4518  000A10  0AFF               	xorlw	255
  4519  000A12  1682               	andwf	130,f,c	;volatile
  4520  000A14  EF82  F005         	goto	l139
  4521  000A18                     l2012:
  4522  000A18  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4523  000A1A  EF1A  F005         	goto	u1300
  4524  000A1E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4525  000A20  E107               	bnz	u1301
  4526  000A22  0E20               	movlw	32
  4527  000A24  5C01               	subwf	digitalWrite@pin^0,w,c
  4528  000A26  B0D8               	btfsc	status,0,c
  4529  000A28  EF18  F005         	goto	u1301
  4530  000A2C  EF1A  F005         	goto	u1300
  4531  000A30                     u1301:
  4532  000A30  EF48  F005         	goto	l2020
  4533  000A34                     u1300:
  4534  000A34                     
  4535                           ;io.c: 28:         pin -=24;
  4536  000A34  0EE8               	movlw	232
  4537  000A36  2601               	addwf	digitalWrite@pin^0,f,c
  4538  000A38  0EFF               	movlw	255
  4539  000A3A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4540                           
  4541                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4542  000A3C  5003               	movf	digitalWrite@value^0,w,c
  4543  000A3E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4544  000A40  B4D8               	btfsc	status,2,c
  4545  000A42  EF25  F005         	goto	u1311
  4546  000A46  EF27  F005         	goto	u1310
  4547  000A4A                     u1311:
  4548  000A4A  EF37  F005         	goto	l2018
  4549  000A4E                     u1310:
  4550  000A4E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4551  000A52  0E01               	movlw	1
  4552  000A54  6E06               	movwf	(??_digitalWrite+1)^0,c
  4553  000A56  2A05               	incf	??_digitalWrite^0,f,c
  4554  000A58  EF30  F005         	goto	u1324
  4555  000A5C                     u1325:
  4556  000A5C  90D8               	bcf	status,0,c
  4557  000A5E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4558  000A60                     u1324:
  4559  000A60  2E05               	decfsz	??_digitalWrite^0,f,c
  4560  000A62  EF2E  F005         	goto	u1325
  4561  000A66  5006               	movf	(??_digitalWrite+1)^0,w,c
  4562  000A68  1283               	iorwf	131,f,c	;volatile
  4563  000A6A  EF82  F005         	goto	l139
  4564  000A6E                     l2018:
  4565  000A6E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4566  000A72  0E01               	movlw	1
  4567  000A74  6E06               	movwf	(??_digitalWrite+1)^0,c
  4568  000A76  2A05               	incf	??_digitalWrite^0,f,c
  4569  000A78  EF40  F005         	goto	u1334
  4570  000A7C                     u1335:
  4571  000A7C  90D8               	bcf	status,0,c
  4572  000A7E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4573  000A80                     u1334:
  4574  000A80  2E05               	decfsz	??_digitalWrite^0,f,c
  4575  000A82  EF3E  F005         	goto	u1335
  4576  000A86  5006               	movf	(??_digitalWrite+1)^0,w,c
  4577  000A88  0AFF               	xorlw	255
  4578  000A8A  1683               	andwf	131,f,c	;volatile
  4579  000A8C  EF82  F005         	goto	l139
  4580  000A90                     l2020:
  4581  000A90  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4582  000A92  EF56  F005         	goto	u1340
  4583  000A96  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4584  000A98  E107               	bnz	u1341
  4585  000A9A  0E28               	movlw	40
  4586  000A9C  5C01               	subwf	digitalWrite@pin^0,w,c
  4587  000A9E  B0D8               	btfsc	status,0,c
  4588  000AA0  EF54  F005         	goto	u1341
  4589  000AA4  EF56  F005         	goto	u1340
  4590  000AA8                     u1341:
  4591  000AA8  EF82  F005         	goto	l139
  4592  000AAC                     u1340:
  4593  000AAC                     
  4594                           ;io.c: 32:         pin -=32;
  4595  000AAC  0EE0               	movlw	224
  4596  000AAE  2601               	addwf	digitalWrite@pin^0,f,c
  4597  000AB0  0EFF               	movlw	255
  4598  000AB2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4599                           
  4600                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4601  000AB4  5003               	movf	digitalWrite@value^0,w,c
  4602  000AB6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4603  000AB8  B4D8               	btfsc	status,2,c
  4604  000ABA  EF61  F005         	goto	u1351
  4605  000ABE  EF63  F005         	goto	u1350
  4606  000AC2                     u1351:
  4607  000AC2  EF73  F005         	goto	l2026
  4608  000AC6                     u1350:
  4609  000AC6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4610  000ACA  0E01               	movlw	1
  4611  000ACC  6E06               	movwf	(??_digitalWrite+1)^0,c
  4612  000ACE  2A05               	incf	??_digitalWrite^0,f,c
  4613  000AD0  EF6C  F005         	goto	u1364
  4614  000AD4                     u1365:
  4615  000AD4  90D8               	bcf	status,0,c
  4616  000AD6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4617  000AD8                     u1364:
  4618  000AD8  2E05               	decfsz	??_digitalWrite^0,f,c
  4619  000ADA  EF6A  F005         	goto	u1365
  4620  000ADE  5006               	movf	(??_digitalWrite+1)^0,w,c
  4621  000AE0  1284               	iorwf	132,f,c	;volatile
  4622  000AE2  EF82  F005         	goto	l139
  4623  000AE6                     l2026:
  4624  000AE6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4625  000AEA  0E01               	movlw	1
  4626  000AEC  6E06               	movwf	(??_digitalWrite+1)^0,c
  4627  000AEE  2A05               	incf	??_digitalWrite^0,f,c
  4628  000AF0  EF7C  F005         	goto	u1374
  4629  000AF4                     u1375:
  4630  000AF4  90D8               	bcf	status,0,c
  4631  000AF6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4632  000AF8                     u1374:
  4633  000AF8  2E05               	decfsz	??_digitalWrite^0,f,c
  4634  000AFA  EF7A  F005         	goto	u1375
  4635  000AFE  5006               	movf	(??_digitalWrite+1)^0,w,c
  4636  000B00  0AFF               	xorlw	255
  4637  000B02  1684               	andwf	132,f,c	;volatile
  4638  000B04                     l139:
  4639  000B04  0012               	return		;funcret
  4640  000B06                     __end_of_digitalWrite:
  4641                           	opt callstack 0
  4642                           
  4643 ;; *************** function _ssdDigit *****************
  4644 ;; Defined at:
  4645 ;;		line 34 in file "ssd.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  val             1    wreg     unsigned char 
  4648 ;;  pos             1    0[COMRAM] unsigned char 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  val             1    1[COMRAM] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4660 ;;      Params:         1       0       0       0       0       0       0
  4661 ;;      Locals:         1       0       0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0
  4663 ;;      Totals:         2       0       0       0       0       0       0
  4664 ;;Total ram usage:        2 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_cronometro
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text32
  4674  00182E                     __ptext32:
  4675                           	opt callstack 0
  4676  00182E                     _ssdDigit:
  4677                           	opt callstack 29
  4678                           
  4679                           ;incstack = 0
  4680                           ;ssdDigit@val stored from wreg
  4681  00182E  6E02               	movwf	ssdDigit@val^0,c
  4682  001830                     
  4683                           ;ssd.c: 35:     if (pos == 0) {
  4684  001830  5001               	movf	ssdDigit@pos^0,w,c
  4685  001832  A4D8               	btfss	status,2,c
  4686  001834  EF1E  F00C         	goto	u1841
  4687  001838  EF20  F00C         	goto	u1840
  4688  00183C                     u1841:
  4689  00183C  EF22  F00C         	goto	l2228
  4690  001840                     u1840:
  4691  001840                     
  4692                           ;ssd.c: 36:         v0 = val;
  4693  001840  C002  F046         	movff	ssdDigit@val,_v0
  4694  001844                     l2228:
  4695                           
  4696                           ;ssd.c: 38:     if (pos == 1) {
  4697  001844  0401               	decf	ssdDigit@pos^0,w,c
  4698  001846  A4D8               	btfss	status,2,c
  4699  001848  EF28  F00C         	goto	u1851
  4700  00184C  EF2A  F00C         	goto	u1850
  4701  001850                     u1851:
  4702  001850  EF2C  F00C         	goto	l2232
  4703  001854                     u1850:
  4704  001854                     
  4705                           ;ssd.c: 39:         v1 = val;
  4706  001854  C002  F045         	movff	ssdDigit@val,_v1
  4707  001858                     l2232:
  4708                           
  4709                           ;ssd.c: 41:     if (pos == 2) {
  4710  001858  0E02               	movlw	2
  4711  00185A  1801               	xorwf	ssdDigit@pos^0,w,c
  4712  00185C  A4D8               	btfss	status,2,c
  4713  00185E  EF33  F00C         	goto	u1861
  4714  001862  EF35  F00C         	goto	u1860
  4715  001866                     u1861:
  4716  001866  EF37  F00C         	goto	l2236
  4717  00186A                     u1860:
  4718  00186A                     
  4719                           ;ssd.c: 42:         v2 = val;
  4720  00186A  C002  F044         	movff	ssdDigit@val,_v2
  4721  00186E                     l2236:
  4722                           
  4723                           ;ssd.c: 44:     if (pos == 3) {
  4724  00186E  0E03               	movlw	3
  4725  001870  1801               	xorwf	ssdDigit@pos^0,w,c
  4726  001872  A4D8               	btfss	status,2,c
  4727  001874  EF3E  F00C         	goto	u1871
  4728  001878  EF40  F00C         	goto	u1870
  4729  00187C                     u1871:
  4730  00187C  EF42  F00C         	goto	l340
  4731  001880                     u1870:
  4732  001880                     
  4733                           ;ssd.c: 45:         v3 = val;
  4734  001880  C002  F043         	movff	ssdDigit@val,_v3
  4735  001884                     l340:
  4736  001884  0012               	return		;funcret
  4737  001886                     __end_of_ssdDigit:
  4738                           	opt callstack 0
  4739                           
  4740 ;; *************** function ___lwmod *****************
  4741 ;; Defined at:
  4742 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwmod.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  dividend        2    7[COMRAM] unsigned int 
  4745 ;;  divisor         2    9[COMRAM] unsigned int 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  counter         1   11[COMRAM] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2    7[COMRAM] unsigned int 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4757 ;;      Params:         4       0       0       0       0       0       0
  4758 ;;      Locals:         1       0       0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0
  4760 ;;      Totals:         5       0       0       0       0       0       0
  4761 ;;Total ram usage:        5 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_cronometro
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text33
  4771  001770                     __ptext33:
  4772                           	opt callstack 0
  4773  001770                     ___lwmod:
  4774                           	opt callstack 29
  4775  001770  500A               	movf	___lwmod@divisor^0,w,c
  4776  001772  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  4777  001774  B4D8               	btfsc	status,2,c
  4778  001776  EFBF  F00B         	goto	u1991
  4779  00177A  EFC1  F00B         	goto	u1990
  4780  00177E                     u1991:
  4781  00177E  EFE5  F00B         	goto	l984
  4782  001782                     u1990:
  4783  001782  0E01               	movlw	1
  4784  001784  6E0C               	movwf	___lwmod@counter^0,c
  4785  001786  EFC9  F00B         	goto	l2414
  4786  00178A                     l2412:
  4787  00178A  90D8               	bcf	status,0,c
  4788  00178C  360A               	rlcf	___lwmod@divisor^0,f,c
  4789  00178E  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  4790  001790  2A0C               	incf	___lwmod@counter^0,f,c
  4791  001792                     l2414:
  4792  001792  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  4793  001794  EFCE  F00B         	goto	u2001
  4794  001798  EFD0  F00B         	goto	u2000
  4795  00179C                     u2001:
  4796  00179C  EFC5  F00B         	goto	l2412
  4797  0017A0                     u2000:
  4798  0017A0                     l2416:
  4799  0017A0  500A               	movf	___lwmod@divisor^0,w,c
  4800  0017A2  5C08               	subwf	___lwmod@dividend^0,w,c
  4801  0017A4  500B               	movf	(___lwmod@divisor+1)^0,w,c
  4802  0017A6  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  4803  0017A8  A0D8               	btfss	status,0,c
  4804  0017AA  EFD9  F00B         	goto	u2011
  4805  0017AE  EFDB  F00B         	goto	u2010
  4806  0017B2                     u2011:
  4807  0017B2  EFDF  F00B         	goto	l2420
  4808  0017B6                     u2010:
  4809  0017B6  500A               	movf	___lwmod@divisor^0,w,c
  4810  0017B8  5E08               	subwf	___lwmod@dividend^0,f,c
  4811  0017BA  500B               	movf	(___lwmod@divisor+1)^0,w,c
  4812  0017BC  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  4813  0017BE                     l2420:
  4814  0017BE  90D8               	bcf	status,0,c
  4815  0017C0  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  4816  0017C2  320A               	rrcf	___lwmod@divisor^0,f,c
  4817  0017C4  2E0C               	decfsz	___lwmod@counter^0,f,c
  4818  0017C6  EFD0  F00B         	goto	l2416
  4819  0017CA                     l984:
  4820  0017CA  C008  F008         	movff	___lwmod@dividend,?___lwmod
  4821  0017CE  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  4822  0017D2  0012               	return		;funcret
  4823  0017D4                     __end_of___lwmod:
  4824                           	opt callstack 0
  4825                           
  4826 ;; *************** function ___lwdiv *****************
  4827 ;; Defined at:
  4828 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  dividend        2    0[COMRAM] unsigned int 
  4831 ;;  divisor         2    2[COMRAM] unsigned int 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;  quotient        2    4[COMRAM] unsigned int 
  4834 ;;  counter         1    6[COMRAM] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  2    0[COMRAM] unsigned int 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4844 ;;      Params:         4       0       0       0       0       0       0
  4845 ;;      Locals:         3       0       0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0       0       0
  4847 ;;      Totals:         7       0       0       0       0       0       0
  4848 ;;Total ram usage:        7 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_cronometro
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text34
  4858  0015C8                     __ptext34:
  4859                           	opt callstack 0
  4860  0015C8                     ___lwdiv:
  4861                           	opt callstack 29
  4862  0015C8  0E00               	movlw	0
  4863  0015CA  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4864  0015CC  0E00               	movlw	0
  4865  0015CE  6E05               	movwf	___lwdiv@quotient^0,c
  4866  0015D0  5003               	movf	___lwdiv@divisor^0,w,c
  4867  0015D2  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4868  0015D4  B4D8               	btfsc	status,2,c
  4869  0015D6  EFEF  F00A         	goto	u1961
  4870  0015DA  EFF1  F00A         	goto	u1960
  4871  0015DE                     u1961:
  4872  0015DE  EF19  F00B         	goto	l974
  4873  0015E2                     u1960:
  4874  0015E2  0E01               	movlw	1
  4875  0015E4  6E07               	movwf	___lwdiv@counter^0,c
  4876  0015E6  EFF9  F00A         	goto	l2394
  4877  0015EA                     l2392:
  4878  0015EA  90D8               	bcf	status,0,c
  4879  0015EC  3603               	rlcf	___lwdiv@divisor^0,f,c
  4880  0015EE  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4881  0015F0  2A07               	incf	___lwdiv@counter^0,f,c
  4882  0015F2                     l2394:
  4883  0015F2  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4884  0015F4  EFFE  F00A         	goto	u1971
  4885  0015F8  EF00  F00B         	goto	u1970
  4886  0015FC                     u1971:
  4887  0015FC  EFF5  F00A         	goto	l2392
  4888  001600                     u1970:
  4889  001600                     l2396:
  4890  001600  90D8               	bcf	status,0,c
  4891  001602  3605               	rlcf	___lwdiv@quotient^0,f,c
  4892  001604  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4893  001606  5003               	movf	___lwdiv@divisor^0,w,c
  4894  001608  5C01               	subwf	___lwdiv@dividend^0,w,c
  4895  00160A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4896  00160C  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4897  00160E  A0D8               	btfss	status,0,c
  4898  001610  EF0C  F00B         	goto	u1981
  4899  001614  EF0E  F00B         	goto	u1980
  4900  001618                     u1981:
  4901  001618  EF13  F00B         	goto	l2404
  4902  00161C                     u1980:
  4903  00161C  5003               	movf	___lwdiv@divisor^0,w,c
  4904  00161E  5E01               	subwf	___lwdiv@dividend^0,f,c
  4905  001620  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4906  001622  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4907  001624  8005               	bsf	___lwdiv@quotient^0,0,c
  4908  001626                     l2404:
  4909  001626  90D8               	bcf	status,0,c
  4910  001628  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4911  00162A  3203               	rrcf	___lwdiv@divisor^0,f,c
  4912  00162C  2E07               	decfsz	___lwdiv@counter^0,f,c
  4913  00162E  EF00  F00B         	goto	l2396
  4914  001632                     l974:
  4915  001632  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4916  001636  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4917  00163A  0012               	return		;funcret
  4918  00163C                     __end_of___lwdiv:
  4919                           	opt callstack 0
  4920                           
  4921                           	psect	rparam
  4922  0000                     tosu	equ	0xFFF
  4923                           tosh	equ	0xFFE
  4924                           tosl	equ	0xFFD
  4925                           stkptr	equ	0xFFC
  4926                           pclatu	equ	0xFFB
  4927                           pclath	equ	0xFFA
  4928                           pcl	equ	0xFF9
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           prodh	equ	0xFF4
  4934                           prodl	equ	0xFF3
  4935                           indf0	equ	0xFEF
  4936                           postinc0	equ	0xFEE
  4937                           postdec0	equ	0xFED
  4938                           preinc0	equ	0xFEC
  4939                           plusw0	equ	0xFEB
  4940                           fsr0h	equ	0xFEA
  4941                           fsr0l	equ	0xFE9
  4942                           wreg	equ	0xFE8
  4943                           indf1	equ	0xFE7
  4944                           postinc1	equ	0xFE6
  4945                           postdec1	equ	0xFE5
  4946                           preinc1	equ	0xFE4
  4947                           plusw1	equ	0xFE3
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           bsr	equ	0xFE0
  4951                           indf2	equ	0xFDF
  4952                           postinc2	equ	0xFDE
  4953                           postdec2	equ	0xFDD
  4954                           preinc2	equ	0xFDC
  4955                           plusw2	equ	0xFDB
  4956                           fsr2h	equ	0xFDA
  4957                           fsr2l	equ	0xFD9
  4958                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    26
    Data        24
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 11
		 -> STR_10(CODE[11]), STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[10]), 
		 -> STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_leTeclado
    _ssdInit->_pinMode
    _leTeclado->_geraconta
    _luzes->_turnOff
    _luzes->_turnOn
    _turnOn->_digitalWrite
    _turnOff->_digitalWrite
    _geraconta->_lcdString
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _cronometro->___lwmod
    _ssdUpdate->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  357541
                                             24 COMRAM     3     3      0
                          _atraso_ms
                         _cronometro
                          _geraconta
                         _kpDebounce
                             _kpInit
                            _lcdInit
                          _leTeclado
                            _ssdInit
                          _ssdUpdate
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _leTeclado                                            2     2      0  153603
                                             22 COMRAM     2     2      0
                            ___awdiv
                          _geraconta
                             _kpRead
                          _kpReadKey
                         _lcdCommand
                          _lcdString
                              _luzes
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _luzes                                                0     0      0   11950
                          _atraso_ms
                            _turnOff
                             _turnOn
 ---------------------------------------------------------------------------------
 (3) _turnOn                                               2     0      2    5678
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _turnOff                                              2     0      2    5830
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     442
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _geraconta                                            2     2      0   58970
                                             20 COMRAM     2     2      0
                         _lcdCommand
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   29925
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   29075
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   65516
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   28781
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   29045
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   28673
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (5) _pulseEnablePin                                       0     0      0    5840
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (6) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3480
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   17769
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _cronometro                                           8     8      0   24702
                                             12 COMRAM     8     8      0
                            ___lwdiv
                            ___lwmod
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   22593
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   17133
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    5460
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     480
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _cronometro
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _ssdDigit
     _ssdUpdate
       _digitalWrite
       _soWrite
         _PulseClockData
           _digitalWrite
         _PulseEnClock
           _digitalWrite
         _digitalWrite
   _geraconta
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _lcdString
       _lcdChar
         _delayMicro
         _pushByte
           _digitalWrite
           _pulseEnablePin
             _delayMicro
             _digitalWrite
           _soWrite
             _PulseClockData
               _digitalWrite
             _PulseEnClock
               _digitalWrite
             _digitalWrite
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
         _PulseClockData
           _digitalWrite
         _PulseEnClock
           _digitalWrite
         _digitalWrite
     _soInit
       _pinMode
   _leTeclado
     ___awdiv
     _geraconta
       _lcdCommand
         _delayMili
         _pushByte
           _digitalWrite
           _pulseEnablePin
             _delayMicro
             _digitalWrite
           _soWrite
             _PulseClockData
               _digitalWrite
             _PulseEnClock
               _digitalWrite
             _digitalWrite
       _lcdString
         _lcdChar
           _delayMicro
           _pushByte
             _digitalWrite
             _pulseEnablePin
               _delayMicro
               _digitalWrite
             _soWrite
               _PulseClockData
                 _digitalWrite
               _PulseEnClock
                 _digitalWrite
               _digitalWrite
     _kpRead
     _kpReadKey
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _lcdString
       _lcdChar
         _delayMicro
         _pushByte
           _digitalWrite
           _pulseEnablePin
             _delayMicro
             _digitalWrite
           _soWrite
             _PulseClockData
               _digitalWrite
             _PulseEnClock
               _digitalWrite
             _digitalWrite
     _luzes
       _atraso_ms
       _turnOff
         _digitalWrite
       _turnOn
         _digitalWrite
     _ssdUpdate
       _digitalWrite
       _soWrite
         _PulseClockData
           _digitalWrite
         _PulseEnClock
           _digitalWrite
         _digitalWrite
   _ssdInit
     _pinMode
     _soInit
       _pinMode
   _ssdUpdate
     _digitalWrite
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      49       1       57.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      15        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 14 10:46:29 2021

                      _x 0028                        _y 001C               __CFG_BORV$ 00002E  
         _pulseEnablePin 1980             lcdString@msg 000F             ___awdiv@sign 0006  
                     _v0 0046                       _v1 0045                       _v2 0044  
                     _v3 0043                       _op 0041             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l210 10A4                      l212 10BC  
                    l302 19FE                      l143 0F86                      l215 1A66  
                    l144 0F82                      l232 1A96                      l305 1AC0  
                    l313 197E                      l241 182C                      l226 1B78  
                    l139 0B04                      l235 19C0                      l340 1884  
                    l308 1AEA                      l148 0F82                      l244 1B4C  
                    l252 1B2E                      l173 08B6                      l350 0E1C  
                    l238 1B10                      l190 1B6E                      l440 154E  
                    l353 18DA                      l258 1930                      l267 1426  
                    l196 15C6                      l292 170A                      l452 0CB0  
                    l286 16A2                      l464 11C0                      l376 1B76  
                    l714 1372                      l386 176E                      l467 12AE  
                    l981 163A                      l974 1632                      l991 17D2  
                    l984 17CA             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    u680 1590                      u681 158C                      u690 15C4  
                    u674 1570                      u691 15C0                      u675 156A  
                    prod 000FF3                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l2000 095E                     l2010 09F6  
                   l2002 097E                     l2020 0A90                     l2012 0A18  
                   l2004 09A0                     l2100 0842                     l2022 0AAC  
                   l2014 0A34                     l2006 09BC                     l2030 1AC2  
                   l2102 085E                     l2110 18DC                     l2024 0AC6  
                   l2016 0A4E                     l2008 09D6                     l2040 194A  
                   l2032 1932                     l2104 0870                     l2112 18E8  
                   l2120 164A                     l2026 0AE6                     l2018 0A6E  
                   l2042 1962                     l2034 1946                     l2106 0894  
                   l2050 1980                     l2114 1904                     l1402 15A4  
                   l2130 16A4                     l2122 165E                     l2028 1A98  
                   l2044 1968                     l2204 0F3A                     l2220 19C2  
                   l2060 1A74                     l2052 1994                     l2108 1B32  
                   l2116 1908                     l2300 10F6                     l1404 15A8  
                   l2140 16F6                     l2132 16B2                     l2124 166C  
                   l2230 1854                     l2046 196A                     l2206 0F56  
                   l2070 0686                     l2062 1A78                     l2054 19A0  
                   l2222 1AEE                     l2310 111C                     l2302 10FE  
                   l1406 15C4                     l2150 1730                     l2142 170C  
                   l2134 16C6                     l2126 1680                     l2118 163C  
                   l2400 161C                     l2232 1858                     l2224 1830  
                   l2048 197A                     l2240 0CB2                     l2080 0708  
                   l2072 0698                     l2056 17D6                     l2064 1B14  
                   l2320 113E                     l2312 1120                     l2304 1102  
                   l2160 174E                     l2152 1734                     l2144 1718  
                   l2136 16D4                     l2128 168E                     l2402 1624  
                   l2410 1782                     l2234 186A                     l2226 1840  
                   l2250 0D5E                     l2242 0D12                     l2090 07A4  
                   l2082 072C                     l2074 06B8                     l2058 1A68  
                   l2066 1B22                     l2330 1162                     l2322 1144  
                   l2314 1126                     l2306 1108                     l2218 1B66  
                   l2146 171C                     l2138 16E8                     l2404 1626  
                   l2420 17BE                     l2412 178A                     l2236 186E  
                   l2228 1844                     l2260 0DAE                     l2252 0D72  
                   l2244 0D2A                     l2180 0E62                     l2172 0E1E  
                   l2500 0FB8                     l2092 07CA                     l2084 0752  
                   l2076 06DA                     l2068 066A                     l2332 116E  
                   l2324 1150                     l2316 1132                     l2308 1114  
                   l2156 1748                     l2164 1754                     l2406 162C  
                   l2422 17C4                     l2414 1792                     l2238 1880  
                   l2262 0DC6                     l2254 0D7A                     l2246 0D3E  
                   l2270 0DE2                     l2190 0EC6                     l2182 0E7E  
                   l2174 0E3A                     l2502 1004                     l2094 07E6  
                   l2086 076E                     l2078 06F6                     l2350 12CE  
                   l2342 12B0                     l2326 1158                     l2318 113A  
                   l1390 1550                     l2166 1758                     l2416 17A0  
                   l2408 1770                     l2264 0DDA                     l2256 0D92  
                   l2248 0D46                     l2600 11F6                     l2520 10B4  
                   l2504 102A                     l2512 107A                     l2096 07F8  
                   l2088 0780                     l2360 1302                     l2352 12DC  
                   l2344 12B4                     l2328 115C                     l2336 1176  
                   l2280 150C                     l2418 17B6                     l2258 0DA6  
                   l2610 129A                     l2602 1226                     l2514 1092  
                   l2506 1048                     l2098 081C                     l2522 1A36  
                   l2530 13E0                     l2370 133C                     l2362 130A  
                   l2354 12E4                     l2346 12C2                     l2290 10CC  
                   l2282 151E                     l2612 12A4                     l2604 1256  
                   l2196 0EF2                     l2188 0EAA                     l2516 1098  
                   l2508 1072                     l2524 1A62                     l2540 1420  
                   l2532 13FA                     l2380 1362                     l2372 1344  
                   l2364 1312                     l2356 12E8                     l2348 12CA  
                   l2292 10D8                     l2284 10BE                     l1396 1558  
                   l2276 14C6                     l2390 15E2                     l2606 1286  
                   l2198 0F0E                     l2518 109C                     l2534 1408  
                   l2526 1374                     l2382 136A                     l2374 1346  
                   l2366 1320                     l2358 12F0                     l2294 10E0  
                   l2286 10C2                     l1398 1590                     l2278 14D8  
                   l2550 0B36                     l2542 1886                     l1734 1B70  
                   l2392 15EA                     l2608 1290                     l2536 1414  
                   l2528 13D4                     l2376 134C                     l2368 1326  
                   l2296 10E4                     l2288 10C6                     l2560 0BA8  
                   l2552 0B60                     l2544 0B06                     l1736 1B74  
                   l2394 15F2                     l2386 15C8                     l2538 141A  
                   l2378 1352                     l2298 10EA                     l2570 0BF4  
                   l2562 0BAE                     l2554 0B66                     l2546 0B22  
                   l2730 1444                     l2396 1600                     l2388 15D0  
                   l2580 0C56                     l2572 0C04                     l2564 0BBE  
                   l2556 0B76                     l2548 0B32                     l2740 1468  
                   l2732 1450                     l2724 1428                     l2398 1606  
                   l2494 0F88                     l2582 0C5A                     l2574 0C08  
                   l2566 0BC2                     l2558 0B7A                     l2590 0C6C  
                   l2742 1470                     l2734 1458                     l2750 147C  
                   l2726 1438                     l2496 0F98                     l2584 0C5C  
                   l2576 0C40                     l2568 0BEE                     l2744 1474  
                   l2752 14AE                     l2736 145C                     l2728 143C  
                   l2586 0C60                     l2578 0C46                     l2754 14B2  
                   l2738 1464                     l2596 11C2                     l2780 118A  
                   l1990 08D4                     l2782 0DF6                     l2598 11C6  
                   l1992 08E6                     l2776 1490                     l1994 0906  
                   l2778 0C82                     l1996 0928                     l1988 08B8  
                   l1998 0944                     STR_1 065C                     STR_2 0660  
                   STR_3 0658                     STR_4 0664                     STR_5 064E  
                   STR_6 063A                     STR_7 0630                     STR_8 0626  
                   STR_9 0644                     u2000 17A0                     u2001 179C  
                   u2010 17B6                     u2011 17B2                     u1300 0A34  
                   u1220 0944                     u1204 08F8                     u1301 0A30  
                   u1221 0940                     u1205 08F4                     u1310 0A4E  
                   u1230 095E                     u1214 0918                     u2110 1004  
                   u1311 0A4A                     u1231 095A                     u1215 0914  
                   u2111 1000                     u2104 0FD4                     u1400 0686  
                   u2105 0FCE                     u1401 0682                     u2130 1048  
                   u1410 0698                     u2131 1044                     u1411 0694  
                   u1340 0AAC                     u1324 0A60                     u1260 09BC  
                   u1244 0970                     u1180 08D4                     u2124 101C  
                   u1341 0AA8                     u1325 0A5C                     u1261 09B8  
                   u1245 096C                     u1181 08D0                     u2125 1016  
                   u1350 0AC6                     u1334 0A80                     u1270 09D6  
                   u1254 0990                     u1190 08E6                     u2150 1092  
                   u1351 0AC2                     u1335 0A7C                     u1271 09D2  
                   u1255 098C                     u1191 08E2                     u2151 108E  
                   u2160 10B4                     u2144 1064                     u1520 07E6  
                   u1504 0796                     u1440 06F6                     u1424 06AA  
                   u1600 1930                     u2161 10B0                     u2145 105E  
                   u1521 07E2                     u1505 0792                     u1441 06F2  
                   u1425 06A6                     u1601 192C                     u2090 0FB4  
                   u1530 07F8                     u1514 07BA                     u1450 0708  
                   u1434 06CA                     u1610 164A                     u2170 0B22  
                   u2091 0FB0                     u1531 07F4                     u1515 07B6  
                   u1451 0704                     u1435 06C6                     u1611 1646  
                   u2171 0B1E                     u1364 0AD8                     u1284 09E8  
                   u1380 197A                     u1620 166C                     u1365 0AD4  
                   u1285 09E4                     u1381 1976                     u1621 1668  
                   u1374 0AF8                     u1294 0A08                     u1390 1A96  
                   u1630 168E                     u1375 0AF4                     u1295 0A04  
                   u1391 1A92                     u1631 168A                     u1800 0F56  
                   u1720 0E3A                     u1560 085E                     u1544 080E  
                   u1480 076E                     u1464 071E                     u1640 16B2  
                   u1801 0F52                     u1721 0E36                     u1561 085A  
                   u1545 080A                     u1481 076A                     u1465 071A  
                   u1641 16AE                     u1570 0870                     u1554 0832  
                   u1490 0780                     u1474 0742                     u1650 16D4  
                   u1571 086C                     u1555 082E                     u1491 077C  
                   u1475 073E                     u1651 16D0                     u1740 0E7E  
                   u1900 12C2                     u1660 16F6                     u1741 0E7A  
                   u1901 12BE                     u1661 16F2                     u1814 0F6C  
                   u1734 0E4C                     u1910 12DC                     u1670 172C  
                   u1815 0F68                     u1735 0E48                     u1911 12D8  
                   u1671 1728                     u1840 1840                     u1760 0EC6  
                   u1584 0886                     u1920 1302                     u1680 1744  
                   u1841 183C                     u1761 0EC2                     u1585 0882  
                   u1921 12FE                     u1681 1740                     u1850 1854  
                   u1754 0E94                     u1594 08AA                     u1930 1320  
                   u1690 176E                     u1851 1850                     u1755 0E90  
                   u1595 08A6                     u1931 131C                     u1691 176A  
                   u1860 186A                     u1780 0F0E                     u1940 133C  
                   u1861 1866                     u1781 0F0A                     u1941 1338  
                   u1870 1880                     u1774 0EDC                     u1950 1362  
                   u1871 187C                     u1775 0ED8                     u1951 135E  
                   u1960 15E2                     u1880 14D8                     u1961 15DE  
                   u1881 14D4                     u1970 1600                     u1794 0F24  
                   u1890 151E                     u1971 15FC                     u1795 0F20  
                   u1891 151A                     u1980 161C                     u1981 1618  
                   u1990 1782                     u1991 177E             __CFG_WDTPS$1 000000  
                   _main 1428                     _keys 003C                     _pos1 003E  
       ??_PulseClockData 0007                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000          pushNibble@value 000C            __CFG_MCLRE$ON 000000  
           ___param_bank 000000   __end_of_pulseEnablePin 19C2                    ?_main 0001  
        __end_of___awdiv 1374                    STR_10 061B                    _T0CON 000FD5  
        ___awdiv@divisor 0003           __CFG_DEBUG$OFF 000000          __end_of___lwdiv 163C  
        __end_of___lwmod 17D4          ___awdiv@counter 0005                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061B                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000          __end_of_lcdChar 1B30  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
        __end_of_lcdInit 1428           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _tecla 0036          __end_of_pinMode 08B8  
                  _valor 0601                    _tempo 0034                    _luzes 14C6  
         __CFG_BOREN$OFF 000000          __end_of_soWrite 1980                    tablat 000FF5  
        __end_of_ssdInit 18DC                    status 000FD8          __end_of_turnOff 170C  
         __CFG_PBADEN$ON 000000             pushNibble@rs 000A     __end_of_digitalWrite 0B06  
        __initialization 1A00          ?_pulseEnablePin 0001             __end_of_main 14C6  
                 ??_main 0019            __activetblptr 000002     __size_of_digitalRead 016A  
                 _ADCON1 000FC1         ___awdiv@dividend 0001                   ?_luzes 0001  
           atraso_ms@num 0001                   _INTCON 000FF2           __CFG_XINST$OFF 000000  
              ??___awdiv 0005                ??___lwdiv 0005                ??___lwmod 000C  
                 _kpInit 1A36                   _kpRead 1B66                   clear_0 1A26  
                 _soInit 19C2         ___awdiv@quotient 0007                ??_lcdChar 000E  
              ??_lcdInit 000F                   _turnOn 163C         __end_of_ssdDigit 1886  
           __pdataCOMRAM 001C                ??_pinMode 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009                ??_ssdInit 0007         __end_of_pushByte 182E  
              ??_turnOff 0009               __accesstop 0080  __end_of__initialization 1A2C  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_valor 0611            __end_of_luzes 1550  
     __size_of_delayMili 0030       __size_of_leTeclado 01AC             cronometro@v0 000D  
           cronometro@v1 000F             cronometro@v2 0011             cronometro@v3 0013  
     __size_of_lcdString 0056       __size_of_geraconta 0104       __size_of_kpReadKey 0078  
                ??_luzes 0009       __size_of_atraso_ms 0064    __size_of_digitalWrite 024E  
             _delayMicro 1B78               _lcdCommand 1B30                  ?_kpInit 0001  
                ?_kpRead 0001                  ?_soInit 0001               _kpDebounce 0F88  
                ?_turnOn 0007       __size_of_timerInit 0008       __size_of_ssdUpdate 016C  
           _digitalWrite 08B8        __end_of_delayMili 1A98         ??_pulseEnablePin 0007  
      __end_of_leTeclado 0CB2               _cronometro 11C2                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 0001        __end_of_lcdString 1932  
      __end_of_geraconta 11C2          kpDebounce@tempo 0048        __end_of_kpReadKey 15C8  
                ___awdiv 12B0                ?_pushByte 000A                  ___lwdiv 15C8  
                ___lwmod 1770        __end_of_atraso_ms 1770             __psmallconst 0600  
        __size_of_kpInit 0032          __size_of_kpRead 000A          __CFG_STVREN$OFF 000000  
                _charKey 0611              ssdDigit@val 0002              ssdDigit@pos 0001  
                __pcinit 1A00                  _lcdChar 1B12                  __ramtop 0600  
        __size_of_soInit 003E                  _lcdInit 1374                  __ptext0 1428  
                __ptext1 1B70                  __ptext2 1886                  __ptext3 0B06  
                __ptext4 14C6                  __ptext5 163C                  __ptext6 16A4  
                __ptext7 170C                  __ptext8 1550                  __ptext9 1B66  
                _display 0047          __size_of_turnOn 0068                  _pinMode 066A  
             delayMili@a 0001               delayMili@i 0004                  _soWrite 1932  
                _ssdInit 1886                  _started 0049                  _turnOff 16A4  
   end_of_initialization 1A2C            ?_PulseEnClock 0001            __Lmediumconst 0000  
         digitalRead@pin 0001              ?_delayMicro 0001        __end_of_timerInit 1B78  
      __end_of_ssdUpdate 0E1E               ??_ssdDigit 0002                  postdec1 000FE5  
                postdec2 000FDD              ?_lcdCommand 0001                  postinc0 000FEE  
                postinc2 000FDE               ??_pushByte 000C  __size_of_PulseClockData 002A  
          ??_digitalRead 0003              ?_kpDebounce 0001               _pushNibble 1AEC  
             lcdString@i 0013           ??_PulseEnClock 0007               kpReadKey@i 0004  
            ?_cronometro 0001               atraso_ms@i 0003               atraso_ms@j 0005  
             atraso_ms@k 0006            __pidataCOMRAM 1B4E           __end_of_kpInit 1A68  
         __end_of_kpRead 1B70           __end_of_soInit 1A00           __end_of_turnOn 16A4  
    __size_of_delayMicro 0002      start_initialization 1A00      __end_of_digitalRead 0F88  
    __size_of_lcdCommand 001E      __size_of_kpDebounce 0136        kpDebounce@oldRead 0038  
      kpDebounce@newRead 003A                 ??_kpInit 0007                 ??_kpRead 0003  
       __CFG_LPT1OSC$OFF 000000                 ??_soInit 0007                 ??_turnOn 0009  
            __pbssCOMRAM 0034              ?_pushNibble 000A               pinMode@pin 0001  
    __size_of_cronometro 00EE                _delayMili 1A68         ___lwdiv@dividend 0001  
      __CFG_CCP2MX$PORTC 000000                _leTeclado 0B06                 ?___awdiv 0001  
      __size_of_ssdDigit 0058           _PulseClockData 1AC2                 ?___lwdiv 0001  
               ?___lwmod 0008     __end_of_PulseEnClock 1AC2                _lcdString 18DC  
              _geraconta 10BE              _digitalRead 0E1E                 ?_lcdChar 0001  
      __size_of_pushByte 005A                 ?_lcdInit 0001                _kpReadKey 1550  
              _atraso_ms 170C              __smallconst 0600                 ?_pinMode 0001  
               ?_soWrite 0007                 ?_ssdInit 0001         ___lwdiv@quotient 0005  
               ?_turnOff 0007           __size_of_luzes 008A             ??_delayMicro 0003  
             ?_delayMili 0001   __end_of_PulseClockData 1AEC               ?_leTeclado 0001  
    __size_of_pushNibble 0026             ??_lcdCommand 000E                _timerInit 1B70  
              _ssdUpdate 0CB2               ?_lcdString 000F               ?_geraconta 0001  
           ??_kpDebounce 000A               ?_kpReadKey 0001               ?_atraso_ms 0001  
        lcdCommand@value 000E       __end_of_delayMicro 1B7A                copy_data0 1A14  
     __end_of_lcdCommand 1B4E               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 10BE             ??_cronometro 000D                 __Hrparam 0000  
               __Lrparam 0000          ?_PulseClockData 0001               ?_timerInit 0001  
             ?_ssdUpdate 0001         __size_of___awdiv 00C4  __size_of_pulseEnablePin 0042  
       __size_of___lwdiv 0074         __size_of___lwmod 0064         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4                 _gabarito 003F         __size_of_pinMode 024E  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007       __end_of_cronometro 12B0  
               __ptext10 10BE                 __ptext11 18DC                 __ptext20 1A68  
               __ptext12 1B12                 __ptext21 1A36                 __ptext13 12B0  
               __ptext30 1AC2                 __ptext22 19C2                 __ptext14 1374  
               __ptext31 08B8                 __ptext23 066A                 __ptext15 1AEC  
               __ptext32 182E                 __ptext24 0F88                 __ptext16 1B30  
               __ptext33 1770                 __ptext25 0E1E                 __ptext17 17D4  
               __ptext34 15C8                 __ptext26 11C2                 __ptext18 1980  
               __ptext27 0CB2                 __ptext19 1B78                 __ptext28 1932  
               __ptext29 1A98         __size_of_soWrite 004E         __size_of_ssdInit 0056  
       __size_of_turnOff 0068            __size_of_main 009E               turnOff@led 0007  
            ??_delayMili 0003    __size_of_PulseEnClock 002A                 _ssdDigit 182E  
            delayMicro@a 0001                 _resposta 0040              ??_leTeclado 0017  
           soWrite@value 0007                 _verifica 0042                 _pushByte 17D4  
            ??_lcdString 0011              ??_geraconta 0015                 main@slot 001B  
            ??_kpReadKey 0001              ??_atraso_ms 0003             ??_pushNibble 000C  
          ?_digitalWrite 0001             _PulseEnClock 1A98        digitalWrite@value 0003  
       ___lwmod@dividend 0008                turnOn@led 0007                 soWrite@i 0009  
            ??_timerInit 0001              ??_ssdUpdate 000A       __end_of_pushNibble 1B12  
           ?_digitalRead 0001          ___lwmod@divisor 000A              kpDebounce@i 000D  
        ___lwmod@counter 000C           ??_digitalWrite 0005          digitalWrite@pin 0001  
